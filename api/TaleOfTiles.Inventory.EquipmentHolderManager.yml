### YamlMime:ManagedReference
items:
- uid: TaleOfTiles.Inventory.EquipmentHolderManager
  commentId: T:TaleOfTiles.Inventory.EquipmentHolderManager
  id: EquipmentHolderManager
  parent: TaleOfTiles.Inventory
  children:
  - TaleOfTiles.Inventory.EquipmentHolderManager.AddItem(System.String)
  - TaleOfTiles.Inventory.EquipmentHolderManager.GetActiveItemByPlace(ItemPlace)
  - TaleOfTiles.Inventory.EquipmentHolderManager.GetActiveItems
  - TaleOfTiles.Inventory.EquipmentHolderManager.GetItem(System.String)
  - TaleOfTiles.Inventory.EquipmentHolderManager.GetItemsByPlace(ItemPlace)
  - TaleOfTiles.Inventory.EquipmentHolderManager.LoadAllItemsInGame
  - TaleOfTiles.Inventory.EquipmentHolderManager.LoadPlayerInventory
  - TaleOfTiles.Inventory.EquipmentHolderManager.Prepare
  - TaleOfTiles.Inventory.EquipmentHolderManager.RemoveActiveItem(System.String)
  - TaleOfTiles.Inventory.EquipmentHolderManager.SetItemActive(System.String)
  - TaleOfTiles.Inventory.EquipmentHolderManager.all_game_equipment
  - TaleOfTiles.Inventory.EquipmentHolderManager.all_items_dict
  - TaleOfTiles.Inventory.EquipmentHolderManager.all_player_equipment
  - TaleOfTiles.Inventory.EquipmentHolderManager.player_active_equipment
  langs:
  - csharp
  - vb
  name: EquipmentHolderManager
  nameWithType: EquipmentHolderManager
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager
  type: Class
  source:
    remote:
      path: Assets/Scripts/Data Management/EquipmentHolderManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: EquipmentHolderManager
    path: ../Assets/Scripts/Data Management/EquipmentHolderManager.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Inventory
  summary: >-
    Manages the equipment items in the game, including all available items, player's equipment, and active equipment.

    Inherits from Singleton to ensure only one instance exists.
  example: []
  syntax:
    content: 'public class EquipmentHolderManager : Singleton<EquipmentHolderManager>'
    content.vb: Public Class EquipmentHolderManager Inherits Singleton(Of EquipmentHolderManager)
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - TaleOfTiles.Misc.SingletonBase
  - TaleOfTiles.Misc.Singleton{TaleOfTiles.Inventory.EquipmentHolderManager}
  inheritedMembers:
  - TaleOfTiles.Misc.Singleton{TaleOfTiles.Inventory.EquipmentHolderManager}.m_instance
  - TaleOfTiles.Misc.Singleton{TaleOfTiles.Inventory.EquipmentHolderManager}.Instance
  - TaleOfTiles.Misc.Singleton{TaleOfTiles.Inventory.EquipmentHolderManager}.Awake
  - TaleOfTiles.Misc.SingletonBase.AllSingletons
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.all_items_dict
  commentId: F:TaleOfTiles.Inventory.EquipmentHolderManager.all_items_dict
  id: all_items_dict
  parent: TaleOfTiles.Inventory.EquipmentHolderManager
  langs:
  - csharp
  - vb
  name: all_items_dict
  nameWithType: EquipmentHolderManager.all_items_dict
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.all_items_dict
  type: Field
  source:
    remote:
      path: Assets/Scripts/Data Management/EquipmentHolderManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: all_items_dict
    path: ../Assets/Scripts/Data Management/EquipmentHolderManager.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Inventory
  syntax:
    content: >-
      [SerializeField]

      private Dictionary<string, EquipmentItem> all_items_dict
    return:
      type: System.Collections.Generic.Dictionary{System.String,EquipmentItem}
    content.vb: >-
      <SerializeField>

      Private all_items_dict As Dictionary(Of String, EquipmentItem)
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.all_game_equipment
  commentId: F:TaleOfTiles.Inventory.EquipmentHolderManager.all_game_equipment
  id: all_game_equipment
  parent: TaleOfTiles.Inventory.EquipmentHolderManager
  langs:
  - csharp
  - vb
  name: all_game_equipment
  nameWithType: EquipmentHolderManager.all_game_equipment
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.all_game_equipment
  type: Field
  source:
    remote:
      path: Assets/Scripts/Data Management/EquipmentHolderManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: all_game_equipment
    path: ../Assets/Scripts/Data Management/EquipmentHolderManager.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Inventory
  syntax:
    content: >-
      [SerializeField]

      private List<EquipmentItem> all_game_equipment
    return:
      type: System.Collections.Generic.List{EquipmentItem}
    content.vb: >-
      <SerializeField>

      Private all_game_equipment As List(Of EquipmentItem)
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.all_player_equipment
  commentId: F:TaleOfTiles.Inventory.EquipmentHolderManager.all_player_equipment
  id: all_player_equipment
  parent: TaleOfTiles.Inventory.EquipmentHolderManager
  langs:
  - csharp
  - vb
  name: all_player_equipment
  nameWithType: EquipmentHolderManager.all_player_equipment
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.all_player_equipment
  type: Field
  source:
    remote:
      path: Assets/Scripts/Data Management/EquipmentHolderManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: all_player_equipment
    path: ../Assets/Scripts/Data Management/EquipmentHolderManager.cs
    startLine: 20
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Inventory
  syntax:
    content: >-
      [SerializeField]

      public List<EquipmentItem> all_player_equipment
    return:
      type: System.Collections.Generic.List{EquipmentItem}
    content.vb: >-
      <SerializeField>

      Public all_player_equipment As List(Of EquipmentItem)
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.player_active_equipment
  commentId: F:TaleOfTiles.Inventory.EquipmentHolderManager.player_active_equipment
  id: player_active_equipment
  parent: TaleOfTiles.Inventory.EquipmentHolderManager
  langs:
  - csharp
  - vb
  name: player_active_equipment
  nameWithType: EquipmentHolderManager.player_active_equipment
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.player_active_equipment
  type: Field
  source:
    remote:
      path: Assets/Scripts/Data Management/EquipmentHolderManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: player_active_equipment
    path: ../Assets/Scripts/Data Management/EquipmentHolderManager.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Inventory
  syntax:
    content: >-
      [SerializeField]

      public List<EquipmentItem> player_active_equipment
    return:
      type: System.Collections.Generic.List{EquipmentItem}
    content.vb: >-
      <SerializeField>

      Public player_active_equipment As List(Of EquipmentItem)
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.Prepare
  commentId: M:TaleOfTiles.Inventory.EquipmentHolderManager.Prepare
  id: Prepare
  parent: TaleOfTiles.Inventory.EquipmentHolderManager
  langs:
  - csharp
  - vb
  name: Prepare()
  nameWithType: EquipmentHolderManager.Prepare()
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.Prepare()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Data Management/EquipmentHolderManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: Prepare
    path: ../Assets/Scripts/Data Management/EquipmentHolderManager.cs
    startLine: 28
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Inventory
  summary: Prepares the EquipmentHolderManager by loading all items in the game and the player's inventory.
  example: []
  syntax:
    content: public override IEnumerator Prepare()
    return:
      type: System.Collections.IEnumerator
      description: Coroutine for asynchronous operation.
    content.vb: Public Overrides Function Prepare() As IEnumerator
  overridden: TaleOfTiles.Misc.Singleton{TaleOfTiles.Inventory.EquipmentHolderManager}.Prepare
  overload: TaleOfTiles.Inventory.EquipmentHolderManager.Prepare*
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.GetActiveItems
  commentId: M:TaleOfTiles.Inventory.EquipmentHolderManager.GetActiveItems
  id: GetActiveItems
  parent: TaleOfTiles.Inventory.EquipmentHolderManager
  langs:
  - csharp
  - vb
  name: GetActiveItems()
  nameWithType: EquipmentHolderManager.GetActiveItems()
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.GetActiveItems()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Data Management/EquipmentHolderManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: GetActiveItems
    path: ../Assets/Scripts/Data Management/EquipmentHolderManager.cs
    startLine: 40
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Inventory
  summary: Retrieves the list of active equipment items for the player.
  example: []
  syntax:
    content: public List<EquipmentItem> GetActiveItems()
    return:
      type: System.Collections.Generic.List{EquipmentItem}
      description: List of active equipment items.
    content.vb: Public Function GetActiveItems() As List(Of EquipmentItem)
  overload: TaleOfTiles.Inventory.EquipmentHolderManager.GetActiveItems*
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.SetItemActive(System.String)
  commentId: M:TaleOfTiles.Inventory.EquipmentHolderManager.SetItemActive(System.String)
  id: SetItemActive(System.String)
  parent: TaleOfTiles.Inventory.EquipmentHolderManager
  langs:
  - csharp
  - vb
  name: SetItemActive(string)
  nameWithType: EquipmentHolderManager.SetItemActive(string)
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.SetItemActive(string)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Data Management/EquipmentHolderManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: SetItemActive
    path: ../Assets/Scripts/Data Management/EquipmentHolderManager.cs
    startLine: 50
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Inventory
  summary: Activates an item by its ID. If another item is active in the same slot, it is removed.
  example: []
  syntax:
    content: public bool SetItemActive(string ID)
    parameters:
    - id: ID
      type: System.String
      description: The ID of the item to activate.
    return:
      type: System.Boolean
      description: True if the item was successfully activated, false otherwise.
    content.vb: Public Function SetItemActive(ID As String) As Boolean
  overload: TaleOfTiles.Inventory.EquipmentHolderManager.SetItemActive*
  nameWithType.vb: EquipmentHolderManager.SetItemActive(String)
  fullName.vb: TaleOfTiles.Inventory.EquipmentHolderManager.SetItemActive(String)
  name.vb: SetItemActive(String)
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.GetActiveItemByPlace(ItemPlace)
  commentId: M:TaleOfTiles.Inventory.EquipmentHolderManager.GetActiveItemByPlace(ItemPlace)
  id: GetActiveItemByPlace(ItemPlace)
  parent: TaleOfTiles.Inventory.EquipmentHolderManager
  langs:
  - csharp
  - vb
  name: GetActiveItemByPlace(ItemPlace)
  nameWithType: EquipmentHolderManager.GetActiveItemByPlace(ItemPlace)
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.GetActiveItemByPlace(ItemPlace)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Data Management/EquipmentHolderManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: GetActiveItemByPlace
    path: ../Assets/Scripts/Data Management/EquipmentHolderManager.cs
    startLine: 76
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Inventory
  summary: Retrieves an active equipment item by its specified place.
  example: []
  syntax:
    content: public EquipmentItem GetActiveItemByPlace(ItemPlace place)
    parameters:
    - id: place
      type: ItemPlace
      description: The place of the item in the inventory.
    return:
      type: EquipmentItem
      description: The active equipment item in the specified place, or null if not found.
    content.vb: Public Function GetActiveItemByPlace(place As ItemPlace) As EquipmentItem
  overload: TaleOfTiles.Inventory.EquipmentHolderManager.GetActiveItemByPlace*
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.GetItemsByPlace(ItemPlace)
  commentId: M:TaleOfTiles.Inventory.EquipmentHolderManager.GetItemsByPlace(ItemPlace)
  id: GetItemsByPlace(ItemPlace)
  parent: TaleOfTiles.Inventory.EquipmentHolderManager
  langs:
  - csharp
  - vb
  name: GetItemsByPlace(ItemPlace)
  nameWithType: EquipmentHolderManager.GetItemsByPlace(ItemPlace)
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.GetItemsByPlace(ItemPlace)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Data Management/EquipmentHolderManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: GetItemsByPlace
    path: ../Assets/Scripts/Data Management/EquipmentHolderManager.cs
    startLine: 86
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Inventory
  summary: Retrieves all equipment items by their specified place.
  example: []
  syntax:
    content: public List<EquipmentItem> GetItemsByPlace(ItemPlace place)
    parameters:
    - id: place
      type: ItemPlace
      description: The place of the items in the inventory.
    return:
      type: System.Collections.Generic.List{EquipmentItem}
      description: A list of equipment items in the specified place.
    content.vb: Public Function GetItemsByPlace(place As ItemPlace) As List(Of EquipmentItem)
  overload: TaleOfTiles.Inventory.EquipmentHolderManager.GetItemsByPlace*
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.GetItem(System.String)
  commentId: M:TaleOfTiles.Inventory.EquipmentHolderManager.GetItem(System.String)
  id: GetItem(System.String)
  parent: TaleOfTiles.Inventory.EquipmentHolderManager
  langs:
  - csharp
  - vb
  name: GetItem(string)
  nameWithType: EquipmentHolderManager.GetItem(string)
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.GetItem(string)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Data Management/EquipmentHolderManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: GetItem
    path: ../Assets/Scripts/Data Management/EquipmentHolderManager.cs
    startLine: 97
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Inventory
  summary: Retrieves an equipment item by its ID.
  example: []
  syntax:
    content: public EquipmentItem GetItem(string ID)
    parameters:
    - id: ID
      type: System.String
      description: The unique identifier of the item.
    return:
      type: EquipmentItem
      description: The equipment item with the specified ID, or null if not found.
    content.vb: Public Function GetItem(ID As String) As EquipmentItem
  overload: TaleOfTiles.Inventory.EquipmentHolderManager.GetItem*
  nameWithType.vb: EquipmentHolderManager.GetItem(String)
  fullName.vb: TaleOfTiles.Inventory.EquipmentHolderManager.GetItem(String)
  name.vb: GetItem(String)
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.AddItem(System.String)
  commentId: M:TaleOfTiles.Inventory.EquipmentHolderManager.AddItem(System.String)
  id: AddItem(System.String)
  parent: TaleOfTiles.Inventory.EquipmentHolderManager
  langs:
  - csharp
  - vb
  name: AddItem(string)
  nameWithType: EquipmentHolderManager.AddItem(string)
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.AddItem(string)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Data Management/EquipmentHolderManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: AddItem
    path: ../Assets/Scripts/Data Management/EquipmentHolderManager.cs
    startLine: 114
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Inventory
  summary: Adds an item to the player's equipment by its ID.
  example: []
  syntax:
    content: public bool AddItem(string ID)
    parameters:
    - id: ID
      type: System.String
      description: The unique identifier of the item to add.
    return:
      type: System.Boolean
      description: True if the item was successfully added, false otherwise.
    content.vb: Public Function AddItem(ID As String) As Boolean
  overload: TaleOfTiles.Inventory.EquipmentHolderManager.AddItem*
  nameWithType.vb: EquipmentHolderManager.AddItem(String)
  fullName.vb: TaleOfTiles.Inventory.EquipmentHolderManager.AddItem(String)
  name.vb: AddItem(String)
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.RemoveActiveItem(System.String)
  commentId: M:TaleOfTiles.Inventory.EquipmentHolderManager.RemoveActiveItem(System.String)
  id: RemoveActiveItem(System.String)
  parent: TaleOfTiles.Inventory.EquipmentHolderManager
  langs:
  - csharp
  - vb
  name: RemoveActiveItem(string)
  nameWithType: EquipmentHolderManager.RemoveActiveItem(string)
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.RemoveActiveItem(string)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Data Management/EquipmentHolderManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: RemoveActiveItem
    path: ../Assets/Scripts/Data Management/EquipmentHolderManager.cs
    startLine: 135
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Inventory
  summary: Removes an active item from the player's equipment by its ID.
  example: []
  syntax:
    content: public bool RemoveActiveItem(string ID)
    parameters:
    - id: ID
      type: System.String
      description: The unique identifier of the item to remove.
    return:
      type: System.Boolean
      description: True if the item was successfully removed, false otherwise.
    content.vb: Public Function RemoveActiveItem(ID As String) As Boolean
  overload: TaleOfTiles.Inventory.EquipmentHolderManager.RemoveActiveItem*
  nameWithType.vb: EquipmentHolderManager.RemoveActiveItem(String)
  fullName.vb: TaleOfTiles.Inventory.EquipmentHolderManager.RemoveActiveItem(String)
  name.vb: RemoveActiveItem(String)
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.LoadPlayerInventory
  commentId: M:TaleOfTiles.Inventory.EquipmentHolderManager.LoadPlayerInventory
  id: LoadPlayerInventory
  parent: TaleOfTiles.Inventory.EquipmentHolderManager
  langs:
  - csharp
  - vb
  name: LoadPlayerInventory()
  nameWithType: EquipmentHolderManager.LoadPlayerInventory()
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.LoadPlayerInventory()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Data Management/EquipmentHolderManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: LoadPlayerInventory
    path: ../Assets/Scripts/Data Management/EquipmentHolderManager.cs
    startLine: 154
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Inventory
  summary: Loads the player's inventory asynchronously.
  example: []
  syntax:
    content: public IEnumerator LoadPlayerInventory()
    return:
      type: System.Collections.IEnumerator
      description: An IEnumerator for coroutine compatibility.
    content.vb: Public Function LoadPlayerInventory() As IEnumerator
  overload: TaleOfTiles.Inventory.EquipmentHolderManager.LoadPlayerInventory*
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.LoadAllItemsInGame
  commentId: M:TaleOfTiles.Inventory.EquipmentHolderManager.LoadAllItemsInGame
  id: LoadAllItemsInGame
  parent: TaleOfTiles.Inventory.EquipmentHolderManager
  langs:
  - csharp
  - vb
  name: LoadAllItemsInGame()
  nameWithType: EquipmentHolderManager.LoadAllItemsInGame()
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.LoadAllItemsInGame()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Data Management/EquipmentHolderManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: LoadAllItemsInGame
    path: ../Assets/Scripts/Data Management/EquipmentHolderManager.cs
    startLine: 196
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Inventory
  summary: Loads all equipment items in the game asynchronously.
  example: []
  syntax:
    content: public IEnumerator LoadAllItemsInGame()
    return:
      type: System.Collections.IEnumerator
      description: An IEnumerator for coroutine compatibility.
    content.vb: Public Function LoadAllItemsInGame() As IEnumerator
  overload: TaleOfTiles.Inventory.EquipmentHolderManager.LoadAllItemsInGame*
references:
- uid: TaleOfTiles.Inventory
  commentId: N:TaleOfTiles.Inventory
  href: TaleOfTiles.html
  name: TaleOfTiles.Inventory
  nameWithType: TaleOfTiles.Inventory
  fullName: TaleOfTiles.Inventory
  spec.csharp:
  - uid: TaleOfTiles
    name: TaleOfTiles
    href: TaleOfTiles.html
  - name: .
  - uid: TaleOfTiles.Inventory
    name: Inventory
    href: TaleOfTiles.Inventory.html
  spec.vb:
  - uid: TaleOfTiles
    name: TaleOfTiles
    href: TaleOfTiles.html
  - name: .
  - uid: TaleOfTiles.Inventory
    name: Inventory
    href: TaleOfTiles.Inventory.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: TaleOfTiles.Misc.SingletonBase
  commentId: T:TaleOfTiles.Misc.SingletonBase
  parent: TaleOfTiles.Misc
  href: TaleOfTiles.Misc.SingletonBase.html
  name: SingletonBase
  nameWithType: SingletonBase
  fullName: TaleOfTiles.Misc.SingletonBase
- uid: TaleOfTiles.Misc.Singleton{TaleOfTiles.Inventory.EquipmentHolderManager}
  commentId: T:TaleOfTiles.Misc.Singleton{TaleOfTiles.Inventory.EquipmentHolderManager}
  parent: TaleOfTiles.Misc
  definition: TaleOfTiles.Misc.Singleton`1
  href: TaleOfTiles.Misc.Singleton-1.html
  name: Singleton<EquipmentHolderManager>
  nameWithType: Singleton<EquipmentHolderManager>
  fullName: TaleOfTiles.Misc.Singleton<TaleOfTiles.Inventory.EquipmentHolderManager>
  nameWithType.vb: Singleton(Of EquipmentHolderManager)
  fullName.vb: TaleOfTiles.Misc.Singleton(Of TaleOfTiles.Inventory.EquipmentHolderManager)
  name.vb: Singleton(Of EquipmentHolderManager)
  spec.csharp:
  - uid: TaleOfTiles.Misc.Singleton`1
    name: Singleton
    href: TaleOfTiles.Misc.Singleton-1.html
  - name: <
  - uid: TaleOfTiles.Inventory.EquipmentHolderManager
    name: EquipmentHolderManager
    href: TaleOfTiles.Inventory.EquipmentHolderManager.html
  - name: '>'
  spec.vb:
  - uid: TaleOfTiles.Misc.Singleton`1
    name: Singleton
    href: TaleOfTiles.Misc.Singleton-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: TaleOfTiles.Inventory.EquipmentHolderManager
    name: EquipmentHolderManager
    href: TaleOfTiles.Inventory.EquipmentHolderManager.html
  - name: )
- uid: TaleOfTiles.Misc.Singleton{TaleOfTiles.Inventory.EquipmentHolderManager}.m_instance
  commentId: F:TaleOfTiles.Misc.Singleton{TaleOfTiles.Inventory.EquipmentHolderManager}.m_instance
  parent: TaleOfTiles.Misc.Singleton{TaleOfTiles.Inventory.EquipmentHolderManager}
  definition: TaleOfTiles.Misc.Singleton`1.m_instance
  href: TaleOfTiles.Misc.Singleton-1.html#TaleOfTiles_Misc_Singleton_1_m_instance
  name: m_instance
  nameWithType: Singleton<EquipmentHolderManager>.m_instance
  fullName: TaleOfTiles.Misc.Singleton<TaleOfTiles.Inventory.EquipmentHolderManager>.m_instance
  nameWithType.vb: Singleton(Of EquipmentHolderManager).m_instance
  fullName.vb: TaleOfTiles.Misc.Singleton(Of TaleOfTiles.Inventory.EquipmentHolderManager).m_instance
- uid: TaleOfTiles.Misc.Singleton{TaleOfTiles.Inventory.EquipmentHolderManager}.Instance
  commentId: P:TaleOfTiles.Misc.Singleton{TaleOfTiles.Inventory.EquipmentHolderManager}.Instance
  parent: TaleOfTiles.Misc.Singleton{TaleOfTiles.Inventory.EquipmentHolderManager}
  definition: TaleOfTiles.Misc.Singleton`1.Instance
  href: TaleOfTiles.Misc.Singleton-1.html#TaleOfTiles_Misc_Singleton_1_Instance
  name: Instance
  nameWithType: Singleton<EquipmentHolderManager>.Instance
  fullName: TaleOfTiles.Misc.Singleton<TaleOfTiles.Inventory.EquipmentHolderManager>.Instance
  nameWithType.vb: Singleton(Of EquipmentHolderManager).Instance
  fullName.vb: TaleOfTiles.Misc.Singleton(Of TaleOfTiles.Inventory.EquipmentHolderManager).Instance
- uid: TaleOfTiles.Misc.Singleton{TaleOfTiles.Inventory.EquipmentHolderManager}.Awake
  commentId: M:TaleOfTiles.Misc.Singleton{TaleOfTiles.Inventory.EquipmentHolderManager}.Awake
  parent: TaleOfTiles.Misc.Singleton{TaleOfTiles.Inventory.EquipmentHolderManager}
  definition: TaleOfTiles.Misc.Singleton`1.Awake
  href: TaleOfTiles.Misc.Singleton-1.html#TaleOfTiles_Misc_Singleton_1_Awake
  name: Awake()
  nameWithType: Singleton<EquipmentHolderManager>.Awake()
  fullName: TaleOfTiles.Misc.Singleton<TaleOfTiles.Inventory.EquipmentHolderManager>.Awake()
  nameWithType.vb: Singleton(Of EquipmentHolderManager).Awake()
  fullName.vb: TaleOfTiles.Misc.Singleton(Of TaleOfTiles.Inventory.EquipmentHolderManager).Awake()
  spec.csharp:
  - uid: TaleOfTiles.Misc.Singleton{TaleOfTiles.Inventory.EquipmentHolderManager}.Awake
    name: Awake
    href: TaleOfTiles.Misc.Singleton-1.html#TaleOfTiles_Misc_Singleton_1_Awake
  - name: (
  - name: )
  spec.vb:
  - uid: TaleOfTiles.Misc.Singleton{TaleOfTiles.Inventory.EquipmentHolderManager}.Awake
    name: Awake
    href: TaleOfTiles.Misc.Singleton-1.html#TaleOfTiles_Misc_Singleton_1_Awake
  - name: (
  - name: )
- uid: TaleOfTiles.Misc.SingletonBase.AllSingletons
  commentId: F:TaleOfTiles.Misc.SingletonBase.AllSingletons
  parent: TaleOfTiles.Misc.SingletonBase
  href: TaleOfTiles.Misc.SingletonBase.html#TaleOfTiles_Misc_SingletonBase_AllSingletons
  name: AllSingletons
  nameWithType: SingletonBase.AllSingletons
  fullName: TaleOfTiles.Misc.SingletonBase.AllSingletons
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: TaleOfTiles.Misc
  commentId: N:TaleOfTiles.Misc
  href: TaleOfTiles.html
  name: TaleOfTiles.Misc
  nameWithType: TaleOfTiles.Misc
  fullName: TaleOfTiles.Misc
  spec.csharp:
  - uid: TaleOfTiles
    name: TaleOfTiles
    href: TaleOfTiles.html
  - name: .
  - uid: TaleOfTiles.Misc
    name: Misc
    href: TaleOfTiles.Misc.html
  spec.vb:
  - uid: TaleOfTiles
    name: TaleOfTiles
    href: TaleOfTiles.html
  - name: .
  - uid: TaleOfTiles.Misc
    name: Misc
    href: TaleOfTiles.Misc.html
- uid: TaleOfTiles.Misc.Singleton`1
  commentId: T:TaleOfTiles.Misc.Singleton`1
  href: TaleOfTiles.Misc.Singleton-1.html
  name: Singleton<T>
  nameWithType: Singleton<T>
  fullName: TaleOfTiles.Misc.Singleton<T>
  nameWithType.vb: Singleton(Of T)
  fullName.vb: TaleOfTiles.Misc.Singleton(Of T)
  name.vb: Singleton(Of T)
  spec.csharp:
  - uid: TaleOfTiles.Misc.Singleton`1
    name: Singleton
    href: TaleOfTiles.Misc.Singleton-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: TaleOfTiles.Misc.Singleton`1
    name: Singleton
    href: TaleOfTiles.Misc.Singleton-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TaleOfTiles.Misc.Singleton`1.m_instance
  commentId: F:TaleOfTiles.Misc.Singleton`1.m_instance
  href: TaleOfTiles.Misc.Singleton-1.html#TaleOfTiles_Misc_Singleton_1_m_instance
  name: m_instance
  nameWithType: Singleton<T>.m_instance
  fullName: TaleOfTiles.Misc.Singleton<T>.m_instance
  nameWithType.vb: Singleton(Of T).m_instance
  fullName.vb: TaleOfTiles.Misc.Singleton(Of T).m_instance
- uid: TaleOfTiles.Misc.Singleton`1.Instance
  commentId: P:TaleOfTiles.Misc.Singleton`1.Instance
  href: TaleOfTiles.Misc.Singleton-1.html#TaleOfTiles_Misc_Singleton_1_Instance
  name: Instance
  nameWithType: Singleton<T>.Instance
  fullName: TaleOfTiles.Misc.Singleton<T>.Instance
  nameWithType.vb: Singleton(Of T).Instance
  fullName.vb: TaleOfTiles.Misc.Singleton(Of T).Instance
- uid: TaleOfTiles.Misc.Singleton`1.Awake
  commentId: M:TaleOfTiles.Misc.Singleton`1.Awake
  href: TaleOfTiles.Misc.Singleton-1.html#TaleOfTiles_Misc_Singleton_1_Awake
  name: Awake()
  nameWithType: Singleton<T>.Awake()
  fullName: TaleOfTiles.Misc.Singleton<T>.Awake()
  nameWithType.vb: Singleton(Of T).Awake()
  fullName.vb: TaleOfTiles.Misc.Singleton(Of T).Awake()
  spec.csharp:
  - uid: TaleOfTiles.Misc.Singleton`1.Awake
    name: Awake
    href: TaleOfTiles.Misc.Singleton-1.html#TaleOfTiles_Misc_Singleton_1_Awake
  - name: (
  - name: )
  spec.vb:
  - uid: TaleOfTiles.Misc.Singleton`1.Awake
    name: Awake
    href: TaleOfTiles.Misc.Singleton-1.html#TaleOfTiles_Misc_Singleton_1_Awake
  - name: (
  - name: )
- uid: System.Collections.Generic.Dictionary{System.String,EquipmentItem}
  commentId: T:System.Collections.Generic.Dictionary{System.String,EquipmentItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, EquipmentItem>
  nameWithType: Dictionary<string, EquipmentItem>
  fullName: System.Collections.Generic.Dictionary<string, EquipmentItem>
  nameWithType.vb: Dictionary(Of String, EquipmentItem)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, EquipmentItem)
  name.vb: Dictionary(Of String, EquipmentItem)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EquipmentItem
    name: EquipmentItem
    href: EquipmentItem.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: EquipmentItem
    name: EquipmentItem
    href: EquipmentItem.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.List{EquipmentItem}
  commentId: T:System.Collections.Generic.List{EquipmentItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<EquipmentItem>
  nameWithType: List<EquipmentItem>
  fullName: System.Collections.Generic.List<EquipmentItem>
  nameWithType.vb: List(Of EquipmentItem)
  fullName.vb: System.Collections.Generic.List(Of EquipmentItem)
  name.vb: List(Of EquipmentItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: EquipmentItem
    name: EquipmentItem
    href: EquipmentItem.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: EquipmentItem
    name: EquipmentItem
    href: EquipmentItem.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TaleOfTiles.Misc.Singleton{TaleOfTiles.Inventory.EquipmentHolderManager}.Prepare
  commentId: M:TaleOfTiles.Misc.Singleton{TaleOfTiles.Inventory.EquipmentHolderManager}.Prepare
  parent: TaleOfTiles.Misc.Singleton{TaleOfTiles.Inventory.EquipmentHolderManager}
  definition: TaleOfTiles.Misc.Singleton`1.Prepare
  href: TaleOfTiles.Misc.Singleton-1.html#TaleOfTiles_Misc_Singleton_1_Prepare
  name: Prepare()
  nameWithType: Singleton<EquipmentHolderManager>.Prepare()
  fullName: TaleOfTiles.Misc.Singleton<TaleOfTiles.Inventory.EquipmentHolderManager>.Prepare()
  nameWithType.vb: Singleton(Of EquipmentHolderManager).Prepare()
  fullName.vb: TaleOfTiles.Misc.Singleton(Of TaleOfTiles.Inventory.EquipmentHolderManager).Prepare()
  spec.csharp:
  - uid: TaleOfTiles.Misc.Singleton{TaleOfTiles.Inventory.EquipmentHolderManager}.Prepare
    name: Prepare
    href: TaleOfTiles.Misc.Singleton-1.html#TaleOfTiles_Misc_Singleton_1_Prepare
  - name: (
  - name: )
  spec.vb:
  - uid: TaleOfTiles.Misc.Singleton{TaleOfTiles.Inventory.EquipmentHolderManager}.Prepare
    name: Prepare
    href: TaleOfTiles.Misc.Singleton-1.html#TaleOfTiles_Misc_Singleton_1_Prepare
  - name: (
  - name: )
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.Prepare*
  commentId: Overload:TaleOfTiles.Inventory.EquipmentHolderManager.Prepare
  href: TaleOfTiles.Inventory.EquipmentHolderManager.html#TaleOfTiles_Inventory_EquipmentHolderManager_Prepare
  name: Prepare
  nameWithType: EquipmentHolderManager.Prepare
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.Prepare
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: TaleOfTiles.Misc.Singleton`1.Prepare
  commentId: M:TaleOfTiles.Misc.Singleton`1.Prepare
  href: TaleOfTiles.Misc.Singleton-1.html#TaleOfTiles_Misc_Singleton_1_Prepare
  name: Prepare()
  nameWithType: Singleton<T>.Prepare()
  fullName: TaleOfTiles.Misc.Singleton<T>.Prepare()
  nameWithType.vb: Singleton(Of T).Prepare()
  fullName.vb: TaleOfTiles.Misc.Singleton(Of T).Prepare()
  spec.csharp:
  - uid: TaleOfTiles.Misc.Singleton`1.Prepare
    name: Prepare
    href: TaleOfTiles.Misc.Singleton-1.html#TaleOfTiles_Misc_Singleton_1_Prepare
  - name: (
  - name: )
  spec.vb:
  - uid: TaleOfTiles.Misc.Singleton`1.Prepare
    name: Prepare
    href: TaleOfTiles.Misc.Singleton-1.html#TaleOfTiles_Misc_Singleton_1_Prepare
  - name: (
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.GetActiveItems*
  commentId: Overload:TaleOfTiles.Inventory.EquipmentHolderManager.GetActiveItems
  href: TaleOfTiles.Inventory.EquipmentHolderManager.html#TaleOfTiles_Inventory_EquipmentHolderManager_GetActiveItems
  name: GetActiveItems
  nameWithType: EquipmentHolderManager.GetActiveItems
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.GetActiveItems
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.SetItemActive*
  commentId: Overload:TaleOfTiles.Inventory.EquipmentHolderManager.SetItemActive
  href: TaleOfTiles.Inventory.EquipmentHolderManager.html#TaleOfTiles_Inventory_EquipmentHolderManager_SetItemActive_System_String_
  name: SetItemActive
  nameWithType: EquipmentHolderManager.SetItemActive
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.SetItemActive
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.GetActiveItemByPlace*
  commentId: Overload:TaleOfTiles.Inventory.EquipmentHolderManager.GetActiveItemByPlace
  href: TaleOfTiles.Inventory.EquipmentHolderManager.html#TaleOfTiles_Inventory_EquipmentHolderManager_GetActiveItemByPlace_ItemPlace_
  name: GetActiveItemByPlace
  nameWithType: EquipmentHolderManager.GetActiveItemByPlace
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.GetActiveItemByPlace
- uid: ItemPlace
  commentId: T:ItemPlace
  href: ItemPlace.html
  name: ItemPlace
  nameWithType: ItemPlace
  fullName: ItemPlace
- uid: EquipmentItem
  commentId: T:EquipmentItem
  href: EquipmentItem.html
  name: EquipmentItem
  nameWithType: EquipmentItem
  fullName: EquipmentItem
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.GetItemsByPlace*
  commentId: Overload:TaleOfTiles.Inventory.EquipmentHolderManager.GetItemsByPlace
  href: TaleOfTiles.Inventory.EquipmentHolderManager.html#TaleOfTiles_Inventory_EquipmentHolderManager_GetItemsByPlace_ItemPlace_
  name: GetItemsByPlace
  nameWithType: EquipmentHolderManager.GetItemsByPlace
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.GetItemsByPlace
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.GetItem*
  commentId: Overload:TaleOfTiles.Inventory.EquipmentHolderManager.GetItem
  href: TaleOfTiles.Inventory.EquipmentHolderManager.html#TaleOfTiles_Inventory_EquipmentHolderManager_GetItem_System_String_
  name: GetItem
  nameWithType: EquipmentHolderManager.GetItem
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.GetItem
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.AddItem*
  commentId: Overload:TaleOfTiles.Inventory.EquipmentHolderManager.AddItem
  href: TaleOfTiles.Inventory.EquipmentHolderManager.html#TaleOfTiles_Inventory_EquipmentHolderManager_AddItem_System_String_
  name: AddItem
  nameWithType: EquipmentHolderManager.AddItem
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.AddItem
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.RemoveActiveItem*
  commentId: Overload:TaleOfTiles.Inventory.EquipmentHolderManager.RemoveActiveItem
  href: TaleOfTiles.Inventory.EquipmentHolderManager.html#TaleOfTiles_Inventory_EquipmentHolderManager_RemoveActiveItem_System_String_
  name: RemoveActiveItem
  nameWithType: EquipmentHolderManager.RemoveActiveItem
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.RemoveActiveItem
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.LoadPlayerInventory*
  commentId: Overload:TaleOfTiles.Inventory.EquipmentHolderManager.LoadPlayerInventory
  href: TaleOfTiles.Inventory.EquipmentHolderManager.html#TaleOfTiles_Inventory_EquipmentHolderManager_LoadPlayerInventory
  name: LoadPlayerInventory
  nameWithType: EquipmentHolderManager.LoadPlayerInventory
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.LoadPlayerInventory
- uid: TaleOfTiles.Inventory.EquipmentHolderManager.LoadAllItemsInGame*
  commentId: Overload:TaleOfTiles.Inventory.EquipmentHolderManager.LoadAllItemsInGame
  href: TaleOfTiles.Inventory.EquipmentHolderManager.html#TaleOfTiles_Inventory_EquipmentHolderManager_LoadAllItemsInGame
  name: LoadAllItemsInGame
  nameWithType: EquipmentHolderManager.LoadAllItemsInGame
  fullName: TaleOfTiles.Inventory.EquipmentHolderManager.LoadAllItemsInGame
