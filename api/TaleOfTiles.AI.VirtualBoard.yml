### YamlMime:ManagedReference
items:
- uid: TaleOfTiles.AI.VirtualBoard
  commentId: T:TaleOfTiles.AI.VirtualBoard
  id: VirtualBoard
  parent: TaleOfTiles.AI
  children:
  - TaleOfTiles.AI.VirtualBoard.ChooseMove(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Player.PlayerCharacter,TaleOfTiles.Card.Gems.GemActiveEffectType,TaleOfTiles.Card.Gems.GemStatusEffectType,System.Single)
  - TaleOfTiles.AI.VirtualBoard.ChooseMoveInSortedListByGemEffectAndIntelligence(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemActiveEffectType,System.Single,System.Int32)
  - TaleOfTiles.AI.VirtualBoard.ChooseMoveInSortedListByGemStatusEffectAndIntelligence(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemStatusEffectType,System.Single,System.Int32)
  - TaleOfTiles.AI.VirtualBoard.CollapseBoard(TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  - TaleOfTiles.AI.VirtualBoard.FillBoard(TaleOfTiles.AI.VirtualGamePiece[0:,0:],TaleOfTiles.AI.VirtualGamePiece[])
  - TaleOfTiles.AI.VirtualBoard.FilterMovesListGemEffect(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemActiveEffectType)
  - TaleOfTiles.AI.VirtualBoard.FilterMovesListGemStatusEffect(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemStatusEffectType)
  - TaleOfTiles.AI.VirtualBoard.FindAllMatches(TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  - TaleOfTiles.AI.VirtualBoard.FindAllMoves(TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  - TaleOfTiles.AI.VirtualBoard.FindBestMove(TaleOfTiles.AI.VirtualGamePiece[0:,0:],TaleOfTiles.Player.PlayerCharacter,TaleOfTiles.Card.Gems.GemActiveEffectType,TaleOfTiles.Card.Gems.GemStatusEffectType,System.Single)
  - TaleOfTiles.AI.VirtualBoard.FindMatches(System.Int32,System.Int32,UnityEngine.Vector2,TaleOfTiles.AI.VirtualGamePiece[0:,0:],System.Int32)
  - TaleOfTiles.AI.VirtualBoard.FindMatchesAt(System.Int32,System.Int32,TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  - TaleOfTiles.AI.VirtualBoard.GetRandomVirtualGamePiece(TaleOfTiles.AI.VirtualGamePiece[])
  - TaleOfTiles.AI.VirtualBoard.HasMatchOnFill(System.Int32,System.Int32,TaleOfTiles.AI.VirtualGamePiece[0:,0:],System.Int32)
  - TaleOfTiles.AI.VirtualBoard.IsWithinBounds(System.Int32,System.Int32,TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  - TaleOfTiles.AI.VirtualBoard.MakeCopyBoard(TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  - TaleOfTiles.AI.VirtualBoard.SelectMoveByBiggestGemEffect(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemActiveEffectType)
  - TaleOfTiles.AI.VirtualBoard.SelectMoveByBiggestGemStatusEffect(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemStatusEffectType)
  - TaleOfTiles.AI.VirtualBoard.ShuffleBoard(TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  langs:
  - csharp
  - vb
  name: VirtualBoard
  nameWithType: VirtualBoard
  fullName: TaleOfTiles.AI.VirtualBoard
  type: Class
  source:
    remote:
      path: Assets/Scripts/AI/AIBehaviour.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: VirtualBoard
    path: ../Assets/Scripts/AI/AIBehaviour.cs
    startLine: 707
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.AI
  summary: Represents a virtual game board used for AI decision-making.
  example: []
  syntax:
    content: public class VirtualBoard
    content.vb: Public Class VirtualBoard
  inheritance:
  - System.Object
- uid: TaleOfTiles.AI.VirtualBoard.FillBoard(TaleOfTiles.AI.VirtualGamePiece[0:,0:],TaleOfTiles.AI.VirtualGamePiece[])
  commentId: M:TaleOfTiles.AI.VirtualBoard.FillBoard(TaleOfTiles.AI.VirtualGamePiece[0:,0:],TaleOfTiles.AI.VirtualGamePiece[])
  id: FillBoard(TaleOfTiles.AI.VirtualGamePiece[0:,0:],TaleOfTiles.AI.VirtualGamePiece[])
  parent: TaleOfTiles.AI.VirtualBoard
  langs:
  - csharp
  - vb
  name: FillBoard(VirtualGamePiece[,], VirtualGamePiece[])
  nameWithType: VirtualBoard.FillBoard(VirtualGamePiece[,], VirtualGamePiece[])
  fullName: TaleOfTiles.AI.VirtualBoard.FillBoard(TaleOfTiles.AI.VirtualGamePiece[,], TaleOfTiles.AI.VirtualGamePiece[])
  type: Method
  source:
    remote:
      path: Assets/Scripts/AI/AIBehaviour.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FillBoard
    path: ../Assets/Scripts/AI/AIBehaviour.cs
    startLine: 716
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.AI
  summary: Fills the game board with virtual game pieces, ensuring no immediate matches are formed upon filling.
  example: []
  syntax:
    content: public VirtualGamePiece[,] FillBoard(VirtualGamePiece[,] board_field, VirtualGamePiece[] gems)
    parameters:
    - id: board_field
      type: TaleOfTiles.AI.VirtualGamePiece[,]
      description: The game board to fill.
    - id: gems
      type: TaleOfTiles.AI.VirtualGamePiece[]
      description: Array of virtual game pieces to use for filling.
    return:
      type: TaleOfTiles.AI.VirtualGamePiece[,]
      description: The filled game board.
    content.vb: Public Function FillBoard(board_field As VirtualGamePiece(,), gems As VirtualGamePiece()) As VirtualGamePiece(,)
  overload: TaleOfTiles.AI.VirtualBoard.FillBoard*
  nameWithType.vb: VirtualBoard.FillBoard(VirtualGamePiece(,), VirtualGamePiece())
  fullName.vb: TaleOfTiles.AI.VirtualBoard.FillBoard(TaleOfTiles.AI.VirtualGamePiece(,), TaleOfTiles.AI.VirtualGamePiece())
  name.vb: FillBoard(VirtualGamePiece(,), VirtualGamePiece())
- uid: TaleOfTiles.AI.VirtualBoard.HasMatchOnFill(System.Int32,System.Int32,TaleOfTiles.AI.VirtualGamePiece[0:,0:],System.Int32)
  commentId: M:TaleOfTiles.AI.VirtualBoard.HasMatchOnFill(System.Int32,System.Int32,TaleOfTiles.AI.VirtualGamePiece[0:,0:],System.Int32)
  id: HasMatchOnFill(System.Int32,System.Int32,TaleOfTiles.AI.VirtualGamePiece[0:,0:],System.Int32)
  parent: TaleOfTiles.AI.VirtualBoard
  langs:
  - csharp
  - vb
  name: HasMatchOnFill(int, int, VirtualGamePiece[,], int)
  nameWithType: VirtualBoard.HasMatchOnFill(int, int, VirtualGamePiece[,], int)
  fullName: TaleOfTiles.AI.VirtualBoard.HasMatchOnFill(int, int, TaleOfTiles.AI.VirtualGamePiece[,], int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/AI/AIBehaviour.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: HasMatchOnFill
    path: ../Assets/Scripts/AI/AIBehaviour.cs
    startLine: 760
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.AI
  syntax:
    content: private bool HasMatchOnFill(int x, int y, VirtualGamePiece[,] board_field, int minLength = 3)
    parameters:
    - id: x
      type: System.Int32
    - id: y
      type: System.Int32
    - id: board_field
      type: TaleOfTiles.AI.VirtualGamePiece[,]
    - id: minLength
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Private Function HasMatchOnFill(x As Integer, y As Integer, board_field As VirtualGamePiece(,), minLength As Integer = 3) As Boolean
  overload: TaleOfTiles.AI.VirtualBoard.HasMatchOnFill*
  nameWithType.vb: VirtualBoard.HasMatchOnFill(Integer, Integer, VirtualGamePiece(,), Integer)
  fullName.vb: TaleOfTiles.AI.VirtualBoard.HasMatchOnFill(Integer, Integer, TaleOfTiles.AI.VirtualGamePiece(,), Integer)
  name.vb: HasMatchOnFill(Integer, Integer, VirtualGamePiece(,), Integer)
- uid: TaleOfTiles.AI.VirtualBoard.FindMatches(System.Int32,System.Int32,UnityEngine.Vector2,TaleOfTiles.AI.VirtualGamePiece[0:,0:],System.Int32)
  commentId: M:TaleOfTiles.AI.VirtualBoard.FindMatches(System.Int32,System.Int32,UnityEngine.Vector2,TaleOfTiles.AI.VirtualGamePiece[0:,0:],System.Int32)
  id: FindMatches(System.Int32,System.Int32,UnityEngine.Vector2,TaleOfTiles.AI.VirtualGamePiece[0:,0:],System.Int32)
  parent: TaleOfTiles.AI.VirtualBoard
  langs:
  - csharp
  - vb
  name: FindMatches(int, int, Vector2, VirtualGamePiece[,], int)
  nameWithType: VirtualBoard.FindMatches(int, int, Vector2, VirtualGamePiece[,], int)
  fullName: TaleOfTiles.AI.VirtualBoard.FindMatches(int, int, UnityEngine.Vector2, TaleOfTiles.AI.VirtualGamePiece[,], int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/AI/AIBehaviour.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FindMatches
    path: ../Assets/Scripts/AI/AIBehaviour.cs
    startLine: 782
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.AI
  syntax:
    content: private List<VirtualGamePiece> FindMatches(int startX, int startY, Vector2 searchDirection, VirtualGamePiece[,] board, int minLength = 3)
    parameters:
    - id: startX
      type: System.Int32
    - id: startY
      type: System.Int32
    - id: searchDirection
      type: UnityEngine.Vector2
    - id: board
      type: TaleOfTiles.AI.VirtualGamePiece[,]
    - id: minLength
      type: System.Int32
    return:
      type: System.Collections.Generic.List{TaleOfTiles.AI.VirtualGamePiece}
    content.vb: Private Function FindMatches(startX As Integer, startY As Integer, searchDirection As Vector2, board As VirtualGamePiece(,), minLength As Integer = 3) As List(Of VirtualGamePiece)
  overload: TaleOfTiles.AI.VirtualBoard.FindMatches*
  nameWithType.vb: VirtualBoard.FindMatches(Integer, Integer, Vector2, VirtualGamePiece(,), Integer)
  fullName.vb: TaleOfTiles.AI.VirtualBoard.FindMatches(Integer, Integer, UnityEngine.Vector2, TaleOfTiles.AI.VirtualGamePiece(,), Integer)
  name.vb: FindMatches(Integer, Integer, Vector2, VirtualGamePiece(,), Integer)
- uid: TaleOfTiles.AI.VirtualBoard.IsWithinBounds(System.Int32,System.Int32,TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  commentId: M:TaleOfTiles.AI.VirtualBoard.IsWithinBounds(System.Int32,System.Int32,TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  id: IsWithinBounds(System.Int32,System.Int32,TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  parent: TaleOfTiles.AI.VirtualBoard
  langs:
  - csharp
  - vb
  name: IsWithinBounds(int, int, VirtualGamePiece[,])
  nameWithType: VirtualBoard.IsWithinBounds(int, int, VirtualGamePiece[,])
  fullName: TaleOfTiles.AI.VirtualBoard.IsWithinBounds(int, int, TaleOfTiles.AI.VirtualGamePiece[,])
  type: Method
  source:
    remote:
      path: Assets/Scripts/AI/AIBehaviour.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: IsWithinBounds
    path: ../Assets/Scripts/AI/AIBehaviour.cs
    startLine: 862
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.AI
  summary: Checks if a given position is within the bounds of the game board.
  example: []
  syntax:
    content: private bool IsWithinBounds(int x, int y, VirtualGamePiece[,] board)
    parameters:
    - id: x
      type: System.Int32
      description: X-coordinate of the position to check.
    - id: y
      type: System.Int32
      description: Y-coordinate of the position to check.
    - id: board
      type: TaleOfTiles.AI.VirtualGamePiece[,]
      description: The game board.
    return:
      type: System.Boolean
      description: True if the position is within bounds; otherwise, false.
    content.vb: Private Function IsWithinBounds(x As Integer, y As Integer, board As VirtualGamePiece(,)) As Boolean
  overload: TaleOfTiles.AI.VirtualBoard.IsWithinBounds*
  nameWithType.vb: VirtualBoard.IsWithinBounds(Integer, Integer, VirtualGamePiece(,))
  fullName.vb: TaleOfTiles.AI.VirtualBoard.IsWithinBounds(Integer, Integer, TaleOfTiles.AI.VirtualGamePiece(,))
  name.vb: IsWithinBounds(Integer, Integer, VirtualGamePiece(,))
- uid: TaleOfTiles.AI.VirtualBoard.GetRandomVirtualGamePiece(TaleOfTiles.AI.VirtualGamePiece[])
  commentId: M:TaleOfTiles.AI.VirtualBoard.GetRandomVirtualGamePiece(TaleOfTiles.AI.VirtualGamePiece[])
  id: GetRandomVirtualGamePiece(TaleOfTiles.AI.VirtualGamePiece[])
  parent: TaleOfTiles.AI.VirtualBoard
  langs:
  - csharp
  - vb
  name: GetRandomVirtualGamePiece(VirtualGamePiece[])
  nameWithType: VirtualBoard.GetRandomVirtualGamePiece(VirtualGamePiece[])
  fullName: TaleOfTiles.AI.VirtualBoard.GetRandomVirtualGamePiece(TaleOfTiles.AI.VirtualGamePiece[])
  type: Method
  source:
    remote:
      path: Assets/Scripts/AI/AIBehaviour.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: GetRandomVirtualGamePiece
    path: ../Assets/Scripts/AI/AIBehaviour.cs
    startLine: 872
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.AI
  summary: Selects a random virtual game piece from an array, considering the rarity of each piece.
  example: []
  syntax:
    content: public VirtualGamePiece GetRandomVirtualGamePiece(VirtualGamePiece[] gems)
    parameters:
    - id: gems
      type: TaleOfTiles.AI.VirtualGamePiece[]
      description: Array of virtual game pieces to choose from.
    return:
      type: TaleOfTiles.AI.VirtualGamePiece
      description: A randomly selected virtual game piece.
    content.vb: Public Function GetRandomVirtualGamePiece(gems As VirtualGamePiece()) As VirtualGamePiece
  overload: TaleOfTiles.AI.VirtualBoard.GetRandomVirtualGamePiece*
  nameWithType.vb: VirtualBoard.GetRandomVirtualGamePiece(VirtualGamePiece())
  fullName.vb: TaleOfTiles.AI.VirtualBoard.GetRandomVirtualGamePiece(TaleOfTiles.AI.VirtualGamePiece())
  name.vb: GetRandomVirtualGamePiece(VirtualGamePiece())
- uid: TaleOfTiles.AI.VirtualBoard.CollapseBoard(TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  commentId: M:TaleOfTiles.AI.VirtualBoard.CollapseBoard(TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  id: CollapseBoard(TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  parent: TaleOfTiles.AI.VirtualBoard
  langs:
  - csharp
  - vb
  name: CollapseBoard(VirtualGamePiece[,])
  nameWithType: VirtualBoard.CollapseBoard(VirtualGamePiece[,])
  fullName: TaleOfTiles.AI.VirtualBoard.CollapseBoard(TaleOfTiles.AI.VirtualGamePiece[,])
  type: Method
  source:
    remote:
      path: Assets/Scripts/AI/AIBehaviour.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: CollapseBoard
    path: ../Assets/Scripts/AI/AIBehaviour.cs
    startLine: 919
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.AI
  summary: Collapses the game board, moving game pieces down to fill empty spaces.
  example: []
  syntax:
    content: public bool CollapseBoard(VirtualGamePiece[,] board_field)
    parameters:
    - id: board_field
      type: TaleOfTiles.AI.VirtualGamePiece[,]
      description: The game board to collapse.
    return:
      type: System.Boolean
      description: True if any pieces were moved; otherwise, false.
    content.vb: Public Function CollapseBoard(board_field As VirtualGamePiece(,)) As Boolean
  overload: TaleOfTiles.AI.VirtualBoard.CollapseBoard*
  nameWithType.vb: VirtualBoard.CollapseBoard(VirtualGamePiece(,))
  fullName.vb: TaleOfTiles.AI.VirtualBoard.CollapseBoard(TaleOfTiles.AI.VirtualGamePiece(,))
  name.vb: CollapseBoard(VirtualGamePiece(,))
- uid: TaleOfTiles.AI.VirtualBoard.FindMatchesAt(System.Int32,System.Int32,TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  commentId: M:TaleOfTiles.AI.VirtualBoard.FindMatchesAt(System.Int32,System.Int32,TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  id: FindMatchesAt(System.Int32,System.Int32,TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  parent: TaleOfTiles.AI.VirtualBoard
  langs:
  - csharp
  - vb
  name: FindMatchesAt(int, int, VirtualGamePiece[,])
  nameWithType: VirtualBoard.FindMatchesAt(int, int, VirtualGamePiece[,])
  fullName: TaleOfTiles.AI.VirtualBoard.FindMatchesAt(int, int, TaleOfTiles.AI.VirtualGamePiece[,])
  type: Method
  source:
    remote:
      path: Assets/Scripts/AI/AIBehaviour.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FindMatchesAt
    path: ../Assets/Scripts/AI/AIBehaviour.cs
    startLine: 948
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.AI
  summary: Finds all matches on the board that include a virtual game piece at a specified position.
  example: []
  syntax:
    content: public List<BoardPos> FindMatchesAt(int x, int y, VirtualGamePiece[,] board_field)
    parameters:
    - id: x
      type: System.Int32
      description: X-coordinate of the game piece.
    - id: y
      type: System.Int32
      description: Y-coordinate of the game piece.
    - id: board_field
      type: TaleOfTiles.AI.VirtualGamePiece[,]
      description: The game board to search for matches.
    return:
      type: System.Collections.Generic.List{TaleOfTiles.AI.BoardPos}
      description: A list of positions where matches are found.
    content.vb: Public Function FindMatchesAt(x As Integer, y As Integer, board_field As VirtualGamePiece(,)) As List(Of BoardPos)
  overload: TaleOfTiles.AI.VirtualBoard.FindMatchesAt*
  nameWithType.vb: VirtualBoard.FindMatchesAt(Integer, Integer, VirtualGamePiece(,))
  fullName.vb: TaleOfTiles.AI.VirtualBoard.FindMatchesAt(Integer, Integer, TaleOfTiles.AI.VirtualGamePiece(,))
  name.vb: FindMatchesAt(Integer, Integer, VirtualGamePiece(,))
- uid: TaleOfTiles.AI.VirtualBoard.MakeCopyBoard(TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  commentId: M:TaleOfTiles.AI.VirtualBoard.MakeCopyBoard(TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  id: MakeCopyBoard(TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  parent: TaleOfTiles.AI.VirtualBoard
  langs:
  - csharp
  - vb
  name: MakeCopyBoard(VirtualGamePiece[,])
  nameWithType: VirtualBoard.MakeCopyBoard(VirtualGamePiece[,])
  fullName: TaleOfTiles.AI.VirtualBoard.MakeCopyBoard(TaleOfTiles.AI.VirtualGamePiece[,])
  type: Method
  source:
    remote:
      path: Assets/Scripts/AI/AIBehaviour.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: MakeCopyBoard
    path: ../Assets/Scripts/AI/AIBehaviour.cs
    startLine: 1067
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.AI
  summary: Creates a copy of the given game board.
  example: []
  syntax:
    content: public VirtualGamePiece[,] MakeCopyBoard(VirtualGamePiece[,] board_field)
    parameters:
    - id: board_field
      type: TaleOfTiles.AI.VirtualGamePiece[,]
      description: The game board to be copied.
    return:
      type: TaleOfTiles.AI.VirtualGamePiece[,]
      description: A new copy of the provided game board.
    content.vb: Public Function MakeCopyBoard(board_field As VirtualGamePiece(,)) As VirtualGamePiece(,)
  overload: TaleOfTiles.AI.VirtualBoard.MakeCopyBoard*
  nameWithType.vb: VirtualBoard.MakeCopyBoard(VirtualGamePiece(,))
  fullName.vb: TaleOfTiles.AI.VirtualBoard.MakeCopyBoard(TaleOfTiles.AI.VirtualGamePiece(,))
  name.vb: MakeCopyBoard(VirtualGamePiece(,))
- uid: TaleOfTiles.AI.VirtualBoard.FindAllMatches(TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  commentId: M:TaleOfTiles.AI.VirtualBoard.FindAllMatches(TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  id: FindAllMatches(TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  parent: TaleOfTiles.AI.VirtualBoard
  langs:
  - csharp
  - vb
  name: FindAllMatches(VirtualGamePiece[,])
  nameWithType: VirtualBoard.FindAllMatches(VirtualGamePiece[,])
  fullName: TaleOfTiles.AI.VirtualBoard.FindAllMatches(TaleOfTiles.AI.VirtualGamePiece[,])
  type: Method
  source:
    remote:
      path: Assets/Scripts/AI/AIBehaviour.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FindAllMatches
    path: ../Assets/Scripts/AI/AIBehaviour.cs
    startLine: 1087
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.AI
  summary: Finds all matches on the game board.
  example: []
  syntax:
    content: public List<BoardPos> FindAllMatches(VirtualGamePiece[,] board_field)
    parameters:
    - id: board_field
      type: TaleOfTiles.AI.VirtualGamePiece[,]
      description: The game board to search for matches.
    return:
      type: System.Collections.Generic.List{TaleOfTiles.AI.BoardPos}
      description: A list of positions where matches are found.
    content.vb: Public Function FindAllMatches(board_field As VirtualGamePiece(,)) As List(Of BoardPos)
  overload: TaleOfTiles.AI.VirtualBoard.FindAllMatches*
  nameWithType.vb: VirtualBoard.FindAllMatches(VirtualGamePiece(,))
  fullName.vb: TaleOfTiles.AI.VirtualBoard.FindAllMatches(TaleOfTiles.AI.VirtualGamePiece(,))
  name.vb: FindAllMatches(VirtualGamePiece(,))
- uid: TaleOfTiles.AI.VirtualBoard.FindBestMove(TaleOfTiles.AI.VirtualGamePiece[0:,0:],TaleOfTiles.Player.PlayerCharacter,TaleOfTiles.Card.Gems.GemActiveEffectType,TaleOfTiles.Card.Gems.GemStatusEffectType,System.Single)
  commentId: M:TaleOfTiles.AI.VirtualBoard.FindBestMove(TaleOfTiles.AI.VirtualGamePiece[0:,0:],TaleOfTiles.Player.PlayerCharacter,TaleOfTiles.Card.Gems.GemActiveEffectType,TaleOfTiles.Card.Gems.GemStatusEffectType,System.Single)
  id: FindBestMove(TaleOfTiles.AI.VirtualGamePiece[0:,0:],TaleOfTiles.Player.PlayerCharacter,TaleOfTiles.Card.Gems.GemActiveEffectType,TaleOfTiles.Card.Gems.GemStatusEffectType,System.Single)
  parent: TaleOfTiles.AI.VirtualBoard
  langs:
  - csharp
  - vb
  name: FindBestMove(VirtualGamePiece[,], PlayerCharacter, GemActiveEffectType, GemStatusEffectType, float)
  nameWithType: VirtualBoard.FindBestMove(VirtualGamePiece[,], PlayerCharacter, GemActiveEffectType, GemStatusEffectType, float)
  fullName: TaleOfTiles.AI.VirtualBoard.FindBestMove(TaleOfTiles.AI.VirtualGamePiece[,], TaleOfTiles.Player.PlayerCharacter, TaleOfTiles.Card.Gems.GemActiveEffectType, TaleOfTiles.Card.Gems.GemStatusEffectType, float)
  type: Method
  source:
    remote:
      path: Assets/Scripts/AI/AIBehaviour.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FindBestMove
    path: ../Assets/Scripts/AI/AIBehaviour.cs
    startLine: 1110
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.AI
  summary: Identifies the best move for a player based on the current state of the game board and desired effects.
  example: []
  syntax:
    content: public Move FindBestMove(VirtualGamePiece[,] board_field, PlayerCharacter player, GemActiveEffectType target_effect = GemActiveEffectType.None, GemStatusEffectType target_status_effect = GemStatusEffectType.None, float intelligence = 1)
    parameters:
    - id: board_field
      type: TaleOfTiles.AI.VirtualGamePiece[,]
      description: The current game board.
    - id: player
      type: TaleOfTiles.Player.PlayerCharacter
      description: The player character for whom the move is being calculated.
    - id: target_effect
      type: TaleOfTiles.Card.Gems.GemActiveEffectType
      description: The targeted active gem effect.
    - id: target_status_effect
      type: TaleOfTiles.Card.Gems.GemStatusEffectType
      description: The targeted status effect.
    - id: intelligence
      type: System.Single
      description: The intelligence level of the AI making the decision.
    return:
      type: TaleOfTiles.AI.Move
      description: The best move identified, or null if no moves are available.
    content.vb: Public Function FindBestMove(board_field As VirtualGamePiece(,), player As PlayerCharacter, target_effect As GemActiveEffectType = GemActiveEffectType.None, target_status_effect As GemStatusEffectType = GemStatusEffectType.None, intelligence As Single = 1) As Move
  overload: TaleOfTiles.AI.VirtualBoard.FindBestMove*
  nameWithType.vb: VirtualBoard.FindBestMove(VirtualGamePiece(,), PlayerCharacter, GemActiveEffectType, GemStatusEffectType, Single)
  fullName.vb: TaleOfTiles.AI.VirtualBoard.FindBestMove(TaleOfTiles.AI.VirtualGamePiece(,), TaleOfTiles.Player.PlayerCharacter, TaleOfTiles.Card.Gems.GemActiveEffectType, TaleOfTiles.Card.Gems.GemStatusEffectType, Single)
  name.vb: FindBestMove(VirtualGamePiece(,), PlayerCharacter, GemActiveEffectType, GemStatusEffectType, Single)
- uid: TaleOfTiles.AI.VirtualBoard.FindAllMoves(TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  commentId: M:TaleOfTiles.AI.VirtualBoard.FindAllMoves(TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  id: FindAllMoves(TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  parent: TaleOfTiles.AI.VirtualBoard
  langs:
  - csharp
  - vb
  name: FindAllMoves(VirtualGamePiece[,])
  nameWithType: VirtualBoard.FindAllMoves(VirtualGamePiece[,])
  fullName: TaleOfTiles.AI.VirtualBoard.FindAllMoves(TaleOfTiles.AI.VirtualGamePiece[,])
  type: Method
  source:
    remote:
      path: Assets/Scripts/AI/AIBehaviour.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FindAllMoves
    path: ../Assets/Scripts/AI/AIBehaviour.cs
    startLine: 1131
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.AI
  summary: Finds all possible moves on the game board.
  example: []
  syntax:
    content: private List<Move> FindAllMoves(VirtualGamePiece[,] board_field)
    parameters:
    - id: board_field
      type: TaleOfTiles.AI.VirtualGamePiece[,]
      description: The game board to search for moves.
    return:
      type: System.Collections.Generic.List{TaleOfTiles.AI.Move}
      description: A list of all possible moves.
    content.vb: Private Function FindAllMoves(board_field As VirtualGamePiece(,)) As List(Of Move)
  overload: TaleOfTiles.AI.VirtualBoard.FindAllMoves*
  nameWithType.vb: VirtualBoard.FindAllMoves(VirtualGamePiece(,))
  fullName.vb: TaleOfTiles.AI.VirtualBoard.FindAllMoves(TaleOfTiles.AI.VirtualGamePiece(,))
  name.vb: FindAllMoves(VirtualGamePiece(,))
- uid: TaleOfTiles.AI.VirtualBoard.SelectMoveByBiggestGemEffect(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemActiveEffectType)
  commentId: M:TaleOfTiles.AI.VirtualBoard.SelectMoveByBiggestGemEffect(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemActiveEffectType)
  id: SelectMoveByBiggestGemEffect(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemActiveEffectType)
  parent: TaleOfTiles.AI.VirtualBoard
  langs:
  - csharp
  - vb
  name: SelectMoveByBiggestGemEffect(List<Move>, GemActiveEffectType)
  nameWithType: VirtualBoard.SelectMoveByBiggestGemEffect(List<Move>, GemActiveEffectType)
  fullName: TaleOfTiles.AI.VirtualBoard.SelectMoveByBiggestGemEffect(System.Collections.Generic.List<TaleOfTiles.AI.Move>, TaleOfTiles.Card.Gems.GemActiveEffectType)
  type: Method
  source:
    remote:
      path: Assets/Scripts/AI/AIBehaviour.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: SelectMoveByBiggestGemEffect
    path: ../Assets/Scripts/AI/AIBehaviour.cs
    startLine: 1301
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.AI
  summary: Selects the best move based on the highest gem effect value of a specified type.
  example: []
  syntax:
    content: private Move SelectMoveByBiggestGemEffect(List<Move> moves, GemActiveEffectType type)
    parameters:
    - id: moves
      type: System.Collections.Generic.List{TaleOfTiles.AI.Move}
      description: List of potential moves.
    - id: type
      type: TaleOfTiles.Card.Gems.GemActiveEffectType
      description: The type of gem effect to consider for selection.
    return:
      type: TaleOfTiles.AI.Move
      description: The move with the highest gem effect value of the specified type.
    content.vb: Private Function SelectMoveByBiggestGemEffect(moves As List(Of Move), type As GemActiveEffectType) As Move
  overload: TaleOfTiles.AI.VirtualBoard.SelectMoveByBiggestGemEffect*
  nameWithType.vb: VirtualBoard.SelectMoveByBiggestGemEffect(List(Of Move), GemActiveEffectType)
  fullName.vb: TaleOfTiles.AI.VirtualBoard.SelectMoveByBiggestGemEffect(System.Collections.Generic.List(Of TaleOfTiles.AI.Move), TaleOfTiles.Card.Gems.GemActiveEffectType)
  name.vb: SelectMoveByBiggestGemEffect(List(Of Move), GemActiveEffectType)
- uid: TaleOfTiles.AI.VirtualBoard.FilterMovesListGemEffect(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemActiveEffectType)
  commentId: M:TaleOfTiles.AI.VirtualBoard.FilterMovesListGemEffect(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemActiveEffectType)
  id: FilterMovesListGemEffect(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemActiveEffectType)
  parent: TaleOfTiles.AI.VirtualBoard
  langs:
  - csharp
  - vb
  name: FilterMovesListGemEffect(List<Move>, GemActiveEffectType)
  nameWithType: VirtualBoard.FilterMovesListGemEffect(List<Move>, GemActiveEffectType)
  fullName: TaleOfTiles.AI.VirtualBoard.FilterMovesListGemEffect(System.Collections.Generic.List<TaleOfTiles.AI.Move>, TaleOfTiles.Card.Gems.GemActiveEffectType)
  type: Method
  source:
    remote:
      path: Assets/Scripts/AI/AIBehaviour.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FilterMovesListGemEffect
    path: ../Assets/Scripts/AI/AIBehaviour.cs
    startLine: 1320
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.AI
  summary: Filters a list of moves based on a specific gem effect type.
  example: []
  syntax:
    content: private List<Move> FilterMovesListGemEffect(List<Move> moves, GemActiveEffectType type)
    parameters:
    - id: moves
      type: System.Collections.Generic.List{TaleOfTiles.AI.Move}
      description: List of potential moves.
    - id: type
      type: TaleOfTiles.Card.Gems.GemActiveEffectType
      description: The type of gem effect to filter by.
    return:
      type: System.Collections.Generic.List{TaleOfTiles.AI.Move}
      description: A list of moves filtered by the specified gem effect type.
    content.vb: Private Function FilterMovesListGemEffect(moves As List(Of Move), type As GemActiveEffectType) As List(Of Move)
  overload: TaleOfTiles.AI.VirtualBoard.FilterMovesListGemEffect*
  nameWithType.vb: VirtualBoard.FilterMovesListGemEffect(List(Of Move), GemActiveEffectType)
  fullName.vb: TaleOfTiles.AI.VirtualBoard.FilterMovesListGemEffect(System.Collections.Generic.List(Of TaleOfTiles.AI.Move), TaleOfTiles.Card.Gems.GemActiveEffectType)
  name.vb: FilterMovesListGemEffect(List(Of Move), GemActiveEffectType)
- uid: TaleOfTiles.AI.VirtualBoard.SelectMoveByBiggestGemStatusEffect(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemStatusEffectType)
  commentId: M:TaleOfTiles.AI.VirtualBoard.SelectMoveByBiggestGemStatusEffect(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemStatusEffectType)
  id: SelectMoveByBiggestGemStatusEffect(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemStatusEffectType)
  parent: TaleOfTiles.AI.VirtualBoard
  langs:
  - csharp
  - vb
  name: SelectMoveByBiggestGemStatusEffect(List<Move>, GemStatusEffectType)
  nameWithType: VirtualBoard.SelectMoveByBiggestGemStatusEffect(List<Move>, GemStatusEffectType)
  fullName: TaleOfTiles.AI.VirtualBoard.SelectMoveByBiggestGemStatusEffect(System.Collections.Generic.List<TaleOfTiles.AI.Move>, TaleOfTiles.Card.Gems.GemStatusEffectType)
  type: Method
  source:
    remote:
      path: Assets/Scripts/AI/AIBehaviour.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: SelectMoveByBiggestGemStatusEffect
    path: ../Assets/Scripts/AI/AIBehaviour.cs
    startLine: 1336
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.AI
  summary: Selects the best move based on the highest gem status effect value of a specified type.
  example: []
  syntax:
    content: private Move SelectMoveByBiggestGemStatusEffect(List<Move> moves, GemStatusEffectType type)
    parameters:
    - id: moves
      type: System.Collections.Generic.List{TaleOfTiles.AI.Move}
      description: List of potential moves.
    - id: type
      type: TaleOfTiles.Card.Gems.GemStatusEffectType
      description: The type of gem status effect to consider for selection.
    return:
      type: TaleOfTiles.AI.Move
      description: The move with the highest gem status effect value of the specified type.
    content.vb: Private Function SelectMoveByBiggestGemStatusEffect(moves As List(Of Move), type As GemStatusEffectType) As Move
  overload: TaleOfTiles.AI.VirtualBoard.SelectMoveByBiggestGemStatusEffect*
  nameWithType.vb: VirtualBoard.SelectMoveByBiggestGemStatusEffect(List(Of Move), GemStatusEffectType)
  fullName.vb: TaleOfTiles.AI.VirtualBoard.SelectMoveByBiggestGemStatusEffect(System.Collections.Generic.List(Of TaleOfTiles.AI.Move), TaleOfTiles.Card.Gems.GemStatusEffectType)
  name.vb: SelectMoveByBiggestGemStatusEffect(List(Of Move), GemStatusEffectType)
- uid: TaleOfTiles.AI.VirtualBoard.FilterMovesListGemStatusEffect(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemStatusEffectType)
  commentId: M:TaleOfTiles.AI.VirtualBoard.FilterMovesListGemStatusEffect(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemStatusEffectType)
  id: FilterMovesListGemStatusEffect(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemStatusEffectType)
  parent: TaleOfTiles.AI.VirtualBoard
  langs:
  - csharp
  - vb
  name: FilterMovesListGemStatusEffect(List<Move>, GemStatusEffectType)
  nameWithType: VirtualBoard.FilterMovesListGemStatusEffect(List<Move>, GemStatusEffectType)
  fullName: TaleOfTiles.AI.VirtualBoard.FilterMovesListGemStatusEffect(System.Collections.Generic.List<TaleOfTiles.AI.Move>, TaleOfTiles.Card.Gems.GemStatusEffectType)
  type: Method
  source:
    remote:
      path: Assets/Scripts/AI/AIBehaviour.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FilterMovesListGemStatusEffect
    path: ../Assets/Scripts/AI/AIBehaviour.cs
    startLine: 1355
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.AI
  summary: Filters a list of moves based on a specific gem status effect type.
  example: []
  syntax:
    content: private List<Move> FilterMovesListGemStatusEffect(List<Move> moves, GemStatusEffectType type)
    parameters:
    - id: moves
      type: System.Collections.Generic.List{TaleOfTiles.AI.Move}
      description: List of potential moves.
    - id: type
      type: TaleOfTiles.Card.Gems.GemStatusEffectType
      description: The type of gem status effect to filter by.
    return:
      type: System.Collections.Generic.List{TaleOfTiles.AI.Move}
      description: A list of moves filtered by the specified gem status effect type.
    content.vb: Private Function FilterMovesListGemStatusEffect(moves As List(Of Move), type As GemStatusEffectType) As List(Of Move)
  overload: TaleOfTiles.AI.VirtualBoard.FilterMovesListGemStatusEffect*
  nameWithType.vb: VirtualBoard.FilterMovesListGemStatusEffect(List(Of Move), GemStatusEffectType)
  fullName.vb: TaleOfTiles.AI.VirtualBoard.FilterMovesListGemStatusEffect(System.Collections.Generic.List(Of TaleOfTiles.AI.Move), TaleOfTiles.Card.Gems.GemStatusEffectType)
  name.vb: FilterMovesListGemStatusEffect(List(Of Move), GemStatusEffectType)
- uid: TaleOfTiles.AI.VirtualBoard.ChooseMoveInSortedListByGemEffectAndIntelligence(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemActiveEffectType,System.Single,System.Int32)
  commentId: M:TaleOfTiles.AI.VirtualBoard.ChooseMoveInSortedListByGemEffectAndIntelligence(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemActiveEffectType,System.Single,System.Int32)
  id: ChooseMoveInSortedListByGemEffectAndIntelligence(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemActiveEffectType,System.Single,System.Int32)
  parent: TaleOfTiles.AI.VirtualBoard
  langs:
  - csharp
  - vb
  name: ChooseMoveInSortedListByGemEffectAndIntelligence(List<Move>, GemActiveEffectType, float, int)
  nameWithType: VirtualBoard.ChooseMoveInSortedListByGemEffectAndIntelligence(List<Move>, GemActiveEffectType, float, int)
  fullName: TaleOfTiles.AI.VirtualBoard.ChooseMoveInSortedListByGemEffectAndIntelligence(System.Collections.Generic.List<TaleOfTiles.AI.Move>, TaleOfTiles.Card.Gems.GemActiveEffectType, float, int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/AI/AIBehaviour.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: ChooseMoveInSortedListByGemEffectAndIntelligence
    path: ../Assets/Scripts/AI/AIBehaviour.cs
    startLine: 1373
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.AI
  summary: Chooses a move from a sorted list of moves based on a specific gem effect type and AI intelligence level.
  example: []
  syntax:
    content: private Move ChooseMoveInSortedListByGemEffectAndIntelligence(List<Move> avaliable_moves, GemActiveEffectType effect_type, float intelligence, int start_index = 1)
    parameters:
    - id: avaliable_moves
      type: System.Collections.Generic.List{TaleOfTiles.AI.Move}
      description: List of available moves.
    - id: effect_type
      type: TaleOfTiles.Card.Gems.GemActiveEffectType
      description: The gem effect type to consider.
    - id: intelligence
      type: System.Single
      description: The AI intelligence level.
    - id: start_index
      type: System.Int32
      description: The starting index for choosing a move.
    return:
      type: TaleOfTiles.AI.Move
      description: The chosen move based on the specified criteria.
    content.vb: Private Function ChooseMoveInSortedListByGemEffectAndIntelligence(avaliable_moves As List(Of Move), effect_type As GemActiveEffectType, intelligence As Single, start_index As Integer = 1) As Move
  overload: TaleOfTiles.AI.VirtualBoard.ChooseMoveInSortedListByGemEffectAndIntelligence*
  nameWithType.vb: VirtualBoard.ChooseMoveInSortedListByGemEffectAndIntelligence(List(Of Move), GemActiveEffectType, Single, Integer)
  fullName.vb: TaleOfTiles.AI.VirtualBoard.ChooseMoveInSortedListByGemEffectAndIntelligence(System.Collections.Generic.List(Of TaleOfTiles.AI.Move), TaleOfTiles.Card.Gems.GemActiveEffectType, Single, Integer)
  name.vb: ChooseMoveInSortedListByGemEffectAndIntelligence(List(Of Move), GemActiveEffectType, Single, Integer)
- uid: TaleOfTiles.AI.VirtualBoard.ChooseMoveInSortedListByGemStatusEffectAndIntelligence(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemStatusEffectType,System.Single,System.Int32)
  commentId: M:TaleOfTiles.AI.VirtualBoard.ChooseMoveInSortedListByGemStatusEffectAndIntelligence(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemStatusEffectType,System.Single,System.Int32)
  id: ChooseMoveInSortedListByGemStatusEffectAndIntelligence(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Card.Gems.GemStatusEffectType,System.Single,System.Int32)
  parent: TaleOfTiles.AI.VirtualBoard
  langs:
  - csharp
  - vb
  name: ChooseMoveInSortedListByGemStatusEffectAndIntelligence(List<Move>, GemStatusEffectType, float, int)
  nameWithType: VirtualBoard.ChooseMoveInSortedListByGemStatusEffectAndIntelligence(List<Move>, GemStatusEffectType, float, int)
  fullName: TaleOfTiles.AI.VirtualBoard.ChooseMoveInSortedListByGemStatusEffectAndIntelligence(System.Collections.Generic.List<TaleOfTiles.AI.Move>, TaleOfTiles.Card.Gems.GemStatusEffectType, float, int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/AI/AIBehaviour.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: ChooseMoveInSortedListByGemStatusEffectAndIntelligence
    path: ../Assets/Scripts/AI/AIBehaviour.cs
    startLine: 1395
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.AI
  summary: Chooses a move from a sorted list of moves based on a specific gem status effect type and AI intelligence level.
  example: []
  syntax:
    content: private Move ChooseMoveInSortedListByGemStatusEffectAndIntelligence(List<Move> avaliable_moves, GemStatusEffectType effect_type, float intelligence, int start_index = 1)
    parameters:
    - id: avaliable_moves
      type: System.Collections.Generic.List{TaleOfTiles.AI.Move}
      description: List of available moves.
    - id: effect_type
      type: TaleOfTiles.Card.Gems.GemStatusEffectType
      description: The gem status effect type to consider.
    - id: intelligence
      type: System.Single
      description: The AI intelligence level.
    - id: start_index
      type: System.Int32
      description: The starting index for choosing a move.
    return:
      type: TaleOfTiles.AI.Move
      description: The chosen move based on the specified criteria.
    content.vb: Private Function ChooseMoveInSortedListByGemStatusEffectAndIntelligence(avaliable_moves As List(Of Move), effect_type As GemStatusEffectType, intelligence As Single, start_index As Integer = 1) As Move
  overload: TaleOfTiles.AI.VirtualBoard.ChooseMoveInSortedListByGemStatusEffectAndIntelligence*
  nameWithType.vb: VirtualBoard.ChooseMoveInSortedListByGemStatusEffectAndIntelligence(List(Of Move), GemStatusEffectType, Single, Integer)
  fullName.vb: TaleOfTiles.AI.VirtualBoard.ChooseMoveInSortedListByGemStatusEffectAndIntelligence(System.Collections.Generic.List(Of TaleOfTiles.AI.Move), TaleOfTiles.Card.Gems.GemStatusEffectType, Single, Integer)
  name.vb: ChooseMoveInSortedListByGemStatusEffectAndIntelligence(List(Of Move), GemStatusEffectType, Single, Integer)
- uid: TaleOfTiles.AI.VirtualBoard.ChooseMove(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Player.PlayerCharacter,TaleOfTiles.Card.Gems.GemActiveEffectType,TaleOfTiles.Card.Gems.GemStatusEffectType,System.Single)
  commentId: M:TaleOfTiles.AI.VirtualBoard.ChooseMove(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Player.PlayerCharacter,TaleOfTiles.Card.Gems.GemActiveEffectType,TaleOfTiles.Card.Gems.GemStatusEffectType,System.Single)
  id: ChooseMove(System.Collections.Generic.List{TaleOfTiles.AI.Move},TaleOfTiles.Player.PlayerCharacter,TaleOfTiles.Card.Gems.GemActiveEffectType,TaleOfTiles.Card.Gems.GemStatusEffectType,System.Single)
  parent: TaleOfTiles.AI.VirtualBoard
  langs:
  - csharp
  - vb
  name: ChooseMove(List<Move>, PlayerCharacter, GemActiveEffectType, GemStatusEffectType, float)
  nameWithType: VirtualBoard.ChooseMove(List<Move>, PlayerCharacter, GemActiveEffectType, GemStatusEffectType, float)
  fullName: TaleOfTiles.AI.VirtualBoard.ChooseMove(System.Collections.Generic.List<TaleOfTiles.AI.Move>, TaleOfTiles.Player.PlayerCharacter, TaleOfTiles.Card.Gems.GemActiveEffectType, TaleOfTiles.Card.Gems.GemStatusEffectType, float)
  type: Method
  source:
    remote:
      path: Assets/Scripts/AI/AIBehaviour.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: ChooseMove
    path: ../Assets/Scripts/AI/AIBehaviour.cs
    startLine: 1418
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.AI
  summary: Chooses the best move for a player based on the current game situation, possible move effects, and AI intelligence.
  example: []
  syntax:
    content: public Move ChooseMove(List<Move> moves, PlayerCharacter player, GemActiveEffectType target_effect = GemActiveEffectType.None, GemStatusEffectType target_status_effect = GemStatusEffectType.None, float intelligence = 1)
    parameters:
    - id: moves
      type: System.Collections.Generic.List{TaleOfTiles.AI.Move}
      description: List of potential moves.
    - id: player
      type: TaleOfTiles.Player.PlayerCharacter
      description: The player character for whom the move is being calculated.
    - id: target_effect
      type: TaleOfTiles.Card.Gems.GemActiveEffectType
      description: The targeted active gem effect.
    - id: target_status_effect
      type: TaleOfTiles.Card.Gems.GemStatusEffectType
      description: The targeted status effect.
    - id: intelligence
      type: System.Single
      description: The intelligence level of the AI making the decision.
    return:
      type: TaleOfTiles.AI.Move
      description: The chosen move based on the criteria.
    content.vb: Public Function ChooseMove(moves As List(Of Move), player As PlayerCharacter, target_effect As GemActiveEffectType = GemActiveEffectType.None, target_status_effect As GemStatusEffectType = GemStatusEffectType.None, intelligence As Single = 1) As Move
  overload: TaleOfTiles.AI.VirtualBoard.ChooseMove*
  nameWithType.vb: VirtualBoard.ChooseMove(List(Of Move), PlayerCharacter, GemActiveEffectType, GemStatusEffectType, Single)
  fullName.vb: TaleOfTiles.AI.VirtualBoard.ChooseMove(System.Collections.Generic.List(Of TaleOfTiles.AI.Move), TaleOfTiles.Player.PlayerCharacter, TaleOfTiles.Card.Gems.GemActiveEffectType, TaleOfTiles.Card.Gems.GemStatusEffectType, Single)
  name.vb: ChooseMove(List(Of Move), PlayerCharacter, GemActiveEffectType, GemStatusEffectType, Single)
- uid: TaleOfTiles.AI.VirtualBoard.ShuffleBoard(TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  commentId: M:TaleOfTiles.AI.VirtualBoard.ShuffleBoard(TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  id: ShuffleBoard(TaleOfTiles.AI.VirtualGamePiece[0:,0:])
  parent: TaleOfTiles.AI.VirtualBoard
  langs:
  - csharp
  - vb
  name: ShuffleBoard(VirtualGamePiece[,])
  nameWithType: VirtualBoard.ShuffleBoard(VirtualGamePiece[,])
  fullName: TaleOfTiles.AI.VirtualBoard.ShuffleBoard(TaleOfTiles.AI.VirtualGamePiece[,])
  type: Method
  source:
    remote:
      path: Assets/Scripts/AI/AIBehaviour.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: ShuffleBoard
    path: ../Assets/Scripts/AI/AIBehaviour.cs
    startLine: 1704
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.AI
  summary: Shuffles the positions of virtual game pieces on the board.
  example: []
  syntax:
    content: public VirtualGamePiece[,] ShuffleBoard(VirtualGamePiece[,] board)
    parameters:
    - id: board
      type: TaleOfTiles.AI.VirtualGamePiece[,]
      description: The virtual game board to be shuffled.
    return:
      type: TaleOfTiles.AI.VirtualGamePiece[,]
      description: The shuffled virtual game board.
    content.vb: Public Function ShuffleBoard(board As VirtualGamePiece(,)) As VirtualGamePiece(,)
  overload: TaleOfTiles.AI.VirtualBoard.ShuffleBoard*
  nameWithType.vb: VirtualBoard.ShuffleBoard(VirtualGamePiece(,))
  fullName.vb: TaleOfTiles.AI.VirtualBoard.ShuffleBoard(TaleOfTiles.AI.VirtualGamePiece(,))
  name.vb: ShuffleBoard(VirtualGamePiece(,))
references:
- uid: TaleOfTiles.AI
  commentId: N:TaleOfTiles.AI
  href: TaleOfTiles.html
  name: TaleOfTiles.AI
  nameWithType: TaleOfTiles.AI
  fullName: TaleOfTiles.AI
  spec.csharp:
  - uid: TaleOfTiles
    name: TaleOfTiles
    href: TaleOfTiles.html
  - name: .
  - uid: TaleOfTiles.AI
    name: AI
    href: TaleOfTiles.AI.html
  spec.vb:
  - uid: TaleOfTiles
    name: TaleOfTiles
    href: TaleOfTiles.html
  - name: .
  - uid: TaleOfTiles.AI
    name: AI
    href: TaleOfTiles.AI.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TaleOfTiles.AI.VirtualBoard.FillBoard*
  commentId: Overload:TaleOfTiles.AI.VirtualBoard.FillBoard
  href: TaleOfTiles.AI.VirtualBoard.html#TaleOfTiles_AI_VirtualBoard_FillBoard_TaleOfTiles_AI_VirtualGamePiece_0
  name: FillBoard
  nameWithType: VirtualBoard.FillBoard
  fullName: TaleOfTiles.AI.VirtualBoard.FillBoard
- uid: TaleOfTiles.AI.VirtualGamePiece[,]
  isExternal: true
  href: TaleOfTiles.AI.VirtualGamePiece.html
  name: VirtualGamePiece[,]
  nameWithType: VirtualGamePiece[,]
  fullName: TaleOfTiles.AI.VirtualGamePiece[,]
  nameWithType.vb: VirtualGamePiece(,)
  fullName.vb: TaleOfTiles.AI.VirtualGamePiece(,)
  name.vb: VirtualGamePiece(,)
  spec.csharp:
  - uid: TaleOfTiles.AI.VirtualGamePiece
    name: VirtualGamePiece
    href: TaleOfTiles.AI.VirtualGamePiece.html
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: TaleOfTiles.AI.VirtualGamePiece
    name: VirtualGamePiece
    href: TaleOfTiles.AI.VirtualGamePiece.html
  - name: (
  - name: ','
  - name: )
- uid: TaleOfTiles.AI.VirtualGamePiece[]
  isExternal: true
  href: TaleOfTiles.AI.VirtualGamePiece.html
  name: VirtualGamePiece[]
  nameWithType: VirtualGamePiece[]
  fullName: TaleOfTiles.AI.VirtualGamePiece[]
  nameWithType.vb: VirtualGamePiece()
  fullName.vb: TaleOfTiles.AI.VirtualGamePiece()
  name.vb: VirtualGamePiece()
  spec.csharp:
  - uid: TaleOfTiles.AI.VirtualGamePiece
    name: VirtualGamePiece
    href: TaleOfTiles.AI.VirtualGamePiece.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TaleOfTiles.AI.VirtualGamePiece
    name: VirtualGamePiece
    href: TaleOfTiles.AI.VirtualGamePiece.html
  - name: (
  - name: )
- uid: TaleOfTiles.AI.VirtualBoard.HasMatchOnFill*
  commentId: Overload:TaleOfTiles.AI.VirtualBoard.HasMatchOnFill
  href: TaleOfTiles.AI.VirtualBoard.html#TaleOfTiles_AI_VirtualBoard_HasMatchOnFill_System_Int32_System_Int32_TaleOfTiles_AI_VirtualGamePiece_0
  name: HasMatchOnFill
  nameWithType: VirtualBoard.HasMatchOnFill
  fullName: TaleOfTiles.AI.VirtualBoard.HasMatchOnFill
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TaleOfTiles.AI.VirtualBoard.FindMatches*
  commentId: Overload:TaleOfTiles.AI.VirtualBoard.FindMatches
  href: TaleOfTiles.AI.VirtualBoard.html#TaleOfTiles_AI_VirtualBoard_FindMatches_System_Int32_System_Int32_UnityEngine_Vector2_TaleOfTiles_AI_VirtualGamePiece_0
  name: FindMatches
  nameWithType: VirtualBoard.FindMatches
  fullName: TaleOfTiles.AI.VirtualBoard.FindMatches
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Collections.Generic.List{TaleOfTiles.AI.VirtualGamePiece}
  commentId: T:System.Collections.Generic.List{TaleOfTiles.AI.VirtualGamePiece}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<VirtualGamePiece>
  nameWithType: List<VirtualGamePiece>
  fullName: System.Collections.Generic.List<TaleOfTiles.AI.VirtualGamePiece>
  nameWithType.vb: List(Of VirtualGamePiece)
  fullName.vb: System.Collections.Generic.List(Of TaleOfTiles.AI.VirtualGamePiece)
  name.vb: List(Of VirtualGamePiece)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TaleOfTiles.AI.VirtualGamePiece
    name: VirtualGamePiece
    href: TaleOfTiles.AI.VirtualGamePiece.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TaleOfTiles.AI.VirtualGamePiece
    name: VirtualGamePiece
    href: TaleOfTiles.AI.VirtualGamePiece.html
  - name: )
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TaleOfTiles.AI.VirtualBoard.IsWithinBounds*
  commentId: Overload:TaleOfTiles.AI.VirtualBoard.IsWithinBounds
  href: TaleOfTiles.AI.VirtualBoard.html#TaleOfTiles_AI_VirtualBoard_IsWithinBounds_System_Int32_System_Int32_TaleOfTiles_AI_VirtualGamePiece_0
  name: IsWithinBounds
  nameWithType: VirtualBoard.IsWithinBounds
  fullName: TaleOfTiles.AI.VirtualBoard.IsWithinBounds
- uid: TaleOfTiles.AI.VirtualBoard.GetRandomVirtualGamePiece*
  commentId: Overload:TaleOfTiles.AI.VirtualBoard.GetRandomVirtualGamePiece
  href: TaleOfTiles.AI.VirtualBoard.html#TaleOfTiles_AI_VirtualBoard_GetRandomVirtualGamePiece_TaleOfTiles_AI_VirtualGamePiece___
  name: GetRandomVirtualGamePiece
  nameWithType: VirtualBoard.GetRandomVirtualGamePiece
  fullName: TaleOfTiles.AI.VirtualBoard.GetRandomVirtualGamePiece
- uid: TaleOfTiles.AI.VirtualGamePiece
  commentId: T:TaleOfTiles.AI.VirtualGamePiece
  parent: TaleOfTiles.AI
  href: TaleOfTiles.AI.VirtualGamePiece.html
  name: VirtualGamePiece
  nameWithType: VirtualGamePiece
  fullName: TaleOfTiles.AI.VirtualGamePiece
- uid: TaleOfTiles.AI.VirtualBoard.CollapseBoard*
  commentId: Overload:TaleOfTiles.AI.VirtualBoard.CollapseBoard
  href: TaleOfTiles.AI.VirtualBoard.html#TaleOfTiles_AI_VirtualBoard_CollapseBoard_TaleOfTiles_AI_VirtualGamePiece_0
  name: CollapseBoard
  nameWithType: VirtualBoard.CollapseBoard
  fullName: TaleOfTiles.AI.VirtualBoard.CollapseBoard
- uid: TaleOfTiles.AI.VirtualBoard.FindMatchesAt*
  commentId: Overload:TaleOfTiles.AI.VirtualBoard.FindMatchesAt
  href: TaleOfTiles.AI.VirtualBoard.html#TaleOfTiles_AI_VirtualBoard_FindMatchesAt_System_Int32_System_Int32_TaleOfTiles_AI_VirtualGamePiece_0
  name: FindMatchesAt
  nameWithType: VirtualBoard.FindMatchesAt
  fullName: TaleOfTiles.AI.VirtualBoard.FindMatchesAt
- uid: System.Collections.Generic.List{TaleOfTiles.AI.BoardPos}
  commentId: T:System.Collections.Generic.List{TaleOfTiles.AI.BoardPos}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<BoardPos>
  nameWithType: List<BoardPos>
  fullName: System.Collections.Generic.List<TaleOfTiles.AI.BoardPos>
  nameWithType.vb: List(Of BoardPos)
  fullName.vb: System.Collections.Generic.List(Of TaleOfTiles.AI.BoardPos)
  name.vb: List(Of BoardPos)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TaleOfTiles.AI.BoardPos
    name: BoardPos
    href: TaleOfTiles.AI.BoardPos.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TaleOfTiles.AI.BoardPos
    name: BoardPos
    href: TaleOfTiles.AI.BoardPos.html
  - name: )
- uid: TaleOfTiles.AI.VirtualBoard.MakeCopyBoard*
  commentId: Overload:TaleOfTiles.AI.VirtualBoard.MakeCopyBoard
  href: TaleOfTiles.AI.VirtualBoard.html#TaleOfTiles_AI_VirtualBoard_MakeCopyBoard_TaleOfTiles_AI_VirtualGamePiece_0
  name: MakeCopyBoard
  nameWithType: VirtualBoard.MakeCopyBoard
  fullName: TaleOfTiles.AI.VirtualBoard.MakeCopyBoard
- uid: TaleOfTiles.AI.VirtualBoard.FindAllMatches*
  commentId: Overload:TaleOfTiles.AI.VirtualBoard.FindAllMatches
  href: TaleOfTiles.AI.VirtualBoard.html#TaleOfTiles_AI_VirtualBoard_FindAllMatches_TaleOfTiles_AI_VirtualGamePiece_0
  name: FindAllMatches
  nameWithType: VirtualBoard.FindAllMatches
  fullName: TaleOfTiles.AI.VirtualBoard.FindAllMatches
- uid: TaleOfTiles.AI.VirtualBoard.FindBestMove*
  commentId: Overload:TaleOfTiles.AI.VirtualBoard.FindBestMove
  href: TaleOfTiles.AI.VirtualBoard.html#TaleOfTiles_AI_VirtualBoard_FindBestMove_TaleOfTiles_AI_VirtualGamePiece_0
  name: FindBestMove
  nameWithType: VirtualBoard.FindBestMove
  fullName: TaleOfTiles.AI.VirtualBoard.FindBestMove
- uid: TaleOfTiles.Player.PlayerCharacter
  commentId: T:TaleOfTiles.Player.PlayerCharacter
  parent: TaleOfTiles.Player
  href: TaleOfTiles.Player.PlayerCharacter.html
  name: PlayerCharacter
  nameWithType: PlayerCharacter
  fullName: TaleOfTiles.Player.PlayerCharacter
- uid: TaleOfTiles.Card.Gems.GemActiveEffectType
  commentId: T:TaleOfTiles.Card.Gems.GemActiveEffectType
  parent: TaleOfTiles.Card.Gems
  href: TaleOfTiles.Card.Gems.GemActiveEffectType.html
  name: GemActiveEffectType
  nameWithType: GemActiveEffectType
  fullName: TaleOfTiles.Card.Gems.GemActiveEffectType
- uid: TaleOfTiles.Card.Gems.GemStatusEffectType
  commentId: T:TaleOfTiles.Card.Gems.GemStatusEffectType
  parent: TaleOfTiles.Card.Gems
  href: TaleOfTiles.Card.Gems.GemStatusEffectType.html
  name: GemStatusEffectType
  nameWithType: GemStatusEffectType
  fullName: TaleOfTiles.Card.Gems.GemStatusEffectType
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TaleOfTiles.AI.Move
  commentId: T:TaleOfTiles.AI.Move
  parent: TaleOfTiles.AI
  href: TaleOfTiles.AI.Move.html
  name: Move
  nameWithType: Move
  fullName: TaleOfTiles.AI.Move
- uid: TaleOfTiles.Player
  commentId: N:TaleOfTiles.Player
  href: TaleOfTiles.html
  name: TaleOfTiles.Player
  nameWithType: TaleOfTiles.Player
  fullName: TaleOfTiles.Player
  spec.csharp:
  - uid: TaleOfTiles
    name: TaleOfTiles
    href: TaleOfTiles.html
  - name: .
  - uid: TaleOfTiles.Player
    name: Player
    href: TaleOfTiles.Player.html
  spec.vb:
  - uid: TaleOfTiles
    name: TaleOfTiles
    href: TaleOfTiles.html
  - name: .
  - uid: TaleOfTiles.Player
    name: Player
    href: TaleOfTiles.Player.html
- uid: TaleOfTiles.Card.Gems
  commentId: N:TaleOfTiles.Card.Gems
  href: TaleOfTiles.html
  name: TaleOfTiles.Card.Gems
  nameWithType: TaleOfTiles.Card.Gems
  fullName: TaleOfTiles.Card.Gems
  spec.csharp:
  - uid: TaleOfTiles
    name: TaleOfTiles
    href: TaleOfTiles.html
  - name: .
  - uid: TaleOfTiles.Card
    name: Card
    href: TaleOfTiles.Card.html
  - name: .
  - uid: TaleOfTiles.Card.Gems
    name: Gems
    href: TaleOfTiles.Card.Gems.html
  spec.vb:
  - uid: TaleOfTiles
    name: TaleOfTiles
    href: TaleOfTiles.html
  - name: .
  - uid: TaleOfTiles.Card
    name: Card
    href: TaleOfTiles.Card.html
  - name: .
  - uid: TaleOfTiles.Card.Gems
    name: Gems
    href: TaleOfTiles.Card.Gems.html
- uid: TaleOfTiles.AI.VirtualBoard.FindAllMoves*
  commentId: Overload:TaleOfTiles.AI.VirtualBoard.FindAllMoves
  href: TaleOfTiles.AI.VirtualBoard.html#TaleOfTiles_AI_VirtualBoard_FindAllMoves_TaleOfTiles_AI_VirtualGamePiece_0
  name: FindAllMoves
  nameWithType: VirtualBoard.FindAllMoves
  fullName: TaleOfTiles.AI.VirtualBoard.FindAllMoves
- uid: System.Collections.Generic.List{TaleOfTiles.AI.Move}
  commentId: T:System.Collections.Generic.List{TaleOfTiles.AI.Move}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Move>
  nameWithType: List<Move>
  fullName: System.Collections.Generic.List<TaleOfTiles.AI.Move>
  nameWithType.vb: List(Of Move)
  fullName.vb: System.Collections.Generic.List(Of TaleOfTiles.AI.Move)
  name.vb: List(Of Move)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TaleOfTiles.AI.Move
    name: Move
    href: TaleOfTiles.AI.Move.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TaleOfTiles.AI.Move
    name: Move
    href: TaleOfTiles.AI.Move.html
  - name: )
- uid: TaleOfTiles.AI.VirtualBoard.SelectMoveByBiggestGemEffect*
  commentId: Overload:TaleOfTiles.AI.VirtualBoard.SelectMoveByBiggestGemEffect
  href: TaleOfTiles.AI.VirtualBoard.html#TaleOfTiles_AI_VirtualBoard_SelectMoveByBiggestGemEffect_System_Collections_Generic_List_TaleOfTiles_AI_Move__TaleOfTiles_Card_Gems_GemActiveEffectType_
  name: SelectMoveByBiggestGemEffect
  nameWithType: VirtualBoard.SelectMoveByBiggestGemEffect
  fullName: TaleOfTiles.AI.VirtualBoard.SelectMoveByBiggestGemEffect
- uid: TaleOfTiles.AI.VirtualBoard.FilterMovesListGemEffect*
  commentId: Overload:TaleOfTiles.AI.VirtualBoard.FilterMovesListGemEffect
  href: TaleOfTiles.AI.VirtualBoard.html#TaleOfTiles_AI_VirtualBoard_FilterMovesListGemEffect_System_Collections_Generic_List_TaleOfTiles_AI_Move__TaleOfTiles_Card_Gems_GemActiveEffectType_
  name: FilterMovesListGemEffect
  nameWithType: VirtualBoard.FilterMovesListGemEffect
  fullName: TaleOfTiles.AI.VirtualBoard.FilterMovesListGemEffect
- uid: TaleOfTiles.AI.VirtualBoard.SelectMoveByBiggestGemStatusEffect*
  commentId: Overload:TaleOfTiles.AI.VirtualBoard.SelectMoveByBiggestGemStatusEffect
  href: TaleOfTiles.AI.VirtualBoard.html#TaleOfTiles_AI_VirtualBoard_SelectMoveByBiggestGemStatusEffect_System_Collections_Generic_List_TaleOfTiles_AI_Move__TaleOfTiles_Card_Gems_GemStatusEffectType_
  name: SelectMoveByBiggestGemStatusEffect
  nameWithType: VirtualBoard.SelectMoveByBiggestGemStatusEffect
  fullName: TaleOfTiles.AI.VirtualBoard.SelectMoveByBiggestGemStatusEffect
- uid: TaleOfTiles.AI.VirtualBoard.FilterMovesListGemStatusEffect*
  commentId: Overload:TaleOfTiles.AI.VirtualBoard.FilterMovesListGemStatusEffect
  href: TaleOfTiles.AI.VirtualBoard.html#TaleOfTiles_AI_VirtualBoard_FilterMovesListGemStatusEffect_System_Collections_Generic_List_TaleOfTiles_AI_Move__TaleOfTiles_Card_Gems_GemStatusEffectType_
  name: FilterMovesListGemStatusEffect
  nameWithType: VirtualBoard.FilterMovesListGemStatusEffect
  fullName: TaleOfTiles.AI.VirtualBoard.FilterMovesListGemStatusEffect
- uid: TaleOfTiles.AI.VirtualBoard.ChooseMoveInSortedListByGemEffectAndIntelligence*
  commentId: Overload:TaleOfTiles.AI.VirtualBoard.ChooseMoveInSortedListByGemEffectAndIntelligence
  href: TaleOfTiles.AI.VirtualBoard.html#TaleOfTiles_AI_VirtualBoard_ChooseMoveInSortedListByGemEffectAndIntelligence_System_Collections_Generic_List_TaleOfTiles_AI_Move__TaleOfTiles_Card_Gems_GemActiveEffectType_System_Single_System_Int32_
  name: ChooseMoveInSortedListByGemEffectAndIntelligence
  nameWithType: VirtualBoard.ChooseMoveInSortedListByGemEffectAndIntelligence
  fullName: TaleOfTiles.AI.VirtualBoard.ChooseMoveInSortedListByGemEffectAndIntelligence
- uid: TaleOfTiles.AI.VirtualBoard.ChooseMoveInSortedListByGemStatusEffectAndIntelligence*
  commentId: Overload:TaleOfTiles.AI.VirtualBoard.ChooseMoveInSortedListByGemStatusEffectAndIntelligence
  href: TaleOfTiles.AI.VirtualBoard.html#TaleOfTiles_AI_VirtualBoard_ChooseMoveInSortedListByGemStatusEffectAndIntelligence_System_Collections_Generic_List_TaleOfTiles_AI_Move__TaleOfTiles_Card_Gems_GemStatusEffectType_System_Single_System_Int32_
  name: ChooseMoveInSortedListByGemStatusEffectAndIntelligence
  nameWithType: VirtualBoard.ChooseMoveInSortedListByGemStatusEffectAndIntelligence
  fullName: TaleOfTiles.AI.VirtualBoard.ChooseMoveInSortedListByGemStatusEffectAndIntelligence
- uid: TaleOfTiles.AI.VirtualBoard.ChooseMove*
  commentId: Overload:TaleOfTiles.AI.VirtualBoard.ChooseMove
  href: TaleOfTiles.AI.VirtualBoard.html#TaleOfTiles_AI_VirtualBoard_ChooseMove_System_Collections_Generic_List_TaleOfTiles_AI_Move__TaleOfTiles_Player_PlayerCharacter_TaleOfTiles_Card_Gems_GemActiveEffectType_TaleOfTiles_Card_Gems_GemStatusEffectType_System_Single_
  name: ChooseMove
  nameWithType: VirtualBoard.ChooseMove
  fullName: TaleOfTiles.AI.VirtualBoard.ChooseMove
- uid: TaleOfTiles.AI.VirtualBoard.ShuffleBoard*
  commentId: Overload:TaleOfTiles.AI.VirtualBoard.ShuffleBoard
  href: TaleOfTiles.AI.VirtualBoard.html#TaleOfTiles_AI_VirtualBoard_ShuffleBoard_TaleOfTiles_AI_VirtualGamePiece_0
  name: ShuffleBoard
  nameWithType: VirtualBoard.ShuffleBoard
  fullName: TaleOfTiles.AI.VirtualBoard.ShuffleBoard
