### YamlMime:ManagedReference
items:
- uid: TaleOfTiles.Arena.BoardManager
  commentId: T:TaleOfTiles.Arena.BoardManager
  id: BoardManager
  parent: TaleOfTiles.Arena
  children:
  - TaleOfTiles.Arena.BoardManager.ActivateBomb(UnityEngine.GameObject)
  - TaleOfTiles.Arena.BoardManager.BreakTileAt(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  - TaleOfTiles.Arena.BoardManager.BreakTileAt(System.Int32,System.Int32)
  - TaleOfTiles.Arena.BoardManager.CanAddCollectible
  - TaleOfTiles.Arena.BoardManager.CheckDeadLock
  - TaleOfTiles.Arena.BoardManager.ClearAndCollapseRoutine(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  - TaleOfTiles.Arena.BoardManager.ClearAndRefillBoard(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  - TaleOfTiles.Arena.BoardManager.ClearAndRefillBoardRoutine(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  - TaleOfTiles.Arena.BoardManager.ClearBoard
  - TaleOfTiles.Arena.BoardManager.ClearPieceAt(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece},System.Collections.Generic.List{TaleOfTiles.AI.Combination})
  - TaleOfTiles.Arena.BoardManager.ClearPieceAt(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece},System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  - TaleOfTiles.Arena.BoardManager.ClearPieceAt(System.Int32,System.Int32)
  - TaleOfTiles.Arena.BoardManager.ClickTile(TaleOfTiles.Arena.Tile)
  - TaleOfTiles.Arena.BoardManager.CollapseColumn(System.Collections.Generic.List{System.Int32})
  - TaleOfTiles.Arena.BoardManager.CollapseColumn(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  - TaleOfTiles.Arena.BoardManager.CollapseColumn(System.Int32,System.Single)
  - TaleOfTiles.Arena.BoardManager.CreateGemsPrefabs
  - TaleOfTiles.Arena.BoardManager.DropBomb(System.Int32,System.Int32,UnityEngine.Vector2,System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  - TaleOfTiles.Arena.BoardManager.EndTurn
  - TaleOfTiles.Arena.BoardManager.FillBoard(System.Int32,System.Single)
  - TaleOfTiles.Arena.BoardManager.FillBoardFromList(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  - TaleOfTiles.Arena.BoardManager.FillRandomCollectibleAt(System.Int32,System.Int32,System.Int32,System.Single)
  - TaleOfTiles.Arena.BoardManager.FillRandomGamePieceAt(System.Int32,System.Int32,System.Int32,System.Single)
  - TaleOfTiles.Arena.BoardManager.FindAllCollectibles
  - TaleOfTiles.Arena.BoardManager.FindAllMatchValue(System.String)
  - TaleOfTiles.Arena.BoardManager.FindAllMatches
  - TaleOfTiles.Arena.BoardManager.FindAllMoves
  - TaleOfTiles.Arena.BoardManager.FindCollectiblesAt(System.Int32,System.Boolean)
  - TaleOfTiles.Arena.BoardManager.FindGamePieceByMatchValue(UnityEngine.GameObject[],System.String)
  - TaleOfTiles.Arena.BoardManager.FindHorizontalMatches(System.Int32,System.Int32,System.Int32)
  - TaleOfTiles.Arena.BoardManager.FindMatchValue(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  - TaleOfTiles.Arena.BoardManager.FindMatches(System.Int32,System.Int32,UnityEngine.Vector2,System.Int32)
  - TaleOfTiles.Arena.BoardManager.FindMatchesAt(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece},System.Int32)
  - TaleOfTiles.Arena.BoardManager.FindMatchesAt(System.Int32,System.Int32,System.Int32)
  - TaleOfTiles.Arena.BoardManager.FindVerticalMatches(System.Int32,System.Int32,System.Int32)
  - TaleOfTiles.Arena.BoardManager.GetAdjacentPieces(System.Int32,System.Int32,System.Int32)
  - TaleOfTiles.Arena.BoardManager.GetBombedPieces(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  - TaleOfTiles.Arena.BoardManager.GetColumnPieces(System.Int32)
  - TaleOfTiles.Arena.BoardManager.GetColumns(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  - TaleOfTiles.Arena.BoardManager.GetGamePiece(TaleOfTiles.Arena.Tile)
  - TaleOfTiles.Arena.BoardManager.GetRandomCollectible
  - TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePiece
  - TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePieceWithStatus(TaleOfTiles.Card.Gems.GemStatusEffectType)
  - TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePieces(System.Single)
  - TaleOfTiles.Arena.BoardManager.GetRandomGamePiece
  - TaleOfTiles.Arena.BoardManager.GetRandomObject(UnityEngine.GameObject[])
  - TaleOfTiles.Arena.BoardManager.GetRowPieces(System.Int32)
  - TaleOfTiles.Arena.BoardManager.GetTile(TaleOfTiles.Arena.GamePiece)
  - TaleOfTiles.Arena.BoardManager.HasMatchOnFill(System.Int32,System.Int32,System.Int32)
  - TaleOfTiles.Arena.BoardManager.InitTiles
  - TaleOfTiles.Arena.BoardManager.IsCollapsed(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  - TaleOfTiles.Arena.BoardManager.IsColorBomb(TaleOfTiles.Arena.GamePiece)
  - TaleOfTiles.Arena.BoardManager.IsCornerMatch(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  - TaleOfTiles.Arena.BoardManager.IsNextTo(TaleOfTiles.Arena.Tile,TaleOfTiles.Arena.Tile)
  - TaleOfTiles.Arena.BoardManager.IsWithinBounds(System.Int32,System.Int32)
  - TaleOfTiles.Arena.BoardManager.MakeBomb(UnityEngine.GameObject,System.Int32,System.Int32)
  - TaleOfTiles.Arena.BoardManager.MakeGamePiece(UnityEngine.GameObject,System.Int32,System.Int32,System.Int32,System.Single)
  - TaleOfTiles.Arena.BoardManager.PlaceGamePiece(TaleOfTiles.Arena.GamePiece,System.Int32,System.Int32)
  - TaleOfTiles.Arena.BoardManager.RefillRoutine
  - TaleOfTiles.Arena.BoardManager.ReleaseTile
  - TaleOfTiles.Arena.BoardManager.ReloadBoard
  - TaleOfTiles.Arena.BoardManager.RemoveCollectibles(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  - TaleOfTiles.Arena.BoardManager.RestartPartcilesOnGamePiece
  - TaleOfTiles.Arena.BoardManager.RestartParticlesWithEffect(TaleOfTiles.Card.Gems.GemStatusEffectType)
  - TaleOfTiles.Arena.BoardManager.ScoreMove
  - TaleOfTiles.Arena.BoardManager.SelectNextTile(TaleOfTiles.Arena.Tile)
  - TaleOfTiles.Arena.BoardManager.ShuffleBoard
  - TaleOfTiles.Arena.BoardManager.ShuffleBoardRoutine
  - TaleOfTiles.Arena.BoardManager.Start
  - TaleOfTiles.Arena.BoardManager.SwitchTiles(TaleOfTiles.Arena.Tile,TaleOfTiles.Arena.Tile)
  - TaleOfTiles.Arena.BoardManager.SwitchTilesRoutine(TaleOfTiles.Arena.Tile,TaleOfTiles.Arena.Tile)
  - TaleOfTiles.Arena.BoardManager._score
  - TaleOfTiles.Arena.BoardManager.adjacentBombPrefabs
  - TaleOfTiles.Arena.BoardManager.allGamePieces
  - TaleOfTiles.Arena.BoardManager.allTilesArray
  - TaleOfTiles.Arena.BoardManager.baseGemPrefab
  - TaleOfTiles.Arena.BoardManager.chameleon_activated
  - TaleOfTiles.Arena.BoardManager.chanceForCollectible
  - TaleOfTiles.Arena.BoardManager.clickedTile
  - TaleOfTiles.Arena.BoardManager.collapseTime
  - TaleOfTiles.Arena.BoardManager.collectibleCount
  - TaleOfTiles.Arena.BoardManager.collectiblePrefabs
  - TaleOfTiles.Arena.BoardManager.colorBombPrefab
  - TaleOfTiles.Arena.BoardManager.columnBombPrefabs
  - TaleOfTiles.Arena.BoardManager.combo_counter
  - TaleOfTiles.Arena.BoardManager.debug_board_fill
  - TaleOfTiles.Arena.BoardManager.fillMoveTime
  - TaleOfTiles.Arena.BoardManager.fillYOffset
  - TaleOfTiles.Arena.BoardManager.gemSize
  - TaleOfTiles.Arena.BoardManager.gemsGrid
  - TaleOfTiles.Arena.BoardManager.gemsPrefabs
  - TaleOfTiles.Arena.BoardManager.height
  - TaleOfTiles.Arena.BoardManager.isRefilling
  - TaleOfTiles.Arena.BoardManager.m_boardDeadlock
  - TaleOfTiles.Arena.BoardManager.m_boardShuffler
  - TaleOfTiles.Arena.BoardManager.m_clickedTileBomb
  - TaleOfTiles.Arena.BoardManager.m_particleManager
  - TaleOfTiles.Arena.BoardManager.m_playerInputEnabled
  - TaleOfTiles.Arena.BoardManager.m_scoreMultiplier
  - TaleOfTiles.Arena.BoardManager.m_targetTileBomb
  - TaleOfTiles.Arena.BoardManager.maxCollectibles
  - TaleOfTiles.Arena.BoardManager.player
  - TaleOfTiles.Arena.BoardManager.rowBombPrefabs
  - TaleOfTiles.Arena.BoardManager.score
  - TaleOfTiles.Arena.BoardManager.score_counter
  - TaleOfTiles.Arena.BoardManager.static_random
  - TaleOfTiles.Arena.BoardManager.swapTime
  - TaleOfTiles.Arena.BoardManager.targetTile
  - TaleOfTiles.Arena.BoardManager.tilesGrid
  - TaleOfTiles.Arena.BoardManager.width
  langs:
  - csharp
  - vb
  name: BoardManager
  nameWithType: BoardManager
  fullName: TaleOfTiles.Arena.BoardManager
  type: Class
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: BoardManager
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Class that manages the game board and related functions.
  example: []
  syntax:
    content: 'public class BoardManager : MonoBehaviour'
    content.vb: Public Class BoardManager Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
- uid: TaleOfTiles.Arena.BoardManager.player
  commentId: F:TaleOfTiles.Arena.BoardManager.player
  id: player
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: player
  nameWithType: BoardManager.player
  fullName: TaleOfTiles.Arena.BoardManager.player
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: player
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: PlayerCharacter object representing the player.
  example: []
  syntax:
    content: public PlayerCharacter player
    return:
      type: TaleOfTiles.Player.PlayerCharacter
    content.vb: Public player As PlayerCharacter
- uid: TaleOfTiles.Arena.BoardManager.baseGemPrefab
  commentId: F:TaleOfTiles.Arena.BoardManager.baseGemPrefab
  id: baseGemPrefab
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: baseGemPrefab
  nameWithType: BoardManager.baseGemPrefab
  fullName: TaleOfTiles.Arena.BoardManager.baseGemPrefab
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: baseGemPrefab
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Base gem prefab to be used for creating gems.
  example: []
  syntax:
    content: public GameObject baseGemPrefab
    return:
      type: UnityEngine.GameObject
    content.vb: Public baseGemPrefab As GameObject
- uid: TaleOfTiles.Arena.BoardManager.gemsGrid
  commentId: F:TaleOfTiles.Arena.BoardManager.gemsGrid
  id: gemsGrid
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: gemsGrid
  nameWithType: BoardManager.gemsGrid
  fullName: TaleOfTiles.Arena.BoardManager.gemsGrid
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: gemsGrid
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 32
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Game object representing the grid of gems.
  example: []
  syntax:
    content: public GameObject gemsGrid
    return:
      type: UnityEngine.GameObject
    content.vb: Public gemsGrid As GameObject
- uid: TaleOfTiles.Arena.BoardManager.tilesGrid
  commentId: F:TaleOfTiles.Arena.BoardManager.tilesGrid
  id: tilesGrid
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: tilesGrid
  nameWithType: BoardManager.tilesGrid
  fullName: TaleOfTiles.Arena.BoardManager.tilesGrid
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: tilesGrid
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 37
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: GameObject representing the grid of tiles.
  example: []
  syntax:
    content: public GameObject tilesGrid
    return:
      type: UnityEngine.GameObject
    content.vb: Public tilesGrid As GameObject
- uid: TaleOfTiles.Arena.BoardManager.allTilesArray
  commentId: F:TaleOfTiles.Arena.BoardManager.allTilesArray
  id: allTilesArray
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: allTilesArray
  nameWithType: BoardManager.allTilesArray
  fullName: TaleOfTiles.Arena.BoardManager.allTilesArray
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: allTilesArray
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 42
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: A 2D array of all the tiles present in the game.
  example: []
  syntax:
    content: public Tile[,] allTilesArray
    return:
      type: TaleOfTiles.Arena.Tile[,]
    content.vb: Public allTilesArray As Tile(,)
- uid: TaleOfTiles.Arena.BoardManager.allGamePieces
  commentId: F:TaleOfTiles.Arena.BoardManager.allGamePieces
  id: allGamePieces
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: allGamePieces
  nameWithType: BoardManager.allGamePieces
  fullName: TaleOfTiles.Arena.BoardManager.allGamePieces
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: allGamePieces
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 47
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: A 2D array of all the game pieces.
  example: []
  syntax:
    content: public GamePiece[,] allGamePieces
    return:
      type: TaleOfTiles.Arena.GamePiece[,]
    content.vb: Public allGamePieces As GamePiece(,)
- uid: TaleOfTiles.Arena.BoardManager.gemsPrefabs
  commentId: F:TaleOfTiles.Arena.BoardManager.gemsPrefabs
  id: gemsPrefabs
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: gemsPrefabs
  nameWithType: BoardManager.gemsPrefabs
  fullName: TaleOfTiles.Arena.BoardManager.gemsPrefabs
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: gemsPrefabs
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 52
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: List of GameObjects representing the gem prefabs.
  example: []
  syntax:
    content: public List<GameObject> gemsPrefabs
    return:
      type: System.Collections.Generic.List{UnityEngine.GameObject}
    content.vb: Public gemsPrefabs As List(Of GameObject)
- uid: TaleOfTiles.Arena.BoardManager.adjacentBombPrefabs
  commentId: F:TaleOfTiles.Arena.BoardManager.adjacentBombPrefabs
  id: adjacentBombPrefabs
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: adjacentBombPrefabs
  nameWithType: BoardManager.adjacentBombPrefabs
  fullName: TaleOfTiles.Arena.BoardManager.adjacentBombPrefabs
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: adjacentBombPrefabs
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 58
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Array of GameObjects representing the prefabs for adjacent bombs.
  example: []
  syntax:
    content: public GameObject[] adjacentBombPrefabs
    return:
      type: UnityEngine.GameObject[]
    content.vb: Public adjacentBombPrefabs As GameObject()
- uid: TaleOfTiles.Arena.BoardManager.columnBombPrefabs
  commentId: F:TaleOfTiles.Arena.BoardManager.columnBombPrefabs
  id: columnBombPrefabs
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: columnBombPrefabs
  nameWithType: BoardManager.columnBombPrefabs
  fullName: TaleOfTiles.Arena.BoardManager.columnBombPrefabs
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: columnBombPrefabs
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 64
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Array of GameObjects representing the prefabs for column bombs.
  example: []
  syntax:
    content: public GameObject[] columnBombPrefabs
    return:
      type: UnityEngine.GameObject[]
    content.vb: Public columnBombPrefabs As GameObject()
- uid: TaleOfTiles.Arena.BoardManager.rowBombPrefabs
  commentId: F:TaleOfTiles.Arena.BoardManager.rowBombPrefabs
  id: rowBombPrefabs
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: rowBombPrefabs
  nameWithType: BoardManager.rowBombPrefabs
  fullName: TaleOfTiles.Arena.BoardManager.rowBombPrefabs
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: rowBombPrefabs
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 70
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Array of GameObjects representing the prefabs for row bombs.
  example: []
  syntax:
    content: public GameObject[] rowBombPrefabs
    return:
      type: UnityEngine.GameObject[]
    content.vb: Public rowBombPrefabs As GameObject()
- uid: TaleOfTiles.Arena.BoardManager.colorBombPrefab
  commentId: F:TaleOfTiles.Arena.BoardManager.colorBombPrefab
  id: colorBombPrefab
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: colorBombPrefab
  nameWithType: BoardManager.colorBombPrefab
  fullName: TaleOfTiles.Arena.BoardManager.colorBombPrefab
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: colorBombPrefab
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 76
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: GameObject representing the color bomb prefab.
  example: []
  syntax:
    content: public GameObject colorBombPrefab
    return:
      type: UnityEngine.GameObject
    content.vb: Public colorBombPrefab As GameObject
- uid: TaleOfTiles.Arena.BoardManager.maxCollectibles
  commentId: F:TaleOfTiles.Arena.BoardManager.maxCollectibles
  id: maxCollectibles
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: maxCollectibles
  nameWithType: BoardManager.maxCollectibles
  fullName: TaleOfTiles.Arena.BoardManager.maxCollectibles
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: maxCollectibles
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 82
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Maximum number of collectibles allowed per board.
  example: []
  syntax:
    content: public int maxCollectibles
    return:
      type: System.Int32
    content.vb: Public maxCollectibles As Integer
- uid: TaleOfTiles.Arena.BoardManager.collectibleCount
  commentId: F:TaleOfTiles.Arena.BoardManager.collectibleCount
  id: collectibleCount
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: collectibleCount
  nameWithType: BoardManager.collectibleCount
  fullName: TaleOfTiles.Arena.BoardManager.collectibleCount
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: collectibleCount
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 88
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Current number of collectibles on the board.
  example: []
  syntax:
    content: public int collectibleCount
    return:
      type: System.Int32
    content.vb: Public collectibleCount As Integer
- uid: TaleOfTiles.Arena.BoardManager.chanceForCollectible
  commentId: F:TaleOfTiles.Arena.BoardManager.chanceForCollectible
  id: chanceForCollectible
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: chanceForCollectible
  nameWithType: BoardManager.chanceForCollectible
  fullName: TaleOfTiles.Arena.BoardManager.chanceForCollectible
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: chanceForCollectible
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 95
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Chance for a top-row tile to get a collectible.
  example: []
  syntax:
    content: >-
      [Range(0, 1)]

      public float chanceForCollectible
    return:
      type: System.Single
    content.vb: >-
      <Range(0, 1)>

      Public chanceForCollectible As Single
  attributes:
  - type: UnityEngine.RangeAttribute
    ctor: UnityEngine.RangeAttribute.#ctor(System.Single,System.Single)
    arguments:
    - type: System.Single
      value: 0
    - type: System.Single
      value: 1
- uid: TaleOfTiles.Arena.BoardManager.collectiblePrefabs
  commentId: F:TaleOfTiles.Arena.BoardManager.collectiblePrefabs
  id: collectiblePrefabs
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: collectiblePrefabs
  nameWithType: BoardManager.collectiblePrefabs
  fullName: TaleOfTiles.Arena.BoardManager.collectiblePrefabs
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: collectiblePrefabs
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 101
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Array of GameObjects representing the collectible prefabs.
  example: []
  syntax:
    content: public GameObject[] collectiblePrefabs
    return:
      type: UnityEngine.GameObject[]
    content.vb: Public collectiblePrefabs As GameObject()
- uid: TaleOfTiles.Arena.BoardManager.clickedTile
  commentId: F:TaleOfTiles.Arena.BoardManager.clickedTile
  id: clickedTile
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: clickedTile
  nameWithType: BoardManager.clickedTile
  fullName: TaleOfTiles.Arena.BoardManager.clickedTile
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: clickedTile
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 106
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: The currently clicked tile by the user.
  example: []
  syntax:
    content: public Tile clickedTile
    return:
      type: TaleOfTiles.Arena.Tile
    content.vb: Public clickedTile As Tile
- uid: TaleOfTiles.Arena.BoardManager.targetTile
  commentId: F:TaleOfTiles.Arena.BoardManager.targetTile
  id: targetTile
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: targetTile
  nameWithType: BoardManager.targetTile
  fullName: TaleOfTiles.Arena.BoardManager.targetTile
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: targetTile
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 111
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: The tile that is being targeted by the player.
  example: []
  syntax:
    content: public Tile targetTile
    return:
      type: TaleOfTiles.Arena.Tile
    content.vb: Public targetTile As Tile
- uid: TaleOfTiles.Arena.BoardManager.m_playerInputEnabled
  commentId: F:TaleOfTiles.Arena.BoardManager.m_playerInputEnabled
  id: m_playerInputEnabled
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: m_playerInputEnabled
  nameWithType: BoardManager.m_playerInputEnabled
  fullName: TaleOfTiles.Arena.BoardManager.m_playerInputEnabled
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: m_playerInputEnabled
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 116
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Flag indicating whether the player's input is enabled.
  example: []
  syntax:
    content: public bool m_playerInputEnabled
    return:
      type: System.Boolean
    content.vb: Public m_playerInputEnabled As Boolean
- uid: TaleOfTiles.Arena.BoardManager.isRefilling
  commentId: F:TaleOfTiles.Arena.BoardManager.isRefilling
  id: isRefilling
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: isRefilling
  nameWithType: BoardManager.isRefilling
  fullName: TaleOfTiles.Arena.BoardManager.isRefilling
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: isRefilling
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 121
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Flag indicating whether the board is refilling.
  example: []
  syntax:
    content: public bool isRefilling
    return:
      type: System.Boolean
    content.vb: Public isRefilling As Boolean
- uid: TaleOfTiles.Arena.BoardManager.m_scoreMultiplier
  commentId: F:TaleOfTiles.Arena.BoardManager.m_scoreMultiplier
  id: m_scoreMultiplier
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: m_scoreMultiplier
  nameWithType: BoardManager.m_scoreMultiplier
  fullName: TaleOfTiles.Arena.BoardManager.m_scoreMultiplier
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: m_scoreMultiplier
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 127
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: The current score multiplier, based on the number of chain reactions caused.
  example: []
  syntax:
    content: private int m_scoreMultiplier
    return:
      type: System.Int32
    content.vb: Private m_scoreMultiplier As Integer
- uid: TaleOfTiles.Arena.BoardManager.swapTime
  commentId: F:TaleOfTiles.Arena.BoardManager.swapTime
  id: swapTime
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: swapTime
  nameWithType: BoardManager.swapTime
  fullName: TaleOfTiles.Arena.BoardManager.swapTime
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: swapTime
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 133
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: The amount of time required to swap game pieces between the target and clicked tile.
  example: []
  syntax:
    content: public float swapTime
    return:
      type: System.Single
    content.vb: Public swapTime As Single
- uid: TaleOfTiles.Arena.BoardManager.collapseTime
  commentId: F:TaleOfTiles.Arena.BoardManager.collapseTime
  id: collapseTime
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: collapseTime
  nameWithType: BoardManager.collapseTime
  fullName: TaleOfTiles.Arena.BoardManager.collapseTime
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: collapseTime
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 138
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: The amount of time required for the board to collapse.
  example: []
  syntax:
    content: public float collapseTime
    return:
      type: System.Single
    content.vb: Public collapseTime As Single
- uid: TaleOfTiles.Arena.BoardManager.height
  commentId: F:TaleOfTiles.Arena.BoardManager.height
  id: height
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: height
  nameWithType: BoardManager.height
  fullName: TaleOfTiles.Arena.BoardManager.height
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: height
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 143
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: The height of the game board.
  example: []
  syntax:
    content: public int height
    return:
      type: System.Int32
    content.vb: Public height As Integer
- uid: TaleOfTiles.Arena.BoardManager.width
  commentId: F:TaleOfTiles.Arena.BoardManager.width
  id: width
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: width
  nameWithType: BoardManager.width
  fullName: TaleOfTiles.Arena.BoardManager.width
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: width
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 148
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: The width of the game board.
  example: []
  syntax:
    content: public int width
    return:
      type: System.Int32
    content.vb: Public width As Integer
- uid: TaleOfTiles.Arena.BoardManager.fillYOffset
  commentId: F:TaleOfTiles.Arena.BoardManager.fillYOffset
  id: fillYOffset
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: fillYOffset
  nameWithType: BoardManager.fillYOffset
  fullName: TaleOfTiles.Arena.BoardManager.fillYOffset
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: fillYOffset
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 154
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Y Offset used to make the pieces "fall" into place to fill the Board.
  example: []
  syntax:
    content: public int fillYOffset
    return:
      type: System.Int32
    content.vb: Public fillYOffset As Integer
- uid: TaleOfTiles.Arena.BoardManager.fillMoveTime
  commentId: F:TaleOfTiles.Arena.BoardManager.fillMoveTime
  id: fillMoveTime
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: fillMoveTime
  nameWithType: BoardManager.fillMoveTime
  fullName: TaleOfTiles.Arena.BoardManager.fillMoveTime
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: fillMoveTime
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 160
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Time used to fill the board.
  example: []
  syntax:
    content: public float fillMoveTime
    return:
      type: System.Single
    content.vb: Public fillMoveTime As Single
- uid: TaleOfTiles.Arena.BoardManager.m_boardDeadlock
  commentId: F:TaleOfTiles.Arena.BoardManager.m_boardDeadlock
  id: m_boardDeadlock
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: m_boardDeadlock
  nameWithType: BoardManager.m_boardDeadlock
  fullName: TaleOfTiles.Arena.BoardManager.m_boardDeadlock
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: m_boardDeadlock
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 165
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Instance of the BoardDeadlock class.
  example: []
  syntax:
    content: private BoardDeadlock m_boardDeadlock
    return:
      type: TaleOfTiles.Arena.BoardDeadlock
    content.vb: Private m_boardDeadlock As BoardDeadlock
- uid: TaleOfTiles.Arena.BoardManager.m_boardShuffler
  commentId: F:TaleOfTiles.Arena.BoardManager.m_boardShuffler
  id: m_boardShuffler
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: m_boardShuffler
  nameWithType: BoardManager.m_boardShuffler
  fullName: TaleOfTiles.Arena.BoardManager.m_boardShuffler
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: m_boardShuffler
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 170
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Instance of the BoardShuffler class.
  example: []
  syntax:
    content: private BoardShuffler m_boardShuffler
    return:
      type: TaleOfTiles.Arena.BoardShuffler
    content.vb: Private m_boardShuffler As BoardShuffler
- uid: TaleOfTiles.Arena.BoardManager.m_particleManager
  commentId: F:TaleOfTiles.Arena.BoardManager.m_particleManager
  id: m_particleManager
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: m_particleManager
  nameWithType: BoardManager.m_particleManager
  fullName: TaleOfTiles.Arena.BoardManager.m_particleManager
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: m_particleManager
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 176
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Instance of the ParticleManager class for managing particle effects.
  example: []
  syntax:
    content: private ParticleManager m_particleManager
    return:
      type: TaleOfTiles.UI.ParticleManager
    content.vb: Private m_particleManager As ParticleManager
- uid: TaleOfTiles.Arena.BoardManager.gemSize
  commentId: F:TaleOfTiles.Arena.BoardManager.gemSize
  id: gemSize
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: gemSize
  nameWithType: BoardManager.gemSize
  fullName: TaleOfTiles.Arena.BoardManager.gemSize
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: gemSize
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 181
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Size of a gem on the board.
  example: []
  syntax:
    content: private Vector2 gemSize
    return:
      type: UnityEngine.Vector2
    content.vb: Private gemSize As Vector2
- uid: TaleOfTiles.Arena.BoardManager.m_clickedTileBomb
  commentId: F:TaleOfTiles.Arena.BoardManager.m_clickedTileBomb
  id: m_clickedTileBomb
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: m_clickedTileBomb
  nameWithType: BoardManager.m_clickedTileBomb
  fullName: TaleOfTiles.Arena.BoardManager.m_clickedTileBomb
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: m_clickedTileBomb
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 187
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Reference to a bomb created on the clicked tile.
  example: []
  syntax:
    content: private GameObject m_clickedTileBomb
    return:
      type: UnityEngine.GameObject
    content.vb: Private m_clickedTileBomb As GameObject
- uid: TaleOfTiles.Arena.BoardManager.m_targetTileBomb
  commentId: F:TaleOfTiles.Arena.BoardManager.m_targetTileBomb
  id: m_targetTileBomb
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: m_targetTileBomb
  nameWithType: BoardManager.m_targetTileBomb
  fullName: TaleOfTiles.Arena.BoardManager.m_targetTileBomb
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: m_targetTileBomb
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 193
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Reference to a bomb created on the target tile.
  example: []
  syntax:
    content: private GameObject m_targetTileBomb
    return:
      type: UnityEngine.GameObject
    content.vb: Private m_targetTileBomb As GameObject
- uid: TaleOfTiles.Arena.BoardManager.static_random
  commentId: F:TaleOfTiles.Arena.BoardManager.static_random
  id: static_random
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: static_random
  nameWithType: BoardManager.static_random
  fullName: TaleOfTiles.Arena.BoardManager.static_random
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: static_random
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 198
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: System.Random instance for generating random numbers.
  example: []
  syntax:
    content: private Random static_random
    return:
      type: System.Random
    content.vb: Private static_random As Random
- uid: TaleOfTiles.Arena.BoardManager.debug_board_fill
  commentId: F:TaleOfTiles.Arena.BoardManager.debug_board_fill
  id: debug_board_fill
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: debug_board_fill
  nameWithType: BoardManager.debug_board_fill
  fullName: TaleOfTiles.Arena.BoardManager.debug_board_fill
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: debug_board_fill
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 203
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Flag to debug board fill.
  example: []
  syntax:
    content: public bool debug_board_fill
    return:
      type: System.Boolean
    content.vb: Public debug_board_fill As Boolean
- uid: TaleOfTiles.Arena.BoardManager.combo_counter
  commentId: F:TaleOfTiles.Arena.BoardManager.combo_counter
  id: combo_counter
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: combo_counter
  nameWithType: BoardManager.combo_counter
  fullName: TaleOfTiles.Arena.BoardManager.combo_counter
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: combo_counter
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 208
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Text component for displaying combo count.
  example: []
  syntax:
    content: public Text combo_counter
    return:
      type: UnityEngine.UI.Text
    content.vb: Public combo_counter As Text
- uid: TaleOfTiles.Arena.BoardManager.score_counter
  commentId: F:TaleOfTiles.Arena.BoardManager.score_counter
  id: score_counter
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: score_counter
  nameWithType: BoardManager.score_counter
  fullName: TaleOfTiles.Arena.BoardManager.score_counter
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: score_counter
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 213
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Text component for displaying score.
  example: []
  syntax:
    content: public Text score_counter
    return:
      type: UnityEngine.UI.Text
    content.vb: Public score_counter As Text
- uid: TaleOfTiles.Arena.BoardManager._score
  commentId: F:TaleOfTiles.Arena.BoardManager._score
  id: _score
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: _score
  nameWithType: BoardManager._score
  fullName: TaleOfTiles.Arena.BoardManager._score
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: _score
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 218
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: The current score of the game.
  example: []
  syntax:
    content: public float _score
    return:
      type: System.Single
    content.vb: Public _score As Single
- uid: TaleOfTiles.Arena.BoardManager.score
  commentId: P:TaleOfTiles.Arena.BoardManager.score
  id: score
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: score
  nameWithType: BoardManager.score
  fullName: TaleOfTiles.Arena.BoardManager.score
  type: Property
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: score
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 223
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Property to get and set the score. Updates the score_counter text on set.
  example: []
  syntax:
    content: public float score { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property score As Single
  overload: TaleOfTiles.Arena.BoardManager.score*
- uid: TaleOfTiles.Arena.BoardManager.chameleon_activated
  commentId: F:TaleOfTiles.Arena.BoardManager.chameleon_activated
  id: chameleon_activated
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: chameleon_activated
  nameWithType: BoardManager.chameleon_activated
  fullName: TaleOfTiles.Arena.BoardManager.chameleon_activated
  type: Field
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: chameleon_activated
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 242
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Flag to check if the chameleon is currently activated.
  example: []
  syntax:
    content: public bool chameleon_activated
    return:
      type: System.Boolean
    content.vb: Public chameleon_activated As Boolean
- uid: TaleOfTiles.Arena.BoardManager.Start
  commentId: M:TaleOfTiles.Arena.BoardManager.Start
  id: Start
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: BoardManager.Start()
  fullName: TaleOfTiles.Arena.BoardManager.Start()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: Start
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 247
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Method called at the start of the game. Initializes components.
  example: []
  syntax:
    content: private void Start()
    content.vb: Private Sub Start()
  overload: TaleOfTiles.Arena.BoardManager.Start*
- uid: TaleOfTiles.Arena.BoardManager.ClearBoard
  commentId: M:TaleOfTiles.Arena.BoardManager.ClearBoard
  id: ClearBoard
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: ClearBoard()
  nameWithType: BoardManager.ClearBoard()
  fullName: TaleOfTiles.Arena.BoardManager.ClearBoard()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: ClearBoard
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 257
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Clears the board by iterating over all game pieces and clearing them.
  example: []
  syntax:
    content: public void ClearBoard()
    content.vb: Public Sub ClearBoard()
  overload: TaleOfTiles.Arena.BoardManager.ClearBoard*
- uid: TaleOfTiles.Arena.BoardManager.ReloadBoard
  commentId: M:TaleOfTiles.Arena.BoardManager.ReloadBoard
  id: ReloadBoard
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: ReloadBoard()
  nameWithType: BoardManager.ReloadBoard()
  fullName: TaleOfTiles.Arena.BoardManager.ReloadBoard()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: ReloadBoard
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 275
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Reloads the game board by creating gems, clearing the board, initializing tiles, and filling the board.
  example: []
  syntax:
    content: public void ReloadBoard()
    content.vb: Public Sub ReloadBoard()
  overload: TaleOfTiles.Arena.BoardManager.ReloadBoard*
- uid: TaleOfTiles.Arena.BoardManager.CreateGemsPrefabs
  commentId: M:TaleOfTiles.Arena.BoardManager.CreateGemsPrefabs
  id: CreateGemsPrefabs
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: CreateGemsPrefabs()
  nameWithType: BoardManager.CreateGemsPrefabs()
  fullName: TaleOfTiles.Arena.BoardManager.CreateGemsPrefabs()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: CreateGemsPrefabs
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 300
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Creates gem prefabs based on the player's active skills.
  example: []
  syntax:
    content: public void CreateGemsPrefabs()
    content.vb: Public Sub CreateGemsPrefabs()
  overload: TaleOfTiles.Arena.BoardManager.CreateGemsPrefabs*
- uid: TaleOfTiles.Arena.BoardManager.InitTiles
  commentId: M:TaleOfTiles.Arena.BoardManager.InitTiles
  id: InitTiles
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: InitTiles()
  nameWithType: BoardManager.InitTiles()
  fullName: TaleOfTiles.Arena.BoardManager.InitTiles()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: InitTiles
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 340
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Initializes the tiles on the game board.
  example: []
  syntax:
    content: private void InitTiles()
    content.vb: Private Sub InitTiles()
  overload: TaleOfTiles.Arena.BoardManager.InitTiles*
- uid: TaleOfTiles.Arena.BoardManager.CanAddCollectible
  commentId: M:TaleOfTiles.Arena.BoardManager.CanAddCollectible
  id: CanAddCollectible
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: CanAddCollectible()
  nameWithType: BoardManager.CanAddCollectible()
  fullName: TaleOfTiles.Arena.BoardManager.CanAddCollectible()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: CanAddCollectible
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 361
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Checks if a collectible can be added to the game board. Currently always returns false.
  example: []
  syntax:
    content: private bool CanAddCollectible()
    return:
      type: System.Boolean
    content.vb: Private Function CanAddCollectible() As Boolean
  overload: TaleOfTiles.Arena.BoardManager.CanAddCollectible*
- uid: TaleOfTiles.Arena.BoardManager.HasMatchOnFill(System.Int32,System.Int32,System.Int32)
  commentId: M:TaleOfTiles.Arena.BoardManager.HasMatchOnFill(System.Int32,System.Int32,System.Int32)
  id: HasMatchOnFill(System.Int32,System.Int32,System.Int32)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: HasMatchOnFill(int, int, int)
  nameWithType: BoardManager.HasMatchOnFill(int, int, int)
  fullName: TaleOfTiles.Arena.BoardManager.HasMatchOnFill(int, int, int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: HasMatchOnFill
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 373
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Checks if a match exists in the given direction starting from the position specified by x and y.
  example: []
  syntax:
    content: private bool HasMatchOnFill(int x, int y, int minLength = 3)
    parameters:
    - id: x
      type: System.Int32
      description: The x-coordinate of the position to check from.
    - id: y
      type: System.Int32
      description: The y-coordinate of the position to check from.
    - id: minLength
      type: System.Int32
      description: The minimum length of a match.
    return:
      type: System.Boolean
      description: True if a match exists, false otherwise.
    content.vb: Private Function HasMatchOnFill(x As Integer, y As Integer, minLength As Integer = 3) As Boolean
  overload: TaleOfTiles.Arena.BoardManager.HasMatchOnFill*
  nameWithType.vb: BoardManager.HasMatchOnFill(Integer, Integer, Integer)
  fullName.vb: TaleOfTiles.Arena.BoardManager.HasMatchOnFill(Integer, Integer, Integer)
  name.vb: HasMatchOnFill(Integer, Integer, Integer)
- uid: TaleOfTiles.Arena.BoardManager.ClearPieceAt(System.Int32,System.Int32)
  commentId: M:TaleOfTiles.Arena.BoardManager.ClearPieceAt(System.Int32,System.Int32)
  id: ClearPieceAt(System.Int32,System.Int32)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: ClearPieceAt(int, int)
  nameWithType: BoardManager.ClearPieceAt(int, int)
  fullName: TaleOfTiles.Arena.BoardManager.ClearPieceAt(int, int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: ClearPieceAt
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 402
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Clears the game piece at the specified position.
  example: []
  syntax:
    content: private void ClearPieceAt(int x, int y)
    parameters:
    - id: x
      type: System.Int32
      description: The x-coordinate of the position to clear.
    - id: y
      type: System.Int32
      description: The y-coordinate of the position to clear.
    content.vb: Private Sub ClearPieceAt(x As Integer, y As Integer)
  overload: TaleOfTiles.Arena.BoardManager.ClearPieceAt*
  nameWithType.vb: BoardManager.ClearPieceAt(Integer, Integer)
  fullName.vb: TaleOfTiles.Arena.BoardManager.ClearPieceAt(Integer, Integer)
  name.vb: ClearPieceAt(Integer, Integer)
- uid: TaleOfTiles.Arena.BoardManager.ClearPieceAt(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece},System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  commentId: M:TaleOfTiles.Arena.BoardManager.ClearPieceAt(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece},System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  id: ClearPieceAt(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece},System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: ClearPieceAt(List<GamePiece>, List<GamePiece>)
  nameWithType: BoardManager.ClearPieceAt(List<GamePiece>, List<GamePiece>)
  fullName: TaleOfTiles.Arena.BoardManager.ClearPieceAt(System.Collections.Generic.List<TaleOfTiles.Arena.GamePiece>, System.Collections.Generic.List<TaleOfTiles.Arena.GamePiece>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: ClearPieceAt
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 428
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Clears a list of game pieces.
  example: []
  syntax:
    content: private IEnumerator ClearPieceAt(List<GamePiece> gamePieces, List<GamePiece> bombedPieces)
    parameters:
    - id: gamePieces
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: The list of game pieces to clear.
    - id: bombedPieces
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: The list of game pieces destroyed by bombs.
    return:
      type: System.Collections.IEnumerator
      description: An IEnumerator to be used in a coroutine.
    content.vb: Private Function ClearPieceAt(gamePieces As List(Of GamePiece), bombedPieces As List(Of GamePiece)) As IEnumerator
  overload: TaleOfTiles.Arena.BoardManager.ClearPieceAt*
  nameWithType.vb: BoardManager.ClearPieceAt(List(Of GamePiece), List(Of GamePiece))
  fullName.vb: TaleOfTiles.Arena.BoardManager.ClearPieceAt(System.Collections.Generic.List(Of TaleOfTiles.Arena.GamePiece), System.Collections.Generic.List(Of TaleOfTiles.Arena.GamePiece))
  name.vb: ClearPieceAt(List(Of GamePiece), List(Of GamePiece))
- uid: TaleOfTiles.Arena.BoardManager.ClearPieceAt(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece},System.Collections.Generic.List{TaleOfTiles.AI.Combination})
  commentId: M:TaleOfTiles.Arena.BoardManager.ClearPieceAt(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece},System.Collections.Generic.List{TaleOfTiles.AI.Combination})
  id: ClearPieceAt(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece},System.Collections.Generic.List{TaleOfTiles.AI.Combination})
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: ClearPieceAt(List<GamePiece>, List<Combination>)
  nameWithType: BoardManager.ClearPieceAt(List<GamePiece>, List<Combination>)
  fullName: TaleOfTiles.Arena.BoardManager.ClearPieceAt(System.Collections.Generic.List<TaleOfTiles.Arena.GamePiece>, System.Collections.Generic.List<TaleOfTiles.AI.Combination>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: ClearPieceAt
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 484
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Clears a list of game pieces and scores combinations of pieces.
  example: []
  syntax:
    content: public IEnumerator ClearPieceAt(List<GamePiece> gamePieces, List<Combination> combinations)
    parameters:
    - id: gamePieces
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: The list of game pieces to clear.
    - id: combinations
      type: System.Collections.Generic.List{TaleOfTiles.AI.Combination}
      description: The list of combinations to score.
    return:
      type: System.Collections.IEnumerator
      description: An IEnumerator to be used in a coroutine.
    content.vb: Public Function ClearPieceAt(gamePieces As List(Of GamePiece), combinations As List(Of Combination)) As IEnumerator
  overload: TaleOfTiles.Arena.BoardManager.ClearPieceAt*
  nameWithType.vb: BoardManager.ClearPieceAt(List(Of GamePiece), List(Of Combination))
  fullName.vb: TaleOfTiles.Arena.BoardManager.ClearPieceAt(System.Collections.Generic.List(Of TaleOfTiles.Arena.GamePiece), System.Collections.Generic.List(Of TaleOfTiles.AI.Combination))
  name.vb: ClearPieceAt(List(Of GamePiece), List(Of Combination))
- uid: TaleOfTiles.Arena.BoardManager.FillBoard(System.Int32,System.Single)
  commentId: M:TaleOfTiles.Arena.BoardManager.FillBoard(System.Int32,System.Single)
  id: FillBoard(System.Int32,System.Single)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: FillBoard(int, float)
  nameWithType: BoardManager.FillBoard(int, float)
  fullName: TaleOfTiles.Arena.BoardManager.FillBoard(int, float)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FillBoard
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 517
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Fills the game board with game pieces, ensuring no matches are created during the fill.
  example: []
  syntax:
    content: private void FillBoard(int falseYOffset = 0, float moveTime = 0.1)
    parameters:
    - id: falseYOffset
      type: System.Int32
      description: The Y offset for filling the board.
    - id: moveTime
      type: System.Single
      description: The time taken to move a piece.
    content.vb: Private Sub FillBoard(falseYOffset As Integer = 0, moveTime As Single = 0.1)
  overload: TaleOfTiles.Arena.BoardManager.FillBoard*
  nameWithType.vb: BoardManager.FillBoard(Integer, Single)
  fullName.vb: TaleOfTiles.Arena.BoardManager.FillBoard(Integer, Single)
  name.vb: FillBoard(Integer, Single)
- uid: TaleOfTiles.Arena.BoardManager.FillBoardFromList(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  commentId: M:TaleOfTiles.Arena.BoardManager.FillBoardFromList(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  id: FillBoardFromList(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: FillBoardFromList(List<GamePiece>)
  nameWithType: BoardManager.FillBoardFromList(List<GamePiece>)
  fullName: TaleOfTiles.Arena.BoardManager.FillBoardFromList(System.Collections.Generic.List<TaleOfTiles.Arena.GamePiece>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FillBoardFromList
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 573
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Fills the game board using a known list of game pieces, ensuring no matches are created during the fill.
  example: []
  syntax:
    content: private void FillBoardFromList(List<GamePiece> gamePieces)
    parameters:
    - id: gamePieces
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: The list of game pieces to use.
    content.vb: Private Sub FillBoardFromList(gamePieces As List(Of GamePiece))
  overload: TaleOfTiles.Arena.BoardManager.FillBoardFromList*
  nameWithType.vb: BoardManager.FillBoardFromList(List(Of GamePiece))
  fullName.vb: TaleOfTiles.Arena.BoardManager.FillBoardFromList(System.Collections.Generic.List(Of TaleOfTiles.Arena.GamePiece))
  name.vb: FillBoardFromList(List(Of GamePiece))
- uid: TaleOfTiles.Arena.BoardManager.GetRandomObject(UnityEngine.GameObject[])
  commentId: M:TaleOfTiles.Arena.BoardManager.GetRandomObject(UnityEngine.GameObject[])
  id: GetRandomObject(UnityEngine.GameObject[])
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: GetRandomObject(GameObject[])
  nameWithType: BoardManager.GetRandomObject(GameObject[])
  fullName: TaleOfTiles.Arena.BoardManager.GetRandomObject(UnityEngine.GameObject[])
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: GetRandomObject
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 625
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Returns a random object from an array of GameObjects.
  example: []
  syntax:
    content: private GameObject GetRandomObject(GameObject[] objectArray)
    parameters:
    - id: objectArray
      type: UnityEngine.GameObject[]
      description: Array of GameObjects to choose from.
    return:
      type: UnityEngine.GameObject
      description: A random GameObject from the provided array.
    content.vb: Private Function GetRandomObject(objectArray As GameObject()) As GameObject
  overload: TaleOfTiles.Arena.BoardManager.GetRandomObject*
  nameWithType.vb: BoardManager.GetRandomObject(GameObject())
  fullName.vb: TaleOfTiles.Arena.BoardManager.GetRandomObject(UnityEngine.GameObject())
  name.vb: GetRandomObject(GameObject())
- uid: TaleOfTiles.Arena.BoardManager.GetRandomGamePiece
  commentId: M:TaleOfTiles.Arena.BoardManager.GetRandomGamePiece
  id: GetRandomGamePiece
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: GetRandomGamePiece()
  nameWithType: BoardManager.GetRandomGamePiece()
  fullName: TaleOfTiles.Arena.BoardManager.GetRandomGamePiece()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: GetRandomGamePiece
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 639
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Returns a random game piece from the list of gem prefabs, with consideration for gem rarity.
  example: []
  syntax:
    content: private GameObject GetRandomGamePiece()
    return:
      type: UnityEngine.GameObject
      description: A GameObject representing a random game piece.
    content.vb: Private Function GetRandomGamePiece() As GameObject
  overload: TaleOfTiles.Arena.BoardManager.GetRandomGamePiece*
- uid: TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePiece
  commentId: M:TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePiece
  id: GetRandomExistingGamePiece
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: GetRandomExistingGamePiece()
  nameWithType: BoardManager.GetRandomExistingGamePiece()
  fullName: TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePiece()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: GetRandomExistingGamePiece
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 690
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Retrieves a random existing game piece from the game board.
  example: []
  syntax:
    content: public GamePiece GetRandomExistingGamePiece()
    return:
      type: TaleOfTiles.Arena.GamePiece
      description: A GamePiece object randomly chosen from the existing game pieces on the board.
    content.vb: Public Function GetRandomExistingGamePiece() As GamePiece
  overload: TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePiece*
- uid: TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePieceWithStatus(TaleOfTiles.Card.Gems.GemStatusEffectType)
  commentId: M:TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePieceWithStatus(TaleOfTiles.Card.Gems.GemStatusEffectType)
  id: GetRandomExistingGamePieceWithStatus(TaleOfTiles.Card.Gems.GemStatusEffectType)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: GetRandomExistingGamePieceWithStatus(GemStatusEffectType)
  nameWithType: BoardManager.GetRandomExistingGamePieceWithStatus(GemStatusEffectType)
  fullName: TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePieceWithStatus(TaleOfTiles.Card.Gems.GemStatusEffectType)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: GetRandomExistingGamePieceWithStatus
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 700
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Retrieves a random existing game piece with a specific status from the game board.
  example: []
  syntax:
    content: public GamePiece GetRandomExistingGamePieceWithStatus(GemStatusEffectType type)
    parameters:
    - id: type
      type: TaleOfTiles.Card.Gems.GemStatusEffectType
      description: The status type to filter game pieces by.
    return:
      type: TaleOfTiles.Arena.GamePiece
      description: A GamePiece object randomly chosen from the existing game pieces on the board with the specified status.
    content.vb: Public Function GetRandomExistingGamePieceWithStatus(type As GemStatusEffectType) As GamePiece
  overload: TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePieceWithStatus*
- uid: TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePieces(System.Single)
  commentId: M:TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePieces(System.Single)
  id: GetRandomExistingGamePieces(System.Single)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: GetRandomExistingGamePieces(float)
  nameWithType: BoardManager.GetRandomExistingGamePieces(float)
  fullName: TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePieces(float)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: GetRandomExistingGamePieces
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 724
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Retrieves a list of random existing game pieces from the game board.
  example: []
  syntax:
    content: public List<GamePiece> GetRandomExistingGamePieces(float part_of_board)
    parameters:
    - id: part_of_board
      type: System.Single
      description: The fraction of the board to retrieve game pieces from.
    return:
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: A list of GamePiece objects randomly chosen from the existing game pieces on the board.
    content.vb: Public Function GetRandomExistingGamePieces(part_of_board As Single) As List(Of GamePiece)
  overload: TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePieces*
  nameWithType.vb: BoardManager.GetRandomExistingGamePieces(Single)
  fullName.vb: TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePieces(Single)
  name.vb: GetRandomExistingGamePieces(Single)
- uid: TaleOfTiles.Arena.BoardManager.GetRandomCollectible
  commentId: M:TaleOfTiles.Arena.BoardManager.GetRandomCollectible
  id: GetRandomCollectible
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: GetRandomCollectible()
  nameWithType: BoardManager.GetRandomCollectible()
  fullName: TaleOfTiles.Arena.BoardManager.GetRandomCollectible()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: GetRandomCollectible
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 764
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Retrieves a random collectible from the set of collectible prefabs.
  example: []
  syntax:
    content: private GameObject GetRandomCollectible()
    return:
      type: UnityEngine.GameObject
      description: A GameObject representing a random collectible.
    content.vb: Private Function GetRandomCollectible() As GameObject
  overload: TaleOfTiles.Arena.BoardManager.GetRandomCollectible*
- uid: TaleOfTiles.Arena.BoardManager.PlaceGamePiece(TaleOfTiles.Arena.GamePiece,System.Int32,System.Int32)
  commentId: M:TaleOfTiles.Arena.BoardManager.PlaceGamePiece(TaleOfTiles.Arena.GamePiece,System.Int32,System.Int32)
  id: PlaceGamePiece(TaleOfTiles.Arena.GamePiece,System.Int32,System.Int32)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: PlaceGamePiece(GamePiece, int, int)
  nameWithType: BoardManager.PlaceGamePiece(GamePiece, int, int)
  fullName: TaleOfTiles.Arena.BoardManager.PlaceGamePiece(TaleOfTiles.Arena.GamePiece, int, int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: PlaceGamePiece
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 775
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Places a game piece at a specific location on the game board.
  example: []
  syntax:
    content: public void PlaceGamePiece(GamePiece gamePiece, int x, int y)
    parameters:
    - id: gamePiece
      type: TaleOfTiles.Arena.GamePiece
      description: The game piece to place.
    - id: x
      type: System.Int32
      description: The x-coordinate of the location.
    - id: y
      type: System.Int32
      description: The y-coordinate of the location.
    content.vb: Public Sub PlaceGamePiece(gamePiece As GamePiece, x As Integer, y As Integer)
  overload: TaleOfTiles.Arena.BoardManager.PlaceGamePiece*
  nameWithType.vb: BoardManager.PlaceGamePiece(GamePiece, Integer, Integer)
  fullName.vb: TaleOfTiles.Arena.BoardManager.PlaceGamePiece(TaleOfTiles.Arena.GamePiece, Integer, Integer)
  name.vb: PlaceGamePiece(GamePiece, Integer, Integer)
- uid: TaleOfTiles.Arena.BoardManager.MakeGamePiece(UnityEngine.GameObject,System.Int32,System.Int32,System.Int32,System.Single)
  commentId: M:TaleOfTiles.Arena.BoardManager.MakeGamePiece(UnityEngine.GameObject,System.Int32,System.Int32,System.Int32,System.Single)
  id: MakeGamePiece(UnityEngine.GameObject,System.Int32,System.Int32,System.Int32,System.Single)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: MakeGamePiece(GameObject, int, int, int, float)
  nameWithType: BoardManager.MakeGamePiece(GameObject, int, int, int, float)
  fullName: TaleOfTiles.Arena.BoardManager.MakeGamePiece(UnityEngine.GameObject, int, int, int, float)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: MakeGamePiece
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 810
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Creates a game piece at a specific location on the game board.
  example: []
  syntax:
    content: private void MakeGamePiece(GameObject prefab, int x, int y, int falseYOffset = 0, float moveTime = 0.1)
    parameters:
    - id: prefab
      type: UnityEngine.GameObject
      description: The GameObject to instantiate as a game piece.
    - id: x
      type: System.Int32
      description: The x-coordinate of the location.
    - id: y
      type: System.Int32
      description: The y-coordinate of the location.
    - id: falseYOffset
      type: System.Int32
      description: The Y offset for creating the game piece.
    - id: moveTime
      type: System.Single
      description: The time taken to move a piece.
    content.vb: Private Sub MakeGamePiece(prefab As GameObject, x As Integer, y As Integer, falseYOffset As Integer = 0, moveTime As Single = 0.1)
  overload: TaleOfTiles.Arena.BoardManager.MakeGamePiece*
  nameWithType.vb: BoardManager.MakeGamePiece(GameObject, Integer, Integer, Integer, Single)
  fullName.vb: TaleOfTiles.Arena.BoardManager.MakeGamePiece(UnityEngine.GameObject, Integer, Integer, Integer, Single)
  name.vb: MakeGamePiece(GameObject, Integer, Integer, Integer, Single)
- uid: TaleOfTiles.Arena.BoardManager.FillRandomGamePieceAt(System.Int32,System.Int32,System.Int32,System.Single)
  commentId: M:TaleOfTiles.Arena.BoardManager.FillRandomGamePieceAt(System.Int32,System.Int32,System.Int32,System.Single)
  id: FillRandomGamePieceAt(System.Int32,System.Int32,System.Int32,System.Single)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: FillRandomGamePieceAt(int, int, int, float)
  nameWithType: BoardManager.FillRandomGamePieceAt(int, int, int, float)
  fullName: TaleOfTiles.Arena.BoardManager.FillRandomGamePieceAt(int, int, int, float)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FillRandomGamePieceAt
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 839
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Creates a random game piece at the specified position on the game board.
  example: []
  syntax:
    content: private GamePiece FillRandomGamePieceAt(int x, int y, int falseYOffset = 0, float moveTime = 0.1)
    parameters:
    - id: x
      type: System.Int32
      description: The x-coordinate of the position.
    - id: y
      type: System.Int32
      description: The y-coordinate of the position.
    - id: falseYOffset
      type: System.Int32
      description: The Y offset for creating the game piece.
    - id: moveTime
      type: System.Single
      description: The time taken to move a piece.
    return:
      type: TaleOfTiles.Arena.GamePiece
      description: The GamePiece object created at the specified position.
    content.vb: Private Function FillRandomGamePieceAt(x As Integer, y As Integer, falseYOffset As Integer = 0, moveTime As Single = 0.1) As GamePiece
  overload: TaleOfTiles.Arena.BoardManager.FillRandomGamePieceAt*
  nameWithType.vb: BoardManager.FillRandomGamePieceAt(Integer, Integer, Integer, Single)
  fullName.vb: TaleOfTiles.Arena.BoardManager.FillRandomGamePieceAt(Integer, Integer, Integer, Single)
  name.vb: FillRandomGamePieceAt(Integer, Integer, Integer, Single)
- uid: TaleOfTiles.Arena.BoardManager.FillRandomCollectibleAt(System.Int32,System.Int32,System.Int32,System.Single)
  commentId: M:TaleOfTiles.Arena.BoardManager.FillRandomCollectibleAt(System.Int32,System.Int32,System.Int32,System.Single)
  id: FillRandomCollectibleAt(System.Int32,System.Int32,System.Int32,System.Single)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: FillRandomCollectibleAt(int, int, int, float)
  nameWithType: BoardManager.FillRandomCollectibleAt(int, int, int, float)
  fullName: TaleOfTiles.Arena.BoardManager.FillRandomCollectibleAt(int, int, int, float)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FillRandomCollectibleAt
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 860
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Creates a random collectible at the specified position on the game board.
  example: []
  syntax:
    content: private GamePiece FillRandomCollectibleAt(int x, int y, int falseYOffset = 0, float moveTime = 0.1)
    parameters:
    - id: x
      type: System.Int32
      description: The x-coordinate of the position.
    - id: y
      type: System.Int32
      description: The y-coordinate of the position.
    - id: falseYOffset
      type: System.Int32
      description: The Y offset for creating the collectible.
    - id: moveTime
      type: System.Single
      description: The time taken to move a piece.
    return:
      type: TaleOfTiles.Arena.GamePiece
      description: The GamePiece object created at the specified position.
    content.vb: Private Function FillRandomCollectibleAt(x As Integer, y As Integer, falseYOffset As Integer = 0, moveTime As Single = 0.1) As GamePiece
  overload: TaleOfTiles.Arena.BoardManager.FillRandomCollectibleAt*
  nameWithType.vb: BoardManager.FillRandomCollectibleAt(Integer, Integer, Integer, Single)
  fullName.vb: TaleOfTiles.Arena.BoardManager.FillRandomCollectibleAt(Integer, Integer, Integer, Single)
  name.vb: FillRandomCollectibleAt(Integer, Integer, Integer, Single)
- uid: TaleOfTiles.Arena.BoardManager.MakeBomb(UnityEngine.GameObject,System.Int32,System.Int32)
  commentId: M:TaleOfTiles.Arena.BoardManager.MakeBomb(UnityEngine.GameObject,System.Int32,System.Int32)
  id: MakeBomb(UnityEngine.GameObject,System.Int32,System.Int32)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: MakeBomb(GameObject, int, int)
  nameWithType: BoardManager.MakeBomb(GameObject, int, int)
  fullName: TaleOfTiles.Arena.BoardManager.MakeBomb(UnityEngine.GameObject, int, int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: MakeBomb
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 879
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Creates a bomb at the specified position on the game board.
  example: []
  syntax:
    content: private GameObject MakeBomb(GameObject prefab, int x, int y)
    parameters:
    - id: prefab
      type: UnityEngine.GameObject
      description: The prefab to create the bomb from.
    - id: x
      type: System.Int32
      description: The x-coordinate of the position.
    - id: y
      type: System.Int32
      description: The y-coordinate of the position.
    return:
      type: UnityEngine.GameObject
      description: The Bomb object created at the specified position.
    content.vb: Private Function MakeBomb(prefab As GameObject, x As Integer, y As Integer) As GameObject
  overload: TaleOfTiles.Arena.BoardManager.MakeBomb*
  nameWithType.vb: BoardManager.MakeBomb(GameObject, Integer, Integer)
  fullName.vb: TaleOfTiles.Arena.BoardManager.MakeBomb(UnityEngine.GameObject, Integer, Integer)
  name.vb: MakeBomb(GameObject, Integer, Integer)
- uid: TaleOfTiles.Arena.BoardManager.DropBomb(System.Int32,System.Int32,UnityEngine.Vector2,System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  commentId: M:TaleOfTiles.Arena.BoardManager.DropBomb(System.Int32,System.Int32,UnityEngine.Vector2,System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  id: DropBomb(System.Int32,System.Int32,UnityEngine.Vector2,System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: DropBomb(int, int, Vector2, List<GamePiece>)
  nameWithType: BoardManager.DropBomb(int, int, Vector2, List<GamePiece>)
  fullName: TaleOfTiles.Arena.BoardManager.DropBomb(int, int, UnityEngine.Vector2, System.Collections.Generic.List<TaleOfTiles.Arena.GamePiece>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: DropBomb
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 909
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Drops a bomb at the specified position on the game board, given a list of matching game pieces.
  example: []
  syntax:
    content: private GameObject DropBomb(int x, int y, Vector2 swapDirection, List<GamePiece> gamePieces)
    parameters:
    - id: x
      type: System.Int32
      description: The x-coordinate of the position.
    - id: y
      type: System.Int32
      description: The y-coordinate of the position.
    - id: swapDirection
      type: UnityEngine.Vector2
      description: The direction of the swap that created the match.
    - id: gamePieces
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: The list of matching game pieces.
    return:
      type: UnityEngine.GameObject
      description: The Bomb object created at the specified position.
    content.vb: Private Function DropBomb(x As Integer, y As Integer, swapDirection As Vector2, gamePieces As List(Of GamePiece)) As GameObject
  overload: TaleOfTiles.Arena.BoardManager.DropBomb*
  nameWithType.vb: BoardManager.DropBomb(Integer, Integer, Vector2, List(Of GamePiece))
  fullName.vb: TaleOfTiles.Arena.BoardManager.DropBomb(Integer, Integer, UnityEngine.Vector2, System.Collections.Generic.List(Of TaleOfTiles.Arena.GamePiece))
  name.vb: DropBomb(Integer, Integer, Vector2, List(Of GamePiece))
- uid: TaleOfTiles.Arena.BoardManager.GetColumnPieces(System.Int32)
  commentId: M:TaleOfTiles.Arena.BoardManager.GetColumnPieces(System.Int32)
  id: GetColumnPieces(System.Int32)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: GetColumnPieces(int)
  nameWithType: BoardManager.GetColumnPieces(int)
  fullName: TaleOfTiles.Arena.BoardManager.GetColumnPieces(int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: GetColumnPieces
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 977
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Gets a list of GamePieces in a specified column.
  example: []
  syntax:
    content: private List<GamePiece> GetColumnPieces(int column)
    parameters:
    - id: column
      type: System.Int32
      description: The column to retrieve game pieces from.
    return:
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: A list of GamePiece objects in the specified column.
    content.vb: Private Function GetColumnPieces(column As Integer) As List(Of GamePiece)
  overload: TaleOfTiles.Arena.BoardManager.GetColumnPieces*
  nameWithType.vb: BoardManager.GetColumnPieces(Integer)
  fullName.vb: TaleOfTiles.Arena.BoardManager.GetColumnPieces(Integer)
  name.vb: GetColumnPieces(Integer)
- uid: TaleOfTiles.Arena.BoardManager.GetRowPieces(System.Int32)
  commentId: M:TaleOfTiles.Arena.BoardManager.GetRowPieces(System.Int32)
  id: GetRowPieces(System.Int32)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: GetRowPieces(int)
  nameWithType: BoardManager.GetRowPieces(int)
  fullName: TaleOfTiles.Arena.BoardManager.GetRowPieces(int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: GetRowPieces
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 997
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Gets a list of GamePieces in a specified row.
  example: []
  syntax:
    content: private List<GamePiece> GetRowPieces(int row)
    parameters:
    - id: row
      type: System.Int32
      description: The row to retrieve game pieces from.
    return:
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: A list of GamePiece objects in the specified row.
    content.vb: Private Function GetRowPieces(row As Integer) As List(Of GamePiece)
  overload: TaleOfTiles.Arena.BoardManager.GetRowPieces*
  nameWithType.vb: BoardManager.GetRowPieces(Integer)
  fullName.vb: TaleOfTiles.Arena.BoardManager.GetRowPieces(Integer)
  name.vb: GetRowPieces(Integer)
- uid: TaleOfTiles.Arena.BoardManager.GetAdjacentPieces(System.Int32,System.Int32,System.Int32)
  commentId: M:TaleOfTiles.Arena.BoardManager.GetAdjacentPieces(System.Int32,System.Int32,System.Int32)
  id: GetAdjacentPieces(System.Int32,System.Int32,System.Int32)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: GetAdjacentPieces(int, int, int)
  nameWithType: BoardManager.GetAdjacentPieces(int, int, int)
  fullName: TaleOfTiles.Arena.BoardManager.GetAdjacentPieces(int, int, int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: GetAdjacentPieces
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1019
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Gets all GamePieces adjacent to a position (x,y).
  example: []
  syntax:
    content: private List<GamePiece> GetAdjacentPieces(int x, int y, int offset = 1)
    parameters:
    - id: x
      type: System.Int32
      description: The x-coordinate of the position.
    - id: y
      type: System.Int32
      description: The y-coordinate of the position.
    - id: offset
      type: System.Int32
      description: The distance from the position to consider as adjacent.
    return:
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: A list of GamePiece objects adjacent to the specified position.
    content.vb: Private Function GetAdjacentPieces(x As Integer, y As Integer, offset As Integer = 1) As List(Of GamePiece)
  overload: TaleOfTiles.Arena.BoardManager.GetAdjacentPieces*
  nameWithType.vb: BoardManager.GetAdjacentPieces(Integer, Integer, Integer)
  fullName.vb: TaleOfTiles.Arena.BoardManager.GetAdjacentPieces(Integer, Integer, Integer)
  name.vb: GetAdjacentPieces(Integer, Integer, Integer)
- uid: TaleOfTiles.Arena.BoardManager.GetBombedPieces(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  commentId: M:TaleOfTiles.Arena.BoardManager.GetBombedPieces(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  id: GetBombedPieces(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: GetBombedPieces(List<GamePiece>)
  nameWithType: BoardManager.GetBombedPieces(List<GamePiece>)
  fullName: TaleOfTiles.Arena.BoardManager.GetBombedPieces(System.Collections.Generic.List<TaleOfTiles.Arena.GamePiece>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: GetBombedPieces
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1044
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Given a list of GamePieces, returns a new List of GamePieces that would be destroyed by bombs from the original list.
  example: []
  syntax:
    content: private List<GamePiece> GetBombedPieces(List<GamePiece> gamePieces)
    parameters:
    - id: gamePieces
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: The original list of game pieces.
    return:
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: A list of GamePiece objects that would be destroyed by bombs from the original list.
    content.vb: Private Function GetBombedPieces(gamePieces As List(Of GamePiece)) As List(Of GamePiece)
  overload: TaleOfTiles.Arena.BoardManager.GetBombedPieces*
  nameWithType.vb: BoardManager.GetBombedPieces(List(Of GamePiece))
  fullName.vb: TaleOfTiles.Arena.BoardManager.GetBombedPieces(System.Collections.Generic.List(Of TaleOfTiles.Arena.GamePiece))
  name.vb: GetBombedPieces(List(Of GamePiece))
- uid: TaleOfTiles.Arena.BoardManager.ActivateBomb(UnityEngine.GameObject)
  commentId: M:TaleOfTiles.Arena.BoardManager.ActivateBomb(UnityEngine.GameObject)
  id: ActivateBomb(UnityEngine.GameObject)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: ActivateBomb(GameObject)
  nameWithType: BoardManager.ActivateBomb(GameObject)
  fullName: TaleOfTiles.Arena.BoardManager.ActivateBomb(UnityEngine.GameObject)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: ActivateBomb
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1097
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Activates a bomb in the game board and treats it as a normal GamePiece.
  example: []
  syntax:
    content: private void ActivateBomb(GameObject bomb)
    parameters:
    - id: bomb
      type: UnityEngine.GameObject
      description: The bomb to be activated.
    content.vb: Private Sub ActivateBomb(bomb As GameObject)
  overload: TaleOfTiles.Arena.BoardManager.ActivateBomb*
- uid: TaleOfTiles.Arena.BoardManager.FindAllCollectibles
  commentId: M:TaleOfTiles.Arena.BoardManager.FindAllCollectibles
  id: FindAllCollectibles
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: FindAllCollectibles()
  nameWithType: BoardManager.FindAllCollectibles()
  fullName: TaleOfTiles.Arena.BoardManager.FindAllCollectibles()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FindAllCollectibles
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1114
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Finds all Collectibles in the Board.
  example: []
  syntax:
    content: private List<GamePiece> FindAllCollectibles()
    return:
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: A list of GamePiece objects that are collectibles.
    content.vb: Private Function FindAllCollectibles() As List(Of GamePiece)
  overload: TaleOfTiles.Arena.BoardManager.FindAllCollectibles*
- uid: TaleOfTiles.Arena.BoardManager.RemoveCollectibles(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  commentId: M:TaleOfTiles.Arena.BoardManager.RemoveCollectibles(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  id: RemoveCollectibles(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: RemoveCollectibles(List<GamePiece>)
  nameWithType: BoardManager.RemoveCollectibles(List<GamePiece>)
  fullName: TaleOfTiles.Arena.BoardManager.RemoveCollectibles(System.Collections.Generic.List<TaleOfTiles.Arena.GamePiece>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: RemoveCollectibles
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1133
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Removes any Collectibles from the list if they can cleared by Bombs.
  example: []
  syntax:
    content: private List<GamePiece> RemoveCollectibles(List<GamePiece> bombedPieces)
    parameters:
    - id: bombedPieces
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: The list of game pieces affected by bombs.
    return:
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: A list of GamePiece objects after removing collectibles.
    content.vb: Private Function RemoveCollectibles(bombedPieces As List(Of GamePiece)) As List(Of GamePiece)
  overload: TaleOfTiles.Arena.BoardManager.RemoveCollectibles*
  nameWithType.vb: BoardManager.RemoveCollectibles(List(Of GamePiece))
  fullName.vb: TaleOfTiles.Arena.BoardManager.RemoveCollectibles(System.Collections.Generic.List(Of TaleOfTiles.Arena.GamePiece))
  name.vb: RemoveCollectibles(List(Of GamePiece))
- uid: TaleOfTiles.Arena.BoardManager.FindGamePieceByMatchValue(UnityEngine.GameObject[],System.String)
  commentId: M:TaleOfTiles.Arena.BoardManager.FindGamePieceByMatchValue(UnityEngine.GameObject[],System.String)
  id: FindGamePieceByMatchValue(UnityEngine.GameObject[],System.String)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: FindGamePieceByMatchValue(GameObject[], string)
  nameWithType: BoardManager.FindGamePieceByMatchValue(GameObject[], string)
  fullName: TaleOfTiles.Arena.BoardManager.FindGamePieceByMatchValue(UnityEngine.GameObject[], string)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FindGamePieceByMatchValue
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1161
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Finds a GamePiece prefab with a given match value from an array of prefabs.
  example: []
  syntax:
    content: private GameObject FindGamePieceByMatchValue(GameObject[] gamePiecePrefabs, string matchValue)
    parameters:
    - id: gamePiecePrefabs
      type: UnityEngine.GameObject[]
      description: The array of prefabs to search from.
    - id: matchValue
      type: System.String
      description: The match value to search for.
    return:
      type: UnityEngine.GameObject
      description: A GameObject from the prefabs that has the specified match value.
    content.vb: Private Function FindGamePieceByMatchValue(gamePiecePrefabs As GameObject(), matchValue As String) As GameObject
  overload: TaleOfTiles.Arena.BoardManager.FindGamePieceByMatchValue*
  nameWithType.vb: BoardManager.FindGamePieceByMatchValue(GameObject(), String)
  fullName.vb: TaleOfTiles.Arena.BoardManager.FindGamePieceByMatchValue(UnityEngine.GameObject(), String)
  name.vb: FindGamePieceByMatchValue(GameObject(), String)
- uid: TaleOfTiles.Arena.BoardManager.IsCornerMatch(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  commentId: M:TaleOfTiles.Arena.BoardManager.IsCornerMatch(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  id: IsCornerMatch(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: IsCornerMatch(List<GamePiece>)
  nameWithType: BoardManager.IsCornerMatch(List<GamePiece>)
  fullName: TaleOfTiles.Arena.BoardManager.IsCornerMatch(System.Collections.Generic.List<TaleOfTiles.Arena.GamePiece>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: IsCornerMatch
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1191
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Checks if a list of matching GamePieces forms an L shaped match.
  example: []
  syntax:
    content: private bool IsCornerMatch(List<GamePiece> gamePieces)
    parameters:
    - id: gamePieces
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: The list of game pieces to check.
    return:
      type: System.Boolean
      description: True if the game pieces form an L shaped match, false otherwise.
    content.vb: Private Function IsCornerMatch(gamePieces As List(Of GamePiece)) As Boolean
  overload: TaleOfTiles.Arena.BoardManager.IsCornerMatch*
  nameWithType.vb: BoardManager.IsCornerMatch(List(Of GamePiece))
  fullName.vb: TaleOfTiles.Arena.BoardManager.IsCornerMatch(System.Collections.Generic.List(Of TaleOfTiles.Arena.GamePiece))
  name.vb: IsCornerMatch(List(Of GamePiece))
- uid: TaleOfTiles.Arena.BoardManager.FindMatchValue(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  commentId: M:TaleOfTiles.Arena.BoardManager.FindMatchValue(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  id: FindMatchValue(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: FindMatchValue(List<GamePiece>)
  nameWithType: BoardManager.FindMatchValue(List<GamePiece>)
  fullName: TaleOfTiles.Arena.BoardManager.FindMatchValue(System.Collections.Generic.List<TaleOfTiles.Arena.GamePiece>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FindMatchValue
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1236
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Given a list of GamePieces, returns the first valid MatchValue found.
  example: []
  syntax:
    content: private string FindMatchValue(List<GamePiece> gamePieces)
    parameters:
    - id: gamePieces
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: The list of game pieces to search from.
    return:
      type: System.String
      description: The match value of the first valid game piece in the list.
    content.vb: Private Function FindMatchValue(gamePieces As List(Of GamePiece)) As String
  overload: TaleOfTiles.Arena.BoardManager.FindMatchValue*
  nameWithType.vb: BoardManager.FindMatchValue(List(Of GamePiece))
  fullName.vb: TaleOfTiles.Arena.BoardManager.FindMatchValue(System.Collections.Generic.List(Of TaleOfTiles.Arena.GamePiece))
  name.vb: FindMatchValue(List(Of GamePiece))
- uid: TaleOfTiles.Arena.BoardManager.FindAllMatchValue(System.String)
  commentId: M:TaleOfTiles.Arena.BoardManager.FindAllMatchValue(System.String)
  id: FindAllMatchValue(System.String)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: FindAllMatchValue(string)
  nameWithType: BoardManager.FindAllMatchValue(string)
  fullName: TaleOfTiles.Arena.BoardManager.FindAllMatchValue(string)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FindAllMatchValue
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1255
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Finds all GamePieces on the Board with a certain MatchValue.
  example: []
  syntax:
    content: private List<GamePiece> FindAllMatchValue(string mValue)
    parameters:
    - id: mValue
      type: System.String
      description: The match value to search for.
    return:
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: A list of GamePiece objects with the specified match value.
    content.vb: Private Function FindAllMatchValue(mValue As String) As List(Of GamePiece)
  overload: TaleOfTiles.Arena.BoardManager.FindAllMatchValue*
  nameWithType.vb: BoardManager.FindAllMatchValue(String)
  fullName.vb: TaleOfTiles.Arena.BoardManager.FindAllMatchValue(String)
  name.vb: FindAllMatchValue(String)
- uid: TaleOfTiles.Arena.BoardManager.IsColorBomb(TaleOfTiles.Arena.GamePiece)
  commentId: M:TaleOfTiles.Arena.BoardManager.IsColorBomb(TaleOfTiles.Arena.GamePiece)
  id: IsColorBomb(TaleOfTiles.Arena.GamePiece)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: IsColorBomb(GamePiece)
  nameWithType: BoardManager.IsColorBomb(GamePiece)
  fullName: TaleOfTiles.Arena.BoardManager.IsColorBomb(TaleOfTiles.Arena.GamePiece)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: IsColorBomb
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1280
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Checks if a GamePiece is a color bomb.
  example: []
  syntax:
    content: private bool IsColorBomb(GamePiece gamePiece)
    parameters:
    - id: gamePiece
      type: TaleOfTiles.Arena.GamePiece
      description: The game piece to check.
    return:
      type: System.Boolean
      description: True if the GamePiece is a color bomb, false otherwise.
    content.vb: Private Function IsColorBomb(gamePiece As GamePiece) As Boolean
  overload: TaleOfTiles.Arena.BoardManager.IsColorBomb*
- uid: TaleOfTiles.Arena.BoardManager.IsWithinBounds(System.Int32,System.Int32)
  commentId: M:TaleOfTiles.Arena.BoardManager.IsWithinBounds(System.Int32,System.Int32)
  id: IsWithinBounds(System.Int32,System.Int32)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: IsWithinBounds(int, int)
  nameWithType: BoardManager.IsWithinBounds(int, int)
  fullName: TaleOfTiles.Arena.BoardManager.IsWithinBounds(int, int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: IsWithinBounds
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1297
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Checks if a position is within the game board's bounds.
  example: []
  syntax:
    content: private bool IsWithinBounds(int x, int y)
    parameters:
    - id: x
      type: System.Int32
      description: The x-coordinate of the position.
    - id: y
      type: System.Int32
      description: The y-coordinate of the position.
    return:
      type: System.Boolean
      description: True if the position is within the game board's bounds, false otherwise.
    content.vb: Private Function IsWithinBounds(x As Integer, y As Integer) As Boolean
  overload: TaleOfTiles.Arena.BoardManager.IsWithinBounds*
  nameWithType.vb: BoardManager.IsWithinBounds(Integer, Integer)
  fullName.vb: TaleOfTiles.Arena.BoardManager.IsWithinBounds(Integer, Integer)
  name.vb: IsWithinBounds(Integer, Integer)
- uid: TaleOfTiles.Arena.BoardManager.ClickTile(TaleOfTiles.Arena.Tile)
  commentId: M:TaleOfTiles.Arena.BoardManager.ClickTile(TaleOfTiles.Arena.Tile)
  id: ClickTile(TaleOfTiles.Arena.Tile)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: ClickTile(Tile)
  nameWithType: BoardManager.ClickTile(Tile)
  fullName: TaleOfTiles.Arena.BoardManager.ClickTile(TaleOfTiles.Arena.Tile)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: ClickTile
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1306
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Sets the clicked tile to the specified tile.
  example: []
  syntax:
    content: public void ClickTile(Tile gem)
    parameters:
    - id: gem
      type: TaleOfTiles.Arena.Tile
      description: The tile that was clicked.
    content.vb: Public Sub ClickTile(gem As Tile)
  overload: TaleOfTiles.Arena.BoardManager.ClickTile*
- uid: TaleOfTiles.Arena.BoardManager.ReleaseTile
  commentId: M:TaleOfTiles.Arena.BoardManager.ReleaseTile
  id: ReleaseTile
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: ReleaseTile()
  nameWithType: BoardManager.ReleaseTile()
  fullName: TaleOfTiles.Arena.BoardManager.ReleaseTile()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: ReleaseTile
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1317
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Releases the clicked and target tiles and switches their positions if both are set.
  example: []
  syntax:
    content: public void ReleaseTile()
    content.vb: Public Sub ReleaseTile()
  overload: TaleOfTiles.Arena.BoardManager.ReleaseTile*
- uid: TaleOfTiles.Arena.BoardManager.SelectNextTile(TaleOfTiles.Arena.Tile)
  commentId: M:TaleOfTiles.Arena.BoardManager.SelectNextTile(TaleOfTiles.Arena.Tile)
  id: SelectNextTile(TaleOfTiles.Arena.Tile)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: SelectNextTile(Tile)
  nameWithType: BoardManager.SelectNextTile(Tile)
  fullName: TaleOfTiles.Arena.BoardManager.SelectNextTile(TaleOfTiles.Arena.Tile)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: SelectNextTile
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1332
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Sets the target tile to the specified tile if it is adjacent to the clicked tile.
  example: []
  syntax:
    content: public void SelectNextTile(Tile gem)
    parameters:
    - id: gem
      type: TaleOfTiles.Arena.Tile
      description: The tile to set as the target.
    content.vb: Public Sub SelectNextTile(gem As Tile)
  overload: TaleOfTiles.Arena.BoardManager.SelectNextTile*
- uid: TaleOfTiles.Arena.BoardManager.IsNextTo(TaleOfTiles.Arena.Tile,TaleOfTiles.Arena.Tile)
  commentId: M:TaleOfTiles.Arena.BoardManager.IsNextTo(TaleOfTiles.Arena.Tile,TaleOfTiles.Arena.Tile)
  id: IsNextTo(TaleOfTiles.Arena.Tile,TaleOfTiles.Arena.Tile)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: IsNextTo(Tile, Tile)
  nameWithType: BoardManager.IsNextTo(Tile, Tile)
  fullName: TaleOfTiles.Arena.BoardManager.IsNextTo(TaleOfTiles.Arena.Tile, TaleOfTiles.Arena.Tile)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: IsNextTo
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1346
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Checks if two tiles are adjacent to each other.
  example: []
  syntax:
    content: private bool IsNextTo(Tile start, Tile end)
    parameters:
    - id: start
      type: TaleOfTiles.Arena.Tile
      description: The first tile.
    - id: end
      type: TaleOfTiles.Arena.Tile
      description: The second tile.
    return:
      type: System.Boolean
      description: True if the tiles are adjacent, false otherwise.
    content.vb: Private Function IsNextTo(start As Tile, [end] As Tile) As Boolean
  overload: TaleOfTiles.Arena.BoardManager.IsNextTo*
- uid: TaleOfTiles.Arena.BoardManager.FindMatches(System.Int32,System.Int32,UnityEngine.Vector2,System.Int32)
  commentId: M:TaleOfTiles.Arena.BoardManager.FindMatches(System.Int32,System.Int32,UnityEngine.Vector2,System.Int32)
  id: FindMatches(System.Int32,System.Int32,UnityEngine.Vector2,System.Int32)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: FindMatches(int, int, Vector2, int)
  nameWithType: BoardManager.FindMatches(int, int, Vector2, int)
  fullName: TaleOfTiles.Arena.BoardManager.FindMatches(int, int, UnityEngine.Vector2, int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FindMatches
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1370
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Finds matches of game pieces starting from a position and searching in a specific direction.
  example: []
  syntax:
    content: private List<GamePiece> FindMatches(int startX, int startY, Vector2 searchDirection, int minLength = 3)
    parameters:
    - id: startX
      type: System.Int32
      description: The x-coordinate of the starting position.
    - id: startY
      type: System.Int32
      description: The y-coordinate of the starting position.
    - id: searchDirection
      type: UnityEngine.Vector2
      description: The direction to search in.
    - id: minLength
      type: System.Int32
      description: The minimum length of a match.
    return:
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: A list of matching GamePiece objects if a match is found, null otherwise.
    content.vb: Private Function FindMatches(startX As Integer, startY As Integer, searchDirection As Vector2, minLength As Integer = 3) As List(Of GamePiece)
  overload: TaleOfTiles.Arena.BoardManager.FindMatches*
  nameWithType.vb: BoardManager.FindMatches(Integer, Integer, Vector2, Integer)
  fullName.vb: TaleOfTiles.Arena.BoardManager.FindMatches(Integer, Integer, UnityEngine.Vector2, Integer)
  name.vb: FindMatches(Integer, Integer, Vector2, Integer)
- uid: TaleOfTiles.Arena.BoardManager.FindVerticalMatches(System.Int32,System.Int32,System.Int32)
  commentId: M:TaleOfTiles.Arena.BoardManager.FindVerticalMatches(System.Int32,System.Int32,System.Int32)
  id: FindVerticalMatches(System.Int32,System.Int32,System.Int32)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: FindVerticalMatches(int, int, int)
  nameWithType: BoardManager.FindVerticalMatches(int, int, int)
  fullName: TaleOfTiles.Arena.BoardManager.FindVerticalMatches(int, int, int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FindVerticalMatches
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1449
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Finds all vertical matches given a position (x,y) in the Board.
  example: []
  syntax:
    content: private List<GamePiece> FindVerticalMatches(int startX, int startY, int minLength = 3)
    parameters:
    - id: startX
      type: System.Int32
      description: The x-coordinate of the starting position.
    - id: startY
      type: System.Int32
      description: The y-coordinate of the starting position.
    - id: minLength
      type: System.Int32
      description: The minimum length of a match.
    return:
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: A list of matching GamePiece objects if a match is found, null otherwise.
    content.vb: Private Function FindVerticalMatches(startX As Integer, startY As Integer, minLength As Integer = 3) As List(Of GamePiece)
  overload: TaleOfTiles.Arena.BoardManager.FindVerticalMatches*
  nameWithType.vb: BoardManager.FindVerticalMatches(Integer, Integer, Integer)
  fullName.vb: TaleOfTiles.Arena.BoardManager.FindVerticalMatches(Integer, Integer, Integer)
  name.vb: FindVerticalMatches(Integer, Integer, Integer)
- uid: TaleOfTiles.Arena.BoardManager.FindHorizontalMatches(System.Int32,System.Int32,System.Int32)
  commentId: M:TaleOfTiles.Arena.BoardManager.FindHorizontalMatches(System.Int32,System.Int32,System.Int32)
  id: FindHorizontalMatches(System.Int32,System.Int32,System.Int32)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: FindHorizontalMatches(int, int, int)
  nameWithType: BoardManager.FindHorizontalMatches(int, int, int)
  fullName: TaleOfTiles.Arena.BoardManager.FindHorizontalMatches(int, int, int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FindHorizontalMatches
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1478
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Finds all horizontal matches given a position (x,y) in the Board.
  example: []
  syntax:
    content: private List<GamePiece> FindHorizontalMatches(int startX, int startY, int minLength = 3)
    parameters:
    - id: startX
      type: System.Int32
      description: The x-coordinate of the starting position.
    - id: startY
      type: System.Int32
      description: The y-coordinate of the starting position.
    - id: minLength
      type: System.Int32
      description: The minimum length of a match.
    return:
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: A list of matching GamePiece objects if a match is found, null otherwise.
    content.vb: Private Function FindHorizontalMatches(startX As Integer, startY As Integer, minLength As Integer = 3) As List(Of GamePiece)
  overload: TaleOfTiles.Arena.BoardManager.FindHorizontalMatches*
  nameWithType.vb: BoardManager.FindHorizontalMatches(Integer, Integer, Integer)
  fullName.vb: TaleOfTiles.Arena.BoardManager.FindHorizontalMatches(Integer, Integer, Integer)
  name.vb: FindHorizontalMatches(Integer, Integer, Integer)
- uid: TaleOfTiles.Arena.BoardManager.FindMatchesAt(System.Int32,System.Int32,System.Int32)
  commentId: M:TaleOfTiles.Arena.BoardManager.FindMatchesAt(System.Int32,System.Int32,System.Int32)
  id: FindMatchesAt(System.Int32,System.Int32,System.Int32)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: FindMatchesAt(int, int, int)
  nameWithType: BoardManager.FindMatchesAt(int, int, int)
  fullName: TaleOfTiles.Arena.BoardManager.FindMatchesAt(int, int, int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FindMatchesAt
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1507
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Finds horizontal and vertical matches at a position (x,y) in the Board.
  example: []
  syntax:
    content: private List<GamePiece> FindMatchesAt(int x, int y, int minLength = 3)
    parameters:
    - id: x
      type: System.Int32
      description: The x-coordinate of the position.
    - id: y
      type: System.Int32
      description: The y-coordinate of the position.
    - id: minLength
      type: System.Int32
      description: The minimum length of a match.
    return:
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: A list of matching GamePiece objects if a match is found.
    content.vb: Private Function FindMatchesAt(x As Integer, y As Integer, minLength As Integer = 3) As List(Of GamePiece)
  overload: TaleOfTiles.Arena.BoardManager.FindMatchesAt*
  nameWithType.vb: BoardManager.FindMatchesAt(Integer, Integer, Integer)
  fullName.vb: TaleOfTiles.Arena.BoardManager.FindMatchesAt(Integer, Integer, Integer)
  name.vb: FindMatchesAt(Integer, Integer, Integer)
- uid: TaleOfTiles.Arena.BoardManager.FindAllMoves
  commentId: M:TaleOfTiles.Arena.BoardManager.FindAllMoves
  id: FindAllMoves
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: FindAllMoves()
  nameWithType: BoardManager.FindAllMoves()
  fullName: TaleOfTiles.Arena.BoardManager.FindAllMoves()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FindAllMoves
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1530
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Finds all possible moves and matches afterwards.
  example: []
  syntax:
    content: public List<Move> FindAllMoves()
    return:
      type: System.Collections.Generic.List{TaleOfTiles.AI.Move}
      description: A list of all possible Move objects.
    content.vb: Public Function FindAllMoves() As List(Of Move)
  overload: TaleOfTiles.Arena.BoardManager.FindAllMoves*
- uid: TaleOfTiles.Arena.BoardManager.FindMatchesAt(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece},System.Int32)
  commentId: M:TaleOfTiles.Arena.BoardManager.FindMatchesAt(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece},System.Int32)
  id: FindMatchesAt(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece},System.Int32)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: FindMatchesAt(List<GamePiece>, int)
  nameWithType: BoardManager.FindMatchesAt(List<GamePiece>, int)
  fullName: TaleOfTiles.Arena.BoardManager.FindMatchesAt(System.Collections.Generic.List<TaleOfTiles.Arena.GamePiece>, int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FindMatchesAt
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1600
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Finds all matches given a list of GamePieces.
  example: []
  syntax:
    content: private List<GamePiece> FindMatchesAt(List<GamePiece> gamePieces, int minLength = 3)
    parameters:
    - id: gamePieces
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: The list of game pieces to search from.
    - id: minLength
      type: System.Int32
      description: The minimum length of a match.
    return:
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: A list of matching GamePiece objects if a match is found.
    content.vb: Private Function FindMatchesAt(gamePieces As List(Of GamePiece), minLength As Integer = 3) As List(Of GamePiece)
  overload: TaleOfTiles.Arena.BoardManager.FindMatchesAt*
  nameWithType.vb: BoardManager.FindMatchesAt(List(Of GamePiece), Integer)
  fullName.vb: TaleOfTiles.Arena.BoardManager.FindMatchesAt(System.Collections.Generic.List(Of TaleOfTiles.Arena.GamePiece), Integer)
  name.vb: FindMatchesAt(List(Of GamePiece), Integer)
- uid: TaleOfTiles.Arena.BoardManager.FindAllMatches
  commentId: M:TaleOfTiles.Arena.BoardManager.FindAllMatches
  id: FindAllMatches
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: FindAllMatches()
  nameWithType: BoardManager.FindAllMatches()
  fullName: TaleOfTiles.Arena.BoardManager.FindAllMatches()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FindAllMatches
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1617
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Finds all matches in the game Board.
  example: []
  syntax:
    content: private List<GamePiece> FindAllMatches()
    return:
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: A list of all GamePiece objects that are part of a match.
    content.vb: Private Function FindAllMatches() As List(Of GamePiece)
  overload: TaleOfTiles.Arena.BoardManager.FindAllMatches*
- uid: TaleOfTiles.Arena.BoardManager.FindCollectiblesAt(System.Int32,System.Boolean)
  commentId: M:TaleOfTiles.Arena.BoardManager.FindCollectiblesAt(System.Int32,System.Boolean)
  id: FindCollectiblesAt(System.Int32,System.Boolean)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: FindCollectiblesAt(int, bool)
  nameWithType: BoardManager.FindCollectiblesAt(int, bool)
  fullName: TaleOfTiles.Arena.BoardManager.FindCollectiblesAt(int, bool)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: FindCollectiblesAt
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1639
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Finds all Collectibles at a certain row.
  example: []
  syntax:
    content: private List<GamePiece> FindCollectiblesAt(int row, bool clearedAtBottomOnly = false)
    parameters:
    - id: row
      type: System.Int32
      description: The row to search for collectibles.
    - id: clearedAtBottomOnly
      type: System.Boolean
      description: If true, only returns collectibles that can be cleared at the bottom.
    return:
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: A list of GamePiece objects that are collectibles in the specified row.
    content.vb: Private Function FindCollectiblesAt(row As Integer, clearedAtBottomOnly As Boolean = False) As List(Of GamePiece)
  overload: TaleOfTiles.Arena.BoardManager.FindCollectiblesAt*
  nameWithType.vb: BoardManager.FindCollectiblesAt(Integer, Boolean)
  fullName.vb: TaleOfTiles.Arena.BoardManager.FindCollectiblesAt(Integer, Boolean)
  name.vb: FindCollectiblesAt(Integer, Boolean)
- uid: TaleOfTiles.Arena.BoardManager.RefillRoutine
  commentId: M:TaleOfTiles.Arena.BoardManager.RefillRoutine
  id: RefillRoutine
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: RefillRoutine()
  nameWithType: BoardManager.RefillRoutine()
  fullName: TaleOfTiles.Arena.BoardManager.RefillRoutine()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: RefillRoutine
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1666
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Refills the game board.
  example: []
  syntax:
    content: private IEnumerator RefillRoutine()
    return:
      type: System.Collections.IEnumerator
    content.vb: Private Function RefillRoutine() As IEnumerator
  overload: TaleOfTiles.Arena.BoardManager.RefillRoutine*
- uid: TaleOfTiles.Arena.BoardManager.ClearAndRefillBoard(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  commentId: M:TaleOfTiles.Arena.BoardManager.ClearAndRefillBoard(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  id: ClearAndRefillBoard(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: ClearAndRefillBoard(List<GamePiece>)
  nameWithType: BoardManager.ClearAndRefillBoard(List<GamePiece>)
  fullName: TaleOfTiles.Arena.BoardManager.ClearAndRefillBoard(System.Collections.Generic.List<TaleOfTiles.Arena.GamePiece>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: ClearAndRefillBoard
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1682
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Clears and refills the Board.
  example: []
  syntax:
    content: private void ClearAndRefillBoard(List<GamePiece> gamePieces)
    parameters:
    - id: gamePieces
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: The game pieces to clear from the board.
    content.vb: Private Sub ClearAndRefillBoard(gamePieces As List(Of GamePiece))
  overload: TaleOfTiles.Arena.BoardManager.ClearAndRefillBoard*
  nameWithType.vb: BoardManager.ClearAndRefillBoard(List(Of GamePiece))
  fullName.vb: TaleOfTiles.Arena.BoardManager.ClearAndRefillBoard(System.Collections.Generic.List(Of TaleOfTiles.Arena.GamePiece))
  name.vb: ClearAndRefillBoard(List(Of GamePiece))
- uid: TaleOfTiles.Arena.BoardManager.ClearAndRefillBoardRoutine(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  commentId: M:TaleOfTiles.Arena.BoardManager.ClearAndRefillBoardRoutine(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  id: ClearAndRefillBoardRoutine(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: ClearAndRefillBoardRoutine(List<GamePiece>)
  nameWithType: BoardManager.ClearAndRefillBoardRoutine(List<GamePiece>)
  fullName: TaleOfTiles.Arena.BoardManager.ClearAndRefillBoardRoutine(System.Collections.Generic.List<TaleOfTiles.Arena.GamePiece>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: ClearAndRefillBoardRoutine
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1695
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Coroutine to clear GamePieces and collapse empty spaces, then refill the Board.
  example: []
  syntax:
    content: private IEnumerator ClearAndRefillBoardRoutine(List<GamePiece> gamePieces)
    parameters:
    - id: gamePieces
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: The game pieces to clear from the board.
    return:
      type: System.Collections.IEnumerator
    content.vb: Private Function ClearAndRefillBoardRoutine(gamePieces As List(Of GamePiece)) As IEnumerator
  overload: TaleOfTiles.Arena.BoardManager.ClearAndRefillBoardRoutine*
  nameWithType.vb: BoardManager.ClearAndRefillBoardRoutine(List(Of GamePiece))
  fullName.vb: TaleOfTiles.Arena.BoardManager.ClearAndRefillBoardRoutine(System.Collections.Generic.List(Of TaleOfTiles.Arena.GamePiece))
  name.vb: ClearAndRefillBoardRoutine(List(Of GamePiece))
- uid: TaleOfTiles.Arena.BoardManager.ScoreMove
  commentId: M:TaleOfTiles.Arena.BoardManager.ScoreMove
  id: ScoreMove
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: ScoreMove()
  nameWithType: BoardManager.ScoreMove()
  fullName: TaleOfTiles.Arena.BoardManager.ScoreMove()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: ScoreMove
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1762
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Handles the scoring of a move and swaps turns if necessary.
  example: []
  syntax:
    content: public void ScoreMove()
    content.vb: Public Sub ScoreMove()
  overload: TaleOfTiles.Arena.BoardManager.ScoreMove*
- uid: TaleOfTiles.Arena.BoardManager.ShuffleBoard
  commentId: M:TaleOfTiles.Arena.BoardManager.ShuffleBoard
  id: ShuffleBoard
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: ShuffleBoard()
  nameWithType: BoardManager.ShuffleBoard()
  fullName: TaleOfTiles.Arena.BoardManager.ShuffleBoard()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: ShuffleBoard
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1789
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Starts the coroutine to shuffle the game board.
  example: []
  syntax:
    content: public void ShuffleBoard()
    content.vb: Public Sub ShuffleBoard()
  overload: TaleOfTiles.Arena.BoardManager.ShuffleBoard*
- uid: TaleOfTiles.Arena.BoardManager.BreakTileAt(System.Int32,System.Int32)
  commentId: M:TaleOfTiles.Arena.BoardManager.BreakTileAt(System.Int32,System.Int32)
  id: BreakTileAt(System.Int32,System.Int32)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: BreakTileAt(int, int)
  nameWithType: BoardManager.BreakTileAt(int, int)
  fullName: TaleOfTiles.Arena.BoardManager.BreakTileAt(int, int)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: BreakTileAt
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1800
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Damages a breakable tile at the specified position.
  example: []
  syntax:
    content: private void BreakTileAt(int x, int y)
    parameters:
    - id: x
      type: System.Int32
      description: The x-coordinate of the tile's position.
    - id: y
      type: System.Int32
      description: The y-coordinate of the tile's position.
    content.vb: Private Sub BreakTileAt(x As Integer, y As Integer)
  overload: TaleOfTiles.Arena.BoardManager.BreakTileAt*
  nameWithType.vb: BoardManager.BreakTileAt(Integer, Integer)
  fullName.vb: TaleOfTiles.Arena.BoardManager.BreakTileAt(Integer, Integer)
  name.vb: BreakTileAt(Integer, Integer)
- uid: TaleOfTiles.Arena.BoardManager.BreakTileAt(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  commentId: M:TaleOfTiles.Arena.BoardManager.BreakTileAt(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  id: BreakTileAt(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: BreakTileAt(List<GamePiece>)
  nameWithType: BoardManager.BreakTileAt(List<GamePiece>)
  fullName: TaleOfTiles.Arena.BoardManager.BreakTileAt(System.Collections.Generic.List<TaleOfTiles.Arena.GamePiece>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: BreakTileAt
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1821
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Damages breakable tiles corresponding to a list of game pieces.
  example: []
  syntax:
    content: private void BreakTileAt(List<GamePiece> gamePieces)
    parameters:
    - id: gamePieces
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: The list of game pieces whose positions should have their tiles damaged.
    content.vb: Private Sub BreakTileAt(gamePieces As List(Of GamePiece))
  overload: TaleOfTiles.Arena.BoardManager.BreakTileAt*
  nameWithType.vb: BoardManager.BreakTileAt(List(Of GamePiece))
  fullName.vb: TaleOfTiles.Arena.BoardManager.BreakTileAt(System.Collections.Generic.List(Of TaleOfTiles.Arena.GamePiece))
  name.vb: BreakTileAt(List(Of GamePiece))
- uid: TaleOfTiles.Arena.BoardManager.GetColumns(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  commentId: M:TaleOfTiles.Arena.BoardManager.GetColumns(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  id: GetColumns(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: GetColumns(List<GamePiece>)
  nameWithType: BoardManager.GetColumns(List<GamePiece>)
  fullName: TaleOfTiles.Arena.BoardManager.GetColumns(System.Collections.Generic.List<TaleOfTiles.Arena.GamePiece>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: GetColumns
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1838
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Given a List of GamePieces, return a list of columns by index number.
  example: []
  syntax:
    content: private List<int> GetColumns(List<GamePiece> gamePieces)
    parameters:
    - id: gamePieces
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: The list of game pieces to find columns from.
    return:
      type: System.Collections.Generic.List{System.Int32}
      description: A list of column indices that the game pieces are in.
    content.vb: Private Function GetColumns(gamePieces As List(Of GamePiece)) As List(Of Integer)
  overload: TaleOfTiles.Arena.BoardManager.GetColumns*
  nameWithType.vb: BoardManager.GetColumns(List(Of GamePiece))
  fullName.vb: TaleOfTiles.Arena.BoardManager.GetColumns(System.Collections.Generic.List(Of TaleOfTiles.Arena.GamePiece))
  name.vb: GetColumns(List(Of GamePiece))
- uid: TaleOfTiles.Arena.BoardManager.CollapseColumn(System.Int32,System.Single)
  commentId: M:TaleOfTiles.Arena.BoardManager.CollapseColumn(System.Int32,System.Single)
  id: CollapseColumn(System.Int32,System.Single)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: CollapseColumn(int, float)
  nameWithType: BoardManager.CollapseColumn(int, float)
  fullName: TaleOfTiles.Arena.BoardManager.CollapseColumn(int, float)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: CollapseColumn
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1862
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Compresses a given column to remove any empty Tile spaces.
  example: []
  syntax:
    content: private List<GamePiece> CollapseColumn(int column, float collapseTime = 0.1)
    parameters:
    - id: column
      type: System.Int32
      description: The column to compress.
    - id: collapseTime
      type: System.Single
      description: The time it takes for the compression to occur.
    return:
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: A list of GamePiece objects that were moved during the compression.
    content.vb: Private Function CollapseColumn(column As Integer, collapseTime As Single = 0.1) As List(Of GamePiece)
  overload: TaleOfTiles.Arena.BoardManager.CollapseColumn*
  nameWithType.vb: BoardManager.CollapseColumn(Integer, Single)
  fullName.vb: TaleOfTiles.Arena.BoardManager.CollapseColumn(Integer, Single)
  name.vb: CollapseColumn(Integer, Single)
- uid: TaleOfTiles.Arena.BoardManager.CollapseColumn(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  commentId: M:TaleOfTiles.Arena.BoardManager.CollapseColumn(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  id: CollapseColumn(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: CollapseColumn(List<GamePiece>)
  nameWithType: BoardManager.CollapseColumn(List<GamePiece>)
  fullName: TaleOfTiles.Arena.BoardManager.CollapseColumn(System.Collections.Generic.List<TaleOfTiles.Arena.GamePiece>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: CollapseColumn
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1911
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Compresses all columns given a list of GamePieces.
  example: []
  syntax:
    content: private List<GamePiece> CollapseColumn(List<GamePiece> gamePieces)
    parameters:
    - id: gamePieces
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: The list of game pieces whose columns should be compressed.
    return:
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: A list of GamePiece objects that were moved during the compression.
    content.vb: Private Function CollapseColumn(gamePieces As List(Of GamePiece)) As List(Of GamePiece)
  overload: TaleOfTiles.Arena.BoardManager.CollapseColumn*
  nameWithType.vb: BoardManager.CollapseColumn(List(Of GamePiece))
  fullName.vb: TaleOfTiles.Arena.BoardManager.CollapseColumn(System.Collections.Generic.List(Of TaleOfTiles.Arena.GamePiece))
  name.vb: CollapseColumn(List(Of GamePiece))
- uid: TaleOfTiles.Arena.BoardManager.CollapseColumn(System.Collections.Generic.List{System.Int32})
  commentId: M:TaleOfTiles.Arena.BoardManager.CollapseColumn(System.Collections.Generic.List{System.Int32})
  id: CollapseColumn(System.Collections.Generic.List{System.Int32})
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: CollapseColumn(List<int>)
  nameWithType: BoardManager.CollapseColumn(List<int>)
  fullName: TaleOfTiles.Arena.BoardManager.CollapseColumn(System.Collections.Generic.List<int>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: CollapseColumn
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1930
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Compresses all columns given a list of column indices.
  example: []
  syntax:
    content: private List<GamePiece> CollapseColumn(List<int> columnsToCollapse)
    parameters:
    - id: columnsToCollapse
      type: System.Collections.Generic.List{System.Int32}
      description: The list of column indices to compress.
    return:
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: A list of GamePiece objects that were moved during the compression.
    content.vb: Private Function CollapseColumn(columnsToCollapse As List(Of Integer)) As List(Of GamePiece)
  overload: TaleOfTiles.Arena.BoardManager.CollapseColumn*
  nameWithType.vb: BoardManager.CollapseColumn(List(Of Integer))
  fullName.vb: TaleOfTiles.Arena.BoardManager.CollapseColumn(System.Collections.Generic.List(Of Integer))
  name.vb: CollapseColumn(List(Of Integer))
- uid: TaleOfTiles.Arena.BoardManager.IsCollapsed(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  commentId: M:TaleOfTiles.Arena.BoardManager.IsCollapsed(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  id: IsCollapsed(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: IsCollapsed(List<GamePiece>)
  nameWithType: BoardManager.IsCollapsed(List<GamePiece>)
  fullName: TaleOfTiles.Arena.BoardManager.IsCollapsed(System.Collections.Generic.List<TaleOfTiles.Arena.GamePiece>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: IsCollapsed
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1946
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Checks if the GamePieces have reached their destination positions on collapse.
  example: []
  syntax:
    content: private bool IsCollapsed(List<GamePiece> gamePieces)
    parameters:
    - id: gamePieces
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: The list of game pieces to check.
    return:
      type: System.Boolean
      description: True if all game pieces have reached their destination, false otherwise.
    content.vb: Private Function IsCollapsed(gamePieces As List(Of GamePiece)) As Boolean
  overload: TaleOfTiles.Arena.BoardManager.IsCollapsed*
  nameWithType.vb: BoardManager.IsCollapsed(List(Of GamePiece))
  fullName.vb: TaleOfTiles.Arena.BoardManager.IsCollapsed(System.Collections.Generic.List(Of TaleOfTiles.Arena.GamePiece))
  name.vb: IsCollapsed(List(Of GamePiece))
- uid: TaleOfTiles.Arena.BoardManager.ClearAndCollapseRoutine(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  commentId: M:TaleOfTiles.Arena.BoardManager.ClearAndCollapseRoutine(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  id: ClearAndCollapseRoutine(System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece})
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: ClearAndCollapseRoutine(List<GamePiece>)
  nameWithType: BoardManager.ClearAndCollapseRoutine(List<GamePiece>)
  fullName: TaleOfTiles.Arena.BoardManager.ClearAndCollapseRoutine(System.Collections.Generic.List<TaleOfTiles.Arena.GamePiece>)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: ClearAndCollapseRoutine
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 1971
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Coroutine to clear GamePieces from the Board and collapse any empty spaces.
  example: []
  syntax:
    content: private IEnumerator ClearAndCollapseRoutine(List<GamePiece> gamePieces)
    parameters:
    - id: gamePieces
      type: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
      description: The game pieces to clear from the board.
    return:
      type: System.Collections.IEnumerator
    content.vb: Private Function ClearAndCollapseRoutine(gamePieces As List(Of GamePiece)) As IEnumerator
  overload: TaleOfTiles.Arena.BoardManager.ClearAndCollapseRoutine*
  nameWithType.vb: BoardManager.ClearAndCollapseRoutine(List(Of GamePiece))
  fullName.vb: TaleOfTiles.Arena.BoardManager.ClearAndCollapseRoutine(System.Collections.Generic.List(Of TaleOfTiles.Arena.GamePiece))
  name.vb: ClearAndCollapseRoutine(List(Of GamePiece))
- uid: TaleOfTiles.Arena.BoardManager.GetTile(TaleOfTiles.Arena.GamePiece)
  commentId: M:TaleOfTiles.Arena.BoardManager.GetTile(TaleOfTiles.Arena.GamePiece)
  id: GetTile(TaleOfTiles.Arena.GamePiece)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: GetTile(GamePiece)
  nameWithType: BoardManager.GetTile(GamePiece)
  fullName: TaleOfTiles.Arena.BoardManager.GetTile(TaleOfTiles.Arena.GamePiece)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: GetTile
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 2096
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Retrieves the Tile associated with a GamePiece.
  example: []
  syntax:
    content: public Tile GetTile(GamePiece piece)
    parameters:
    - id: piece
      type: TaleOfTiles.Arena.GamePiece
      description: The game piece to get the tile for.
    return:
      type: TaleOfTiles.Arena.Tile
      description: The Tile associated with the provided game piece.
    content.vb: Public Function GetTile(piece As GamePiece) As Tile
  overload: TaleOfTiles.Arena.BoardManager.GetTile*
- uid: TaleOfTiles.Arena.BoardManager.GetGamePiece(TaleOfTiles.Arena.Tile)
  commentId: M:TaleOfTiles.Arena.BoardManager.GetGamePiece(TaleOfTiles.Arena.Tile)
  id: GetGamePiece(TaleOfTiles.Arena.Tile)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: GetGamePiece(Tile)
  nameWithType: BoardManager.GetGamePiece(Tile)
  fullName: TaleOfTiles.Arena.BoardManager.GetGamePiece(TaleOfTiles.Arena.Tile)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: GetGamePiece
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 2106
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Retrieves the GamePiece associated with a Tile.
  example: []
  syntax:
    content: public GamePiece GetGamePiece(Tile tile)
    parameters:
    - id: tile
      type: TaleOfTiles.Arena.Tile
      description: The tile to get the game piece for.
    return:
      type: TaleOfTiles.Arena.GamePiece
      description: The GamePiece associated with the provided tile.
    content.vb: Public Function GetGamePiece(tile As Tile) As GamePiece
  overload: TaleOfTiles.Arena.BoardManager.GetGamePiece*
- uid: TaleOfTiles.Arena.BoardManager.EndTurn
  commentId: M:TaleOfTiles.Arena.BoardManager.EndTurn
  id: EndTurn
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: EndTurn()
  nameWithType: BoardManager.EndTurn()
  fullName: TaleOfTiles.Arena.BoardManager.EndTurn()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: EndTurn
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 2114
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Ends the turn by calling EndTurn on all game pieces.
  example: []
  syntax:
    content: public void EndTurn()
    content.vb: Public Sub EndTurn()
  overload: TaleOfTiles.Arena.BoardManager.EndTurn*
- uid: TaleOfTiles.Arena.BoardManager.SwitchTiles(TaleOfTiles.Arena.Tile,TaleOfTiles.Arena.Tile)
  commentId: M:TaleOfTiles.Arena.BoardManager.SwitchTiles(TaleOfTiles.Arena.Tile,TaleOfTiles.Arena.Tile)
  id: SwitchTiles(TaleOfTiles.Arena.Tile,TaleOfTiles.Arena.Tile)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: SwitchTiles(Tile, Tile)
  nameWithType: BoardManager.SwitchTiles(Tile, Tile)
  fullName: TaleOfTiles.Arena.BoardManager.SwitchTiles(TaleOfTiles.Arena.Tile, TaleOfTiles.Arena.Tile)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: SwitchTiles
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 2128
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Swaps the positions of two tiles.
  example: []
  syntax:
    content: public void SwitchTiles(Tile clickedTile, Tile targetTile)
    parameters:
    - id: clickedTile
      type: TaleOfTiles.Arena.Tile
      description: The tile that was clicked on.
    - id: targetTile
      type: TaleOfTiles.Arena.Tile
      description: The tile to switch with the clicked tile.
    content.vb: Public Sub SwitchTiles(clickedTile As Tile, targetTile As Tile)
  overload: TaleOfTiles.Arena.BoardManager.SwitchTiles*
- uid: TaleOfTiles.Arena.BoardManager.SwitchTilesRoutine(TaleOfTiles.Arena.Tile,TaleOfTiles.Arena.Tile)
  commentId: M:TaleOfTiles.Arena.BoardManager.SwitchTilesRoutine(TaleOfTiles.Arena.Tile,TaleOfTiles.Arena.Tile)
  id: SwitchTilesRoutine(TaleOfTiles.Arena.Tile,TaleOfTiles.Arena.Tile)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: SwitchTilesRoutine(Tile, Tile)
  nameWithType: BoardManager.SwitchTilesRoutine(Tile, Tile)
  fullName: TaleOfTiles.Arena.BoardManager.SwitchTilesRoutine(TaleOfTiles.Arena.Tile, TaleOfTiles.Arena.Tile)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: SwitchTilesRoutine
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 2155
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Coroutine to swap the positions of two tiles.
  example: []
  syntax:
    content: private IEnumerator SwitchTilesRoutine(Tile clickedTile, Tile targetTile)
    parameters:
    - id: clickedTile
      type: TaleOfTiles.Arena.Tile
      description: The tile that was clicked on.
    - id: targetTile
      type: TaleOfTiles.Arena.Tile
      description: The tile to switch with the clicked tile.
    return:
      type: System.Collections.IEnumerator
    content.vb: Private Function SwitchTilesRoutine(clickedTile As Tile, targetTile As Tile) As IEnumerator
  overload: TaleOfTiles.Arena.BoardManager.SwitchTilesRoutine*
- uid: TaleOfTiles.Arena.BoardManager.ShuffleBoardRoutine
  commentId: M:TaleOfTiles.Arena.BoardManager.ShuffleBoardRoutine
  id: ShuffleBoardRoutine
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: ShuffleBoardRoutine()
  nameWithType: BoardManager.ShuffleBoardRoutine()
  fullName: TaleOfTiles.Arena.BoardManager.ShuffleBoardRoutine()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: ShuffleBoardRoutine
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 2268
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Coroutine to shuffle non-bomb and non-collectible GamePieces.
  example: []
  syntax:
    content: private IEnumerator ShuffleBoardRoutine()
    return:
      type: System.Collections.IEnumerator
    content.vb: Private Function ShuffleBoardRoutine() As IEnumerator
  overload: TaleOfTiles.Arena.BoardManager.ShuffleBoardRoutine*
- uid: TaleOfTiles.Arena.BoardManager.CheckDeadLock
  commentId: M:TaleOfTiles.Arena.BoardManager.CheckDeadLock
  id: CheckDeadLock
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: CheckDeadLock()
  nameWithType: BoardManager.CheckDeadLock()
  fullName: TaleOfTiles.Arena.BoardManager.CheckDeadLock()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: CheckDeadLock
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 2306
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Checks if the game board is in a deadlock situation.
  example: []
  syntax:
    content: >-
      [ContextMenu("Check Deadlock")]

      public bool CheckDeadLock()
    return:
      type: System.Boolean
      description: True if the board is in deadlock, false otherwise.
    content.vb: >-
      <ContextMenu("Check Deadlock")>

      Public Function CheckDeadLock() As Boolean
  overload: TaleOfTiles.Arena.BoardManager.CheckDeadLock*
  attributes:
  - type: UnityEngine.ContextMenu
    ctor: UnityEngine.ContextMenu.#ctor(System.String)
    arguments:
    - type: System.String
      value: Check Deadlock
- uid: TaleOfTiles.Arena.BoardManager.RestartParticlesWithEffect(TaleOfTiles.Card.Gems.GemStatusEffectType)
  commentId: M:TaleOfTiles.Arena.BoardManager.RestartParticlesWithEffect(TaleOfTiles.Card.Gems.GemStatusEffectType)
  id: RestartParticlesWithEffect(TaleOfTiles.Card.Gems.GemStatusEffectType)
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: RestartParticlesWithEffect(GemStatusEffectType)
  nameWithType: BoardManager.RestartParticlesWithEffect(GemStatusEffectType)
  fullName: TaleOfTiles.Arena.BoardManager.RestartParticlesWithEffect(TaleOfTiles.Card.Gems.GemStatusEffectType)
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: RestartParticlesWithEffect
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 2318
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Restarts particle effects with a specific effect status.
  example: []
  syntax:
    content: public void RestartParticlesWithEffect(GemStatusEffectType effect_status)
    parameters:
    - id: effect_status
      type: TaleOfTiles.Card.Gems.GemStatusEffectType
      description: The effect status to restart particles for.
    content.vb: Public Sub RestartParticlesWithEffect(effect_status As GemStatusEffectType)
  overload: TaleOfTiles.Arena.BoardManager.RestartParticlesWithEffect*
- uid: TaleOfTiles.Arena.BoardManager.RestartPartcilesOnGamePiece
  commentId: M:TaleOfTiles.Arena.BoardManager.RestartPartcilesOnGamePiece
  id: RestartPartcilesOnGamePiece
  parent: TaleOfTiles.Arena.BoardManager
  langs:
  - csharp
  - vb
  name: RestartPartcilesOnGamePiece()
  nameWithType: BoardManager.RestartPartcilesOnGamePiece()
  fullName: TaleOfTiles.Arena.BoardManager.RestartPartcilesOnGamePiece()
  type: Method
  source:
    remote:
      path: Assets/Scripts/BoardManager.cs
      branch: dev
      repo: https://github.com/ElementalMagic/Match-3-Mobile-Game.git
    id: RestartPartcilesOnGamePiece
    path: ../Assets/Scripts/BoardManager.cs
    startLine: 2345
  assemblies:
  - Assembly-CSharp
  namespace: TaleOfTiles.Arena
  summary: Restarts particles on all game pieces.
  example: []
  syntax:
    content: public void RestartPartcilesOnGamePiece()
    content.vb: Public Sub RestartPartcilesOnGamePiece()
  overload: TaleOfTiles.Arena.BoardManager.RestartPartcilesOnGamePiece*
references:
- uid: TaleOfTiles.Arena
  commentId: N:TaleOfTiles.Arena
  href: TaleOfTiles.html
  name: TaleOfTiles.Arena
  nameWithType: TaleOfTiles.Arena
  fullName: TaleOfTiles.Arena
  spec.csharp:
  - uid: TaleOfTiles
    name: TaleOfTiles
    href: TaleOfTiles.html
  - name: .
  - uid: TaleOfTiles.Arena
    name: Arena
    href: TaleOfTiles.Arena.html
  spec.vb:
  - uid: TaleOfTiles
    name: TaleOfTiles
    href: TaleOfTiles.html
  - name: .
  - uid: TaleOfTiles.Arena
    name: Arena
    href: TaleOfTiles.Arena.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: TaleOfTiles.Player.PlayerCharacter
  commentId: T:TaleOfTiles.Player.PlayerCharacter
  parent: TaleOfTiles.Player
  href: TaleOfTiles.Player.PlayerCharacter.html
  name: PlayerCharacter
  nameWithType: PlayerCharacter
  fullName: TaleOfTiles.Player.PlayerCharacter
- uid: TaleOfTiles.Player
  commentId: N:TaleOfTiles.Player
  href: TaleOfTiles.html
  name: TaleOfTiles.Player
  nameWithType: TaleOfTiles.Player
  fullName: TaleOfTiles.Player
  spec.csharp:
  - uid: TaleOfTiles
    name: TaleOfTiles
    href: TaleOfTiles.html
  - name: .
  - uid: TaleOfTiles.Player
    name: Player
    href: TaleOfTiles.Player.html
  spec.vb:
  - uid: TaleOfTiles
    name: TaleOfTiles
    href: TaleOfTiles.html
  - name: .
  - uid: TaleOfTiles.Player
    name: Player
    href: TaleOfTiles.Player.html
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: TaleOfTiles.Arena.Tile[,]
  isExternal: true
  href: TaleOfTiles.Arena.Tile.html
  name: Tile[,]
  nameWithType: Tile[,]
  fullName: TaleOfTiles.Arena.Tile[,]
  nameWithType.vb: Tile(,)
  fullName.vb: TaleOfTiles.Arena.Tile(,)
  name.vb: Tile(,)
  spec.csharp:
  - uid: TaleOfTiles.Arena.Tile
    name: Tile
    href: TaleOfTiles.Arena.Tile.html
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: TaleOfTiles.Arena.Tile
    name: Tile
    href: TaleOfTiles.Arena.Tile.html
  - name: (
  - name: ','
  - name: )
- uid: TaleOfTiles.Arena.GamePiece[,]
  isExternal: true
  href: TaleOfTiles.Arena.GamePiece.html
  name: GamePiece[,]
  nameWithType: GamePiece[,]
  fullName: TaleOfTiles.Arena.GamePiece[,]
  nameWithType.vb: GamePiece(,)
  fullName.vb: TaleOfTiles.Arena.GamePiece(,)
  name.vb: GamePiece(,)
  spec.csharp:
  - uid: TaleOfTiles.Arena.GamePiece
    name: GamePiece
    href: TaleOfTiles.Arena.GamePiece.html
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: TaleOfTiles.Arena.GamePiece
    name: GamePiece
    href: TaleOfTiles.Arena.GamePiece.html
  - name: (
  - name: ','
  - name: )
- uid: System.Collections.Generic.List{UnityEngine.GameObject}
  commentId: T:System.Collections.Generic.List{UnityEngine.GameObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<GameObject>
  nameWithType: List<GameObject>
  fullName: System.Collections.Generic.List<UnityEngine.GameObject>
  nameWithType.vb: List(Of GameObject)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.GameObject)
  name.vb: List(Of GameObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: UnityEngine.GameObject[]
  isExternal: true
  name: GameObject[]
  nameWithType: GameObject[]
  fullName: UnityEngine.GameObject[]
  nameWithType.vb: GameObject()
  fullName.vb: UnityEngine.GameObject()
  name.vb: GameObject()
  spec.csharp:
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TaleOfTiles.Arena.Tile
  commentId: T:TaleOfTiles.Arena.Tile
  parent: TaleOfTiles.Arena
  href: TaleOfTiles.Arena.Tile.html
  name: Tile
  nameWithType: Tile
  fullName: TaleOfTiles.Arena.Tile
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TaleOfTiles.Arena.BoardDeadlock
  commentId: T:TaleOfTiles.Arena.BoardDeadlock
  parent: TaleOfTiles.Arena
  href: TaleOfTiles.Arena.BoardDeadlock.html
  name: BoardDeadlock
  nameWithType: BoardDeadlock
  fullName: TaleOfTiles.Arena.BoardDeadlock
- uid: TaleOfTiles.Arena.BoardShuffler
  commentId: T:TaleOfTiles.Arena.BoardShuffler
  parent: TaleOfTiles.Arena
  href: TaleOfTiles.Arena.BoardShuffler.html
  name: BoardShuffler
  nameWithType: BoardShuffler
  fullName: TaleOfTiles.Arena.BoardShuffler
- uid: TaleOfTiles.UI.ParticleManager
  commentId: T:TaleOfTiles.UI.ParticleManager
  parent: TaleOfTiles.UI
  href: TaleOfTiles.UI.ParticleManager.html
  name: ParticleManager
  nameWithType: ParticleManager
  fullName: TaleOfTiles.UI.ParticleManager
- uid: TaleOfTiles.UI
  commentId: N:TaleOfTiles.UI
  href: TaleOfTiles.html
  name: TaleOfTiles.UI
  nameWithType: TaleOfTiles.UI
  fullName: TaleOfTiles.UI
  spec.csharp:
  - uid: TaleOfTiles
    name: TaleOfTiles
    href: TaleOfTiles.html
  - name: .
  - uid: TaleOfTiles.UI
    name: UI
    href: TaleOfTiles.UI.html
  spec.vb:
  - uid: TaleOfTiles
    name: TaleOfTiles
    href: TaleOfTiles.html
  - name: .
  - uid: TaleOfTiles.UI
    name: UI
    href: TaleOfTiles.UI.html
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Random
  commentId: T:System.Random
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.random
  name: Random
  nameWithType: Random
  fullName: System.Random
- uid: UnityEngine.UI.Text
  commentId: T:UnityEngine.UI.Text
  parent: UnityEngine.UI
  name: Text
  nameWithType: Text
  fullName: UnityEngine.UI.Text
- uid: UnityEngine.UI
  commentId: N:UnityEngine.UI
  name: UnityEngine.UI
  nameWithType: UnityEngine.UI
  fullName: UnityEngine.UI
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
  - name: .
  - uid: UnityEngine.UI
    name: UI
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
  - name: .
  - uid: UnityEngine.UI
    name: UI
- uid: TaleOfTiles.Arena.BoardManager.score*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.score
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_score
  name: score
  nameWithType: BoardManager.score
  fullName: TaleOfTiles.Arena.BoardManager.score
- uid: TaleOfTiles.Arena.BoardManager.Start*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.Start
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_Start
  name: Start
  nameWithType: BoardManager.Start
  fullName: TaleOfTiles.Arena.BoardManager.Start
- uid: TaleOfTiles.Arena.BoardManager.ClearBoard*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.ClearBoard
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_ClearBoard
  name: ClearBoard
  nameWithType: BoardManager.ClearBoard
  fullName: TaleOfTiles.Arena.BoardManager.ClearBoard
- uid: TaleOfTiles.Arena.BoardManager.ReloadBoard*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.ReloadBoard
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_ReloadBoard
  name: ReloadBoard
  nameWithType: BoardManager.ReloadBoard
  fullName: TaleOfTiles.Arena.BoardManager.ReloadBoard
- uid: TaleOfTiles.Arena.BoardManager.CreateGemsPrefabs*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.CreateGemsPrefabs
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_CreateGemsPrefabs
  name: CreateGemsPrefabs
  nameWithType: BoardManager.CreateGemsPrefabs
  fullName: TaleOfTiles.Arena.BoardManager.CreateGemsPrefabs
- uid: TaleOfTiles.Arena.BoardManager.InitTiles*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.InitTiles
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_InitTiles
  name: InitTiles
  nameWithType: BoardManager.InitTiles
  fullName: TaleOfTiles.Arena.BoardManager.InitTiles
- uid: TaleOfTiles.Arena.BoardManager.CanAddCollectible*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.CanAddCollectible
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_CanAddCollectible
  name: CanAddCollectible
  nameWithType: BoardManager.CanAddCollectible
  fullName: TaleOfTiles.Arena.BoardManager.CanAddCollectible
- uid: TaleOfTiles.Arena.BoardManager.HasMatchOnFill*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.HasMatchOnFill
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_HasMatchOnFill_System_Int32_System_Int32_System_Int32_
  name: HasMatchOnFill
  nameWithType: BoardManager.HasMatchOnFill
  fullName: TaleOfTiles.Arena.BoardManager.HasMatchOnFill
- uid: TaleOfTiles.Arena.BoardManager.ClearPieceAt*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.ClearPieceAt
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_ClearPieceAt_System_Int32_System_Int32_
  name: ClearPieceAt
  nameWithType: BoardManager.ClearPieceAt
  fullName: TaleOfTiles.Arena.BoardManager.ClearPieceAt
- uid: System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
  commentId: T:System.Collections.Generic.List{TaleOfTiles.Arena.GamePiece}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<GamePiece>
  nameWithType: List<GamePiece>
  fullName: System.Collections.Generic.List<TaleOfTiles.Arena.GamePiece>
  nameWithType.vb: List(Of GamePiece)
  fullName.vb: System.Collections.Generic.List(Of TaleOfTiles.Arena.GamePiece)
  name.vb: List(Of GamePiece)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TaleOfTiles.Arena.GamePiece
    name: GamePiece
    href: TaleOfTiles.Arena.GamePiece.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TaleOfTiles.Arena.GamePiece
    name: GamePiece
    href: TaleOfTiles.Arena.GamePiece.html
  - name: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: System.Collections.Generic.List{TaleOfTiles.AI.Combination}
  commentId: T:System.Collections.Generic.List{TaleOfTiles.AI.Combination}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Combination>
  nameWithType: List<Combination>
  fullName: System.Collections.Generic.List<TaleOfTiles.AI.Combination>
  nameWithType.vb: List(Of Combination)
  fullName.vb: System.Collections.Generic.List(Of TaleOfTiles.AI.Combination)
  name.vb: List(Of Combination)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TaleOfTiles.AI.Combination
    name: Combination
    href: TaleOfTiles.AI.Combination.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TaleOfTiles.AI.Combination
    name: Combination
    href: TaleOfTiles.AI.Combination.html
  - name: )
- uid: TaleOfTiles.Arena.BoardManager.FillBoard*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.FillBoard
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_FillBoard_System_Int32_System_Single_
  name: FillBoard
  nameWithType: BoardManager.FillBoard
  fullName: TaleOfTiles.Arena.BoardManager.FillBoard
- uid: TaleOfTiles.Arena.BoardManager.FillBoardFromList*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.FillBoardFromList
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_FillBoardFromList_System_Collections_Generic_List_TaleOfTiles_Arena_GamePiece__
  name: FillBoardFromList
  nameWithType: BoardManager.FillBoardFromList
  fullName: TaleOfTiles.Arena.BoardManager.FillBoardFromList
- uid: TaleOfTiles.Arena.BoardManager.GetRandomObject*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.GetRandomObject
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_GetRandomObject_UnityEngine_GameObject___
  name: GetRandomObject
  nameWithType: BoardManager.GetRandomObject
  fullName: TaleOfTiles.Arena.BoardManager.GetRandomObject
- uid: TaleOfTiles.Arena.BoardManager.GetRandomGamePiece*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.GetRandomGamePiece
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_GetRandomGamePiece
  name: GetRandomGamePiece
  nameWithType: BoardManager.GetRandomGamePiece
  fullName: TaleOfTiles.Arena.BoardManager.GetRandomGamePiece
- uid: TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePiece*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePiece
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_GetRandomExistingGamePiece
  name: GetRandomExistingGamePiece
  nameWithType: BoardManager.GetRandomExistingGamePiece
  fullName: TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePiece
- uid: TaleOfTiles.Arena.GamePiece
  commentId: T:TaleOfTiles.Arena.GamePiece
  parent: TaleOfTiles.Arena
  href: TaleOfTiles.Arena.GamePiece.html
  name: GamePiece
  nameWithType: GamePiece
  fullName: TaleOfTiles.Arena.GamePiece
- uid: TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePieceWithStatus*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePieceWithStatus
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_GetRandomExistingGamePieceWithStatus_TaleOfTiles_Card_Gems_GemStatusEffectType_
  name: GetRandomExistingGamePieceWithStatus
  nameWithType: BoardManager.GetRandomExistingGamePieceWithStatus
  fullName: TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePieceWithStatus
- uid: TaleOfTiles.Card.Gems.GemStatusEffectType
  commentId: T:TaleOfTiles.Card.Gems.GemStatusEffectType
  parent: TaleOfTiles.Card.Gems
  href: TaleOfTiles.Card.Gems.GemStatusEffectType.html
  name: GemStatusEffectType
  nameWithType: GemStatusEffectType
  fullName: TaleOfTiles.Card.Gems.GemStatusEffectType
- uid: TaleOfTiles.Card.Gems
  commentId: N:TaleOfTiles.Card.Gems
  href: TaleOfTiles.html
  name: TaleOfTiles.Card.Gems
  nameWithType: TaleOfTiles.Card.Gems
  fullName: TaleOfTiles.Card.Gems
  spec.csharp:
  - uid: TaleOfTiles
    name: TaleOfTiles
    href: TaleOfTiles.html
  - name: .
  - uid: TaleOfTiles.Card
    name: Card
    href: TaleOfTiles.Card.html
  - name: .
  - uid: TaleOfTiles.Card.Gems
    name: Gems
    href: TaleOfTiles.Card.Gems.html
  spec.vb:
  - uid: TaleOfTiles
    name: TaleOfTiles
    href: TaleOfTiles.html
  - name: .
  - uid: TaleOfTiles.Card
    name: Card
    href: TaleOfTiles.Card.html
  - name: .
  - uid: TaleOfTiles.Card.Gems
    name: Gems
    href: TaleOfTiles.Card.Gems.html
- uid: TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePieces*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePieces
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_GetRandomExistingGamePieces_System_Single_
  name: GetRandomExistingGamePieces
  nameWithType: BoardManager.GetRandomExistingGamePieces
  fullName: TaleOfTiles.Arena.BoardManager.GetRandomExistingGamePieces
- uid: TaleOfTiles.Arena.BoardManager.GetRandomCollectible*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.GetRandomCollectible
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_GetRandomCollectible
  name: GetRandomCollectible
  nameWithType: BoardManager.GetRandomCollectible
  fullName: TaleOfTiles.Arena.BoardManager.GetRandomCollectible
- uid: TaleOfTiles.Arena.BoardManager.PlaceGamePiece*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.PlaceGamePiece
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_PlaceGamePiece_TaleOfTiles_Arena_GamePiece_System_Int32_System_Int32_
  name: PlaceGamePiece
  nameWithType: BoardManager.PlaceGamePiece
  fullName: TaleOfTiles.Arena.BoardManager.PlaceGamePiece
- uid: TaleOfTiles.Arena.BoardManager.MakeGamePiece*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.MakeGamePiece
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_MakeGamePiece_UnityEngine_GameObject_System_Int32_System_Int32_System_Int32_System_Single_
  name: MakeGamePiece
  nameWithType: BoardManager.MakeGamePiece
  fullName: TaleOfTiles.Arena.BoardManager.MakeGamePiece
- uid: TaleOfTiles.Arena.BoardManager.FillRandomGamePieceAt*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.FillRandomGamePieceAt
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_FillRandomGamePieceAt_System_Int32_System_Int32_System_Int32_System_Single_
  name: FillRandomGamePieceAt
  nameWithType: BoardManager.FillRandomGamePieceAt
  fullName: TaleOfTiles.Arena.BoardManager.FillRandomGamePieceAt
- uid: TaleOfTiles.Arena.BoardManager.FillRandomCollectibleAt*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.FillRandomCollectibleAt
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_FillRandomCollectibleAt_System_Int32_System_Int32_System_Int32_System_Single_
  name: FillRandomCollectibleAt
  nameWithType: BoardManager.FillRandomCollectibleAt
  fullName: TaleOfTiles.Arena.BoardManager.FillRandomCollectibleAt
- uid: TaleOfTiles.Arena.BoardManager.MakeBomb*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.MakeBomb
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_MakeBomb_UnityEngine_GameObject_System_Int32_System_Int32_
  name: MakeBomb
  nameWithType: BoardManager.MakeBomb
  fullName: TaleOfTiles.Arena.BoardManager.MakeBomb
- uid: TaleOfTiles.Arena.BoardManager.DropBomb*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.DropBomb
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_DropBomb_System_Int32_System_Int32_UnityEngine_Vector2_System_Collections_Generic_List_TaleOfTiles_Arena_GamePiece__
  name: DropBomb
  nameWithType: BoardManager.DropBomb
  fullName: TaleOfTiles.Arena.BoardManager.DropBomb
- uid: TaleOfTiles.Arena.BoardManager.GetColumnPieces*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.GetColumnPieces
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_GetColumnPieces_System_Int32_
  name: GetColumnPieces
  nameWithType: BoardManager.GetColumnPieces
  fullName: TaleOfTiles.Arena.BoardManager.GetColumnPieces
- uid: TaleOfTiles.Arena.BoardManager.GetRowPieces*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.GetRowPieces
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_GetRowPieces_System_Int32_
  name: GetRowPieces
  nameWithType: BoardManager.GetRowPieces
  fullName: TaleOfTiles.Arena.BoardManager.GetRowPieces
- uid: TaleOfTiles.Arena.BoardManager.GetAdjacentPieces*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.GetAdjacentPieces
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_GetAdjacentPieces_System_Int32_System_Int32_System_Int32_
  name: GetAdjacentPieces
  nameWithType: BoardManager.GetAdjacentPieces
  fullName: TaleOfTiles.Arena.BoardManager.GetAdjacentPieces
- uid: TaleOfTiles.Arena.BoardManager.GetBombedPieces*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.GetBombedPieces
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_GetBombedPieces_System_Collections_Generic_List_TaleOfTiles_Arena_GamePiece__
  name: GetBombedPieces
  nameWithType: BoardManager.GetBombedPieces
  fullName: TaleOfTiles.Arena.BoardManager.GetBombedPieces
- uid: TaleOfTiles.Arena.BoardManager.ActivateBomb*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.ActivateBomb
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_ActivateBomb_UnityEngine_GameObject_
  name: ActivateBomb
  nameWithType: BoardManager.ActivateBomb
  fullName: TaleOfTiles.Arena.BoardManager.ActivateBomb
- uid: TaleOfTiles.Arena.BoardManager.FindAllCollectibles*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.FindAllCollectibles
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_FindAllCollectibles
  name: FindAllCollectibles
  nameWithType: BoardManager.FindAllCollectibles
  fullName: TaleOfTiles.Arena.BoardManager.FindAllCollectibles
- uid: TaleOfTiles.Arena.BoardManager.RemoveCollectibles*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.RemoveCollectibles
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_RemoveCollectibles_System_Collections_Generic_List_TaleOfTiles_Arena_GamePiece__
  name: RemoveCollectibles
  nameWithType: BoardManager.RemoveCollectibles
  fullName: TaleOfTiles.Arena.BoardManager.RemoveCollectibles
- uid: TaleOfTiles.Arena.BoardManager.FindGamePieceByMatchValue*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.FindGamePieceByMatchValue
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_FindGamePieceByMatchValue_UnityEngine_GameObject___System_String_
  name: FindGamePieceByMatchValue
  nameWithType: BoardManager.FindGamePieceByMatchValue
  fullName: TaleOfTiles.Arena.BoardManager.FindGamePieceByMatchValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TaleOfTiles.Arena.BoardManager.IsCornerMatch*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.IsCornerMatch
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_IsCornerMatch_System_Collections_Generic_List_TaleOfTiles_Arena_GamePiece__
  name: IsCornerMatch
  nameWithType: BoardManager.IsCornerMatch
  fullName: TaleOfTiles.Arena.BoardManager.IsCornerMatch
- uid: TaleOfTiles.Arena.BoardManager.FindMatchValue*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.FindMatchValue
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_FindMatchValue_System_Collections_Generic_List_TaleOfTiles_Arena_GamePiece__
  name: FindMatchValue
  nameWithType: BoardManager.FindMatchValue
  fullName: TaleOfTiles.Arena.BoardManager.FindMatchValue
- uid: TaleOfTiles.Arena.BoardManager.FindAllMatchValue*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.FindAllMatchValue
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_FindAllMatchValue_System_String_
  name: FindAllMatchValue
  nameWithType: BoardManager.FindAllMatchValue
  fullName: TaleOfTiles.Arena.BoardManager.FindAllMatchValue
- uid: TaleOfTiles.Arena.BoardManager.IsColorBomb*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.IsColorBomb
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_IsColorBomb_TaleOfTiles_Arena_GamePiece_
  name: IsColorBomb
  nameWithType: BoardManager.IsColorBomb
  fullName: TaleOfTiles.Arena.BoardManager.IsColorBomb
- uid: TaleOfTiles.Arena.BoardManager.IsWithinBounds*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.IsWithinBounds
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_IsWithinBounds_System_Int32_System_Int32_
  name: IsWithinBounds
  nameWithType: BoardManager.IsWithinBounds
  fullName: TaleOfTiles.Arena.BoardManager.IsWithinBounds
- uid: TaleOfTiles.Arena.BoardManager.ClickTile*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.ClickTile
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_ClickTile_TaleOfTiles_Arena_Tile_
  name: ClickTile
  nameWithType: BoardManager.ClickTile
  fullName: TaleOfTiles.Arena.BoardManager.ClickTile
- uid: TaleOfTiles.Arena.BoardManager.ReleaseTile*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.ReleaseTile
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_ReleaseTile
  name: ReleaseTile
  nameWithType: BoardManager.ReleaseTile
  fullName: TaleOfTiles.Arena.BoardManager.ReleaseTile
- uid: TaleOfTiles.Arena.BoardManager.SelectNextTile*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.SelectNextTile
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_SelectNextTile_TaleOfTiles_Arena_Tile_
  name: SelectNextTile
  nameWithType: BoardManager.SelectNextTile
  fullName: TaleOfTiles.Arena.BoardManager.SelectNextTile
- uid: TaleOfTiles.Arena.BoardManager.IsNextTo*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.IsNextTo
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_IsNextTo_TaleOfTiles_Arena_Tile_TaleOfTiles_Arena_Tile_
  name: IsNextTo
  nameWithType: BoardManager.IsNextTo
  fullName: TaleOfTiles.Arena.BoardManager.IsNextTo
- uid: TaleOfTiles.Arena.BoardManager.FindMatches*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.FindMatches
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_FindMatches_System_Int32_System_Int32_UnityEngine_Vector2_System_Int32_
  name: FindMatches
  nameWithType: BoardManager.FindMatches
  fullName: TaleOfTiles.Arena.BoardManager.FindMatches
- uid: TaleOfTiles.Arena.BoardManager.FindVerticalMatches*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.FindVerticalMatches
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_FindVerticalMatches_System_Int32_System_Int32_System_Int32_
  name: FindVerticalMatches
  nameWithType: BoardManager.FindVerticalMatches
  fullName: TaleOfTiles.Arena.BoardManager.FindVerticalMatches
- uid: TaleOfTiles.Arena.BoardManager.FindHorizontalMatches*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.FindHorizontalMatches
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_FindHorizontalMatches_System_Int32_System_Int32_System_Int32_
  name: FindHorizontalMatches
  nameWithType: BoardManager.FindHorizontalMatches
  fullName: TaleOfTiles.Arena.BoardManager.FindHorizontalMatches
- uid: TaleOfTiles.Arena.BoardManager.FindMatchesAt*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.FindMatchesAt
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_FindMatchesAt_System_Int32_System_Int32_System_Int32_
  name: FindMatchesAt
  nameWithType: BoardManager.FindMatchesAt
  fullName: TaleOfTiles.Arena.BoardManager.FindMatchesAt
- uid: TaleOfTiles.Arena.BoardManager.FindAllMoves*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.FindAllMoves
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_FindAllMoves
  name: FindAllMoves
  nameWithType: BoardManager.FindAllMoves
  fullName: TaleOfTiles.Arena.BoardManager.FindAllMoves
- uid: System.Collections.Generic.List{TaleOfTiles.AI.Move}
  commentId: T:System.Collections.Generic.List{TaleOfTiles.AI.Move}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Move>
  nameWithType: List<Move>
  fullName: System.Collections.Generic.List<TaleOfTiles.AI.Move>
  nameWithType.vb: List(Of Move)
  fullName.vb: System.Collections.Generic.List(Of TaleOfTiles.AI.Move)
  name.vb: List(Of Move)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TaleOfTiles.AI.Move
    name: Move
    href: TaleOfTiles.AI.Move.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TaleOfTiles.AI.Move
    name: Move
    href: TaleOfTiles.AI.Move.html
  - name: )
- uid: TaleOfTiles.Arena.BoardManager.FindAllMatches*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.FindAllMatches
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_FindAllMatches
  name: FindAllMatches
  nameWithType: BoardManager.FindAllMatches
  fullName: TaleOfTiles.Arena.BoardManager.FindAllMatches
- uid: TaleOfTiles.Arena.BoardManager.FindCollectiblesAt*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.FindCollectiblesAt
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_FindCollectiblesAt_System_Int32_System_Boolean_
  name: FindCollectiblesAt
  nameWithType: BoardManager.FindCollectiblesAt
  fullName: TaleOfTiles.Arena.BoardManager.FindCollectiblesAt
- uid: TaleOfTiles.Arena.BoardManager.RefillRoutine*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.RefillRoutine
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_RefillRoutine
  name: RefillRoutine
  nameWithType: BoardManager.RefillRoutine
  fullName: TaleOfTiles.Arena.BoardManager.RefillRoutine
- uid: TaleOfTiles.Arena.BoardManager.ClearAndRefillBoard*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.ClearAndRefillBoard
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_ClearAndRefillBoard_System_Collections_Generic_List_TaleOfTiles_Arena_GamePiece__
  name: ClearAndRefillBoard
  nameWithType: BoardManager.ClearAndRefillBoard
  fullName: TaleOfTiles.Arena.BoardManager.ClearAndRefillBoard
- uid: TaleOfTiles.Arena.BoardManager.ClearAndRefillBoardRoutine*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.ClearAndRefillBoardRoutine
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_ClearAndRefillBoardRoutine_System_Collections_Generic_List_TaleOfTiles_Arena_GamePiece__
  name: ClearAndRefillBoardRoutine
  nameWithType: BoardManager.ClearAndRefillBoardRoutine
  fullName: TaleOfTiles.Arena.BoardManager.ClearAndRefillBoardRoutine
- uid: TaleOfTiles.Arena.BoardManager.ScoreMove*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.ScoreMove
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_ScoreMove
  name: ScoreMove
  nameWithType: BoardManager.ScoreMove
  fullName: TaleOfTiles.Arena.BoardManager.ScoreMove
- uid: TaleOfTiles.Arena.BoardManager.ShuffleBoard*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.ShuffleBoard
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_ShuffleBoard
  name: ShuffleBoard
  nameWithType: BoardManager.ShuffleBoard
  fullName: TaleOfTiles.Arena.BoardManager.ShuffleBoard
- uid: TaleOfTiles.Arena.BoardManager.BreakTileAt*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.BreakTileAt
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_BreakTileAt_System_Int32_System_Int32_
  name: BreakTileAt
  nameWithType: BoardManager.BreakTileAt
  fullName: TaleOfTiles.Arena.BoardManager.BreakTileAt
- uid: TaleOfTiles.Arena.BoardManager.GetColumns*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.GetColumns
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_GetColumns_System_Collections_Generic_List_TaleOfTiles_Arena_GamePiece__
  name: GetColumns
  nameWithType: BoardManager.GetColumns
  fullName: TaleOfTiles.Arena.BoardManager.GetColumns
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<int>
  nameWithType: List<int>
  fullName: System.Collections.Generic.List<int>
  nameWithType.vb: List(Of Integer)
  fullName.vb: System.Collections.Generic.List(Of Integer)
  name.vb: List(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: TaleOfTiles.Arena.BoardManager.CollapseColumn*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.CollapseColumn
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_CollapseColumn_System_Int32_System_Single_
  name: CollapseColumn
  nameWithType: BoardManager.CollapseColumn
  fullName: TaleOfTiles.Arena.BoardManager.CollapseColumn
- uid: TaleOfTiles.Arena.BoardManager.IsCollapsed*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.IsCollapsed
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_IsCollapsed_System_Collections_Generic_List_TaleOfTiles_Arena_GamePiece__
  name: IsCollapsed
  nameWithType: BoardManager.IsCollapsed
  fullName: TaleOfTiles.Arena.BoardManager.IsCollapsed
- uid: TaleOfTiles.Arena.BoardManager.ClearAndCollapseRoutine*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.ClearAndCollapseRoutine
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_ClearAndCollapseRoutine_System_Collections_Generic_List_TaleOfTiles_Arena_GamePiece__
  name: ClearAndCollapseRoutine
  nameWithType: BoardManager.ClearAndCollapseRoutine
  fullName: TaleOfTiles.Arena.BoardManager.ClearAndCollapseRoutine
- uid: TaleOfTiles.Arena.BoardManager.GetTile*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.GetTile
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_GetTile_TaleOfTiles_Arena_GamePiece_
  name: GetTile
  nameWithType: BoardManager.GetTile
  fullName: TaleOfTiles.Arena.BoardManager.GetTile
- uid: TaleOfTiles.Arena.BoardManager.GetGamePiece*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.GetGamePiece
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_GetGamePiece_TaleOfTiles_Arena_Tile_
  name: GetGamePiece
  nameWithType: BoardManager.GetGamePiece
  fullName: TaleOfTiles.Arena.BoardManager.GetGamePiece
- uid: TaleOfTiles.Arena.BoardManager.EndTurn*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.EndTurn
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_EndTurn
  name: EndTurn
  nameWithType: BoardManager.EndTurn
  fullName: TaleOfTiles.Arena.BoardManager.EndTurn
- uid: TaleOfTiles.Arena.BoardManager.SwitchTiles*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.SwitchTiles
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_SwitchTiles_TaleOfTiles_Arena_Tile_TaleOfTiles_Arena_Tile_
  name: SwitchTiles
  nameWithType: BoardManager.SwitchTiles
  fullName: TaleOfTiles.Arena.BoardManager.SwitchTiles
- uid: TaleOfTiles.Arena.BoardManager.SwitchTilesRoutine*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.SwitchTilesRoutine
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_SwitchTilesRoutine_TaleOfTiles_Arena_Tile_TaleOfTiles_Arena_Tile_
  name: SwitchTilesRoutine
  nameWithType: BoardManager.SwitchTilesRoutine
  fullName: TaleOfTiles.Arena.BoardManager.SwitchTilesRoutine
- uid: TaleOfTiles.Arena.BoardManager.ShuffleBoardRoutine*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.ShuffleBoardRoutine
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_ShuffleBoardRoutine
  name: ShuffleBoardRoutine
  nameWithType: BoardManager.ShuffleBoardRoutine
  fullName: TaleOfTiles.Arena.BoardManager.ShuffleBoardRoutine
- uid: TaleOfTiles.Arena.BoardManager.CheckDeadLock*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.CheckDeadLock
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_CheckDeadLock
  name: CheckDeadLock
  nameWithType: BoardManager.CheckDeadLock
  fullName: TaleOfTiles.Arena.BoardManager.CheckDeadLock
- uid: TaleOfTiles.Arena.BoardManager.RestartParticlesWithEffect*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.RestartParticlesWithEffect
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_RestartParticlesWithEffect_TaleOfTiles_Card_Gems_GemStatusEffectType_
  name: RestartParticlesWithEffect
  nameWithType: BoardManager.RestartParticlesWithEffect
  fullName: TaleOfTiles.Arena.BoardManager.RestartParticlesWithEffect
- uid: TaleOfTiles.Arena.BoardManager.RestartPartcilesOnGamePiece*
  commentId: Overload:TaleOfTiles.Arena.BoardManager.RestartPartcilesOnGamePiece
  href: TaleOfTiles.Arena.BoardManager.html#TaleOfTiles_Arena_BoardManager_RestartPartcilesOnGamePiece
  name: RestartPartcilesOnGamePiece
  nameWithType: BoardManager.RestartPartcilesOnGamePiece
  fullName: TaleOfTiles.Arena.BoardManager.RestartPartcilesOnGamePiece
